{
	"id": "4c432b452269f4c9c8487a24d22b8ca6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/erc20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract BasedToken is ERC20, ERC20Burnable, Pausable, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    uint256 public immutable REWARD_AMOUNT;\n    uint256 public constant CLAIM_COOLDOWN = 1 days;\n\n    mapping(address => bool) public blacklisted;\n    mapping(address => uint256) public lastClaim;\n\n    constructor(uint256 initialSupply) ERC20(\"BasedToken\", \"BASED\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n\n        REWARD_AMOUNT = 10 * 10**decimals();\n        _mint(msg.sender, initialSupply * 10**decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function setBlacklist(address user, bool status) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        blacklisted[user] = status;\n    }\n\n    function claimReward() public {\n        require(\n            block.timestamp >= lastClaim[msg.sender] + CLAIM_COOLDOWN,\n            \"BasedToken: reward not ready\"\n        );\n        require(!blacklisted[msg.sender], \"BasedToken: blacklisted\");\n\n        _mint(msg.sender, REWARD_AMOUNT);\n        lastClaim[msg.sender] = block.timestamp;\n    }\n\n    function _update(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        require(!paused(), \"BasedToken: paused\");\n        require(!blacklisted[from], \"BasedToken: sender blacklisted\");\n        require(!blacklisted[to], \"BasedToken: recipient blacklisted\");\n\n        super._update(from, to, amount);\n    }\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 539,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 545,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 547,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 551,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 539,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 545,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 547,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 549,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 551,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1220,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/erc20.sol": {
				"BasedToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CLAIM_COOLDOWN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/erc20.sol\":302:2137  contract BasedToken is ERC20, ERC20Burnable, Pausable, AccessControl {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/erc20.sol\":712:1030  constructor(uint256 initialSupply) ERC20(\"BasedToken\", \"BASED\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4261736564546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4241534544000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/erc20.sol\":786:828  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contracts/erc20.sol\":797:815  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/erc20.sol\":817:827  msg.sender */\n  caller\n    /* \"contracts/erc20.sol\":786:796  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/erc20.sol\":786:828  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/erc20.sol\":838:873  _grantRole(MINTER_ROLE, msg.sender) */\n  tag_13\n    /* \"contracts/erc20.sol\":415:439  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/erc20.sol\":862:872  msg.sender */\n  caller\n    /* \"contracts/erc20.sol\":838:848  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/erc20.sol\":838:873  _grantRole(MINTER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/erc20.sol\":883:918  _grantRole(PAUSER_ROLE, msg.sender) */\n  tag_14\n    /* \"contracts/erc20.sol\":483:507  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/erc20.sol\":907:917  msg.sender */\n  caller\n    /* \"contracts/erc20.sol\":883:893  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/erc20.sol\":883:918  _grantRole(PAUSER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/erc20.sol\":954:964  decimals() */\n  tag_15\n    /* \"contracts/erc20.sol\":954:962  decimals */\n  shl(0x20, tag_16)\n    /* \"contracts/erc20.sol\":954:964  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/erc20.sol\":950:952  10 */\n  0x0a\n    /* \"contracts/erc20.sol\":950:964  10**decimals() */\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"contracts/erc20.sol\":945:947  10 */\n  0x0a\n    /* \"contracts/erc20.sol\":945:964  10 * 10**decimals() */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/erc20.sol\":929:964  REWARD_AMOUNT = 10 * 10**decimals() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/erc20.sol\":974:1023  _mint(msg.sender, initialSupply * 10**decimals()) */\n  tag_21\n    /* \"contracts/erc20.sol\":980:990  msg.sender */\n  caller\n    /* \"contracts/erc20.sol\":1012:1022  decimals() */\n  tag_22\n    /* \"contracts/erc20.sol\":1012:1020  decimals */\n  shl(0x20, tag_16)\n    /* \"contracts/erc20.sol\":1012:1022  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/erc20.sol\":1008:1010  10 */\n  0x0a\n    /* \"contracts/erc20.sol\":1008:1022  10**decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_23:\n    /* \"contracts/erc20.sol\":992:1005  initialSupply */\n  dup4\n    /* \"contracts/erc20.sol\":992:1022  initialSupply * 10**decimals() */\n  tag_24\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_24:\n    /* \"contracts/erc20.sol\":974:979  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/erc20.sol\":974:1023  _mint(msg.sender, initialSupply * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/erc20.sol\":712:1030  constructor(uint256 initialSupply) ERC20(\"BasedToken\", \"BASED\") {... */\n  pop\n    /* \"contracts/erc20.sol\":302:2137  contract BasedToken is ERC20, ERC20Burnable, Pausable, AccessControl {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_28\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_31\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_27:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/erc20.sol\":1786:2135  function _update(... */\ntag_40:\n    /* \"contracts/erc20.sol\":1912:1920  paused() */\n  tag_44\n    /* \"contracts/erc20.sol\":1912:1918  paused */\n  shl(0x20, tag_45)\n    /* \"contracts/erc20.sol\":1912:1920  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"contracts/erc20.sol\":1911:1920  !paused() */\n  iszero\n    /* \"contracts/erc20.sol\":1903:1943  require(!paused(), \"BasedToken: paused\") */\n  tag_46\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_47\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_46:\n    /* \"contracts/erc20.sol\":1962:1973  blacklisted */\n  0x07\n    /* \"contracts/erc20.sol\":1962:1979  blacklisted[from] */\n  0x00\n    /* \"contracts/erc20.sol\":1974:1978  from */\n  dup5\n    /* \"contracts/erc20.sol\":1962:1979  blacklisted[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/erc20.sol\":1961:1979  !blacklisted[from] */\n  iszero\n    /* \"contracts/erc20.sol\":1953:2014  require(!blacklisted[from], \"BasedToken: sender blacklisted\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_49:\n    /* \"contracts/erc20.sol\":2033:2044  blacklisted */\n  0x07\n    /* \"contracts/erc20.sol\":2033:2048  blacklisted[to] */\n  0x00\n    /* \"contracts/erc20.sol\":2045:2047  to */\n  dup4\n    /* \"contracts/erc20.sol\":2033:2048  blacklisted[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/erc20.sol\":2032:2048  !blacklisted[to] */\n  iszero\n    /* \"contracts/erc20.sol\":2024:2086  require(!blacklisted[to], \"BasedToken: recipient blacklisted\") */\n  tag_52\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_53\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_52:\n    /* \"contracts/erc20.sol\":2097:2128  super._update(from, to, amount) */\n  tag_55\n    /* \"contracts/erc20.sol\":2111:2115  from */\n  dup4\n    /* \"contracts/erc20.sol\":2117:2119  to */\n  dup4\n    /* \"contracts/erc20.sol\":2121:2127  amount */\n  dup4\n    /* \"contracts/erc20.sol\":2097:2110  super._update */\n  shl(0x20, tag_56)\n    /* \"contracts/erc20.sol\":2097:2128  super._update(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_55:\n    /* \"contracts/erc20.sol\":1786:2135  function _update(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_59\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_60\n  swap2\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_62)\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_63\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_64\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_65\n  jump\t// in\ntag_64:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_62:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_66\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_67)\ntag_66:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_67:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_68\n  swap2\n  swap1\n  tag_69\n  jump\t// in\ntag_68:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_71:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_73:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_74:\n    /* \"#utility.yul\":490:514   */\n  tag_117\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_73\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_118:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_75:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_120\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_74\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_123\n  tag_71\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":781:900   */\ntag_122:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_124\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_75\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_76:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_77:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_78:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_79:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_129\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_129:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_130\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_131\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":1758:1842   */\ntag_130:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_80:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_81:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_82:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_83:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_136\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_82\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":2473:2512   */\n  tag_137\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_82\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_84:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_85:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_140\n    /* \"#utility.yul\":2779:2813   */\n  tag_141\n    /* \"#utility.yul\":2788:2812   */\n  tag_142\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_73\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":2779:2813   */\n  tag_84\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":2761:2814   */\n  tag_73\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_86:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_87:\n    /* \"#utility.yul\":3017:3056   */\n  tag_145\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_85\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3078:3169   */\n  tag_146\n    /* \"#utility.yul\":3127:3168   */\n  tag_147\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_86\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_83\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_88:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3248:3249   */\n  0x00\n    /* \"#utility.yul\":3241:3249   */\n  swap1\n  pop\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_89:\n    /* \"#utility.yul\":3338:3370   */\n  tag_150\n  tag_88\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3379:3444   */\n  tag_151\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_87\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_90:\n    /* \"#utility.yul\":3516:3636   */\ntag_153:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_156\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_89\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_91:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_159\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_80\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":3867:3896   */\n  tag_160\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_81\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_161:\n    /* \"#utility.yul\":4094:4174   */\n  tag_162\n    /* \"#utility.yul\":4150:4172   */\n  tag_163\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_81\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_90\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_158:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_92:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_93:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_166\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_92\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_94:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_168\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_93\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_8:\n    /* \"#utility.yul\":4911:4948   */\n  tag_170\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_76\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_172\n  tag_77\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":4999:5055   */\ntag_171:\n    /* \"#utility.yul\":5079:5117   */\n  tag_173\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_79\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5164:5231   */\n  tag_174\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_91\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_176\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_177:\n    /* \"#utility.yul\":6105:6172   */\n  tag_178\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_94\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_175)\n    /* \"#utility.yul\":5326:5944   */\ntag_176:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_179\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_80\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_180:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_180)\ntag_182:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_184\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_93\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_183:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_175:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6375   */\ntag_95:\n    /* \"#utility.yul\":6243:6320   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6240:6241   */\n  0x00\n    /* \"#utility.yul\":6233:6321   */\n  mstore\n    /* \"#utility.yul\":6340:6344   */\n  0x11\n    /* \"#utility.yul\":6337:6338   */\n  0x04\n    /* \"#utility.yul\":6330:6345   */\n  mstore\n    /* \"#utility.yul\":6364:6368   */\n  0x24\n    /* \"#utility.yul\":6361:6362   */\n  0x00\n    /* \"#utility.yul\":6354:6369   */\n  revert\n    /* \"#utility.yul\":6381:6483   */\ntag_96:\n    /* \"#utility.yul\":6423:6431   */\n  0x00\n    /* \"#utility.yul\":6470:6475   */\n  dup2\n    /* \"#utility.yul\":6467:6468   */\n  0x01\n    /* \"#utility.yul\":6463:6476   */\n  shr\n    /* \"#utility.yul\":6442:6476   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6483   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6489:7337   */\ntag_97:\n    /* \"#utility.yul\":6550:6555   */\n  0x00\n    /* \"#utility.yul\":6557:6561   */\n  0x00\n    /* \"#utility.yul\":6581:6587   */\n  dup3\n    /* \"#utility.yul\":6572:6587   */\n  swap2\n  pop\n    /* \"#utility.yul\":6605:6610   */\n  dup4\n    /* \"#utility.yul\":6596:6610   */\n  swap1\n  pop\n    /* \"#utility.yul\":6619:7331   */\ntag_188:\n    /* \"#utility.yul\":6640:6641   */\n  0x01\n    /* \"#utility.yul\":6630:6638   */\n  dup6\n    /* \"#utility.yul\":6627:6642   */\n  gt\n    /* \"#utility.yul\":6619:7331   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":6735:6739   */\n  dup1\n    /* \"#utility.yul\":6730:6733   */\n  dup7\n    /* \"#utility.yul\":6726:6740   */\n  div\n    /* \"#utility.yul\":6720:6724   */\n  dup2\n    /* \"#utility.yul\":6717:6741   */\n  gt\n    /* \"#utility.yul\":6714:6764   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":6744:6762   */\n  tag_192\n  tag_95\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6714:6764   */\ntag_191:\n    /* \"#utility.yul\":6794:6795   */\n  0x01\n    /* \"#utility.yul\":6784:6792   */\n  dup6\n    /* \"#utility.yul\":6780:6796   */\n  and\n    /* \"#utility.yul\":6777:7228   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":7209:7213   */\n  dup1\n    /* \"#utility.yul\":7202:7207   */\n  dup3\n    /* \"#utility.yul\":7198:7214   */\n  mul\n    /* \"#utility.yul\":7189:7214   */\n  swap2\n  pop\n    /* \"#utility.yul\":6777:7228   */\ntag_193:\n    /* \"#utility.yul\":7259:7263   */\n  dup1\n    /* \"#utility.yul\":7253:7257   */\n  dup2\n    /* \"#utility.yul\":7249:7264   */\n  mul\n    /* \"#utility.yul\":7241:7264   */\n  swap1\n  pop\n    /* \"#utility.yul\":7289:7321   */\n  tag_194\n    /* \"#utility.yul\":7312:7320   */\n  dup6\n    /* \"#utility.yul\":7289:7321   */\n  tag_96\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7277:7321   */\n  swap5\n  pop\n    /* \"#utility.yul\":6619:7331   */\n  jump(tag_188)\ntag_190:\n    /* \"#utility.yul\":6489:7337   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7343:8416   */\ntag_98:\n    /* \"#utility.yul\":7397:7402   */\n  0x00\n    /* \"#utility.yul\":7588:7596   */\n  dup3\n    /* \"#utility.yul\":7578:7618   */\n  tag_196\n  jumpi\n    /* \"#utility.yul\":7609:7610   */\n  0x01\n    /* \"#utility.yul\":7600:7610   */\n  swap1\n  pop\n    /* \"#utility.yul\":7611:7616   */\n  jump(tag_195)\n    /* \"#utility.yul\":7578:7618   */\ntag_196:\n    /* \"#utility.yul\":7637:7641   */\n  dup2\n    /* \"#utility.yul\":7627:7663   */\n  tag_197\n  jumpi\n    /* \"#utility.yul\":7654:7655   */\n  0x00\n    /* \"#utility.yul\":7645:7655   */\n  swap1\n  pop\n    /* \"#utility.yul\":7656:7661   */\n  jump(tag_195)\n    /* \"#utility.yul\":7627:7663   */\ntag_197:\n    /* \"#utility.yul\":7723:7727   */\n  dup2\n    /* \"#utility.yul\":7771:7772   */\n  0x01\n    /* \"#utility.yul\":7766:7793   */\n  dup2\n  eq\n  tag_199\n  jumpi\n    /* \"#utility.yul\":7807:7808   */\n  0x02\n    /* \"#utility.yul\":7802:7993   */\n  dup2\n  eq\n  tag_200\n  jumpi\n    /* \"#utility.yul\":7716:7993   */\n  jump(tag_198)\n    /* \"#utility.yul\":7766:7793   */\ntag_199:\n    /* \"#utility.yul\":7784:7785   */\n  0x01\n    /* \"#utility.yul\":7775:7785   */\n  swap2\n  pop\n    /* \"#utility.yul\":7786:7791   */\n  pop\n  jump(tag_195)\n    /* \"#utility.yul\":7802:7993   */\ntag_200:\n    /* \"#utility.yul\":7847:7850   */\n  0xff\n    /* \"#utility.yul\":7837:7845   */\n  dup5\n    /* \"#utility.yul\":7834:7851   */\n  gt\n    /* \"#utility.yul\":7831:7874   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":7854:7872   */\n  tag_202\n  tag_95\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":7831:7874   */\ntag_201:\n    /* \"#utility.yul\":7903:7911   */\n  dup4\n    /* \"#utility.yul\":7900:7901   */\n  0x02\n    /* \"#utility.yul\":7896:7912   */\n  exp\n    /* \"#utility.yul\":7887:7912   */\n  swap2\n  pop\n    /* \"#utility.yul\":7938:7941   */\n  dup5\n    /* \"#utility.yul\":7931:7936   */\n  dup3\n    /* \"#utility.yul\":7928:7942   */\n  gt\n    /* \"#utility.yul\":7925:7965   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":7945:7963   */\n  tag_204\n  tag_95\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":7925:7965   */\ntag_203:\n    /* \"#utility.yul\":7978:7983   */\n  pop\n  jump(tag_195)\n    /* \"#utility.yul\":7716:7993   */\ntag_198:\n  pop\n    /* \"#utility.yul\":8102:8104   */\n  0x20\n    /* \"#utility.yul\":8092:8100   */\n  dup4\n    /* \"#utility.yul\":8089:8105   */\n  lt\n    /* \"#utility.yul\":8083:8086   */\n  0x0133\n    /* \"#utility.yul\":8077:8081   */\n  dup4\n    /* \"#utility.yul\":8074:8087   */\n  lt\n    /* \"#utility.yul\":8070:8106   */\n  and\n    /* \"#utility.yul\":8052:8054   */\n  0x4e\n    /* \"#utility.yul\":8042:8050   */\n  dup5\n    /* \"#utility.yul\":8039:8055   */\n  lt\n    /* \"#utility.yul\":8034:8036   */\n  0x0b\n    /* \"#utility.yul\":8028:8032   */\n  dup5\n    /* \"#utility.yul\":8025:8037   */\n  lt\n    /* \"#utility.yul\":8021:8056   */\n  and\n    /* \"#utility.yul\":8005:8116   */\n  or\n    /* \"#utility.yul\":8002:8248   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":8158:8166   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup3\n    /* \"#utility.yul\":8148:8167   */\n  exp\n    /* \"#utility.yul\":8139:8167   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8196   */\n  dup4\n    /* \"#utility.yul\":8186:8191   */\n  dup2\n    /* \"#utility.yul\":8183:8197   */\n  gt\n    /* \"#utility.yul\":8180:8220   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":8200:8218   */\n  tag_207\n  tag_95\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":8180:8220   */\ntag_206:\n    /* \"#utility.yul\":8233:8238   */\n  jump(tag_195)\n    /* \"#utility.yul\":8002:8248   */\ntag_205:\n    /* \"#utility.yul\":8273:8315   */\n  tag_208\n    /* \"#utility.yul\":8311:8314   */\n  dup5\n    /* \"#utility.yul\":8301:8309   */\n  dup5\n    /* \"#utility.yul\":8295:8299   */\n  dup5\n    /* \"#utility.yul\":8292:8293   */\n  0x01\n    /* \"#utility.yul\":8273:8315   */\n  tag_97\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":8258:8315   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8347:8351   */\n  dup2\n    /* \"#utility.yul\":8342:8345   */\n  dup5\n    /* \"#utility.yul\":8338:8352   */\n  div\n    /* \"#utility.yul\":8331:8336   */\n  dup2\n    /* \"#utility.yul\":8328:8353   */\n  gt\n    /* \"#utility.yul\":8325:8376   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8356:8374   */\n  tag_210\n  tag_95\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8325:8376   */\ntag_209:\n    /* \"#utility.yul\":8405:8409   */\n  dup2\n    /* \"#utility.yul\":8398:8403   */\n  dup2\n    /* \"#utility.yul\":8394:8410   */\n  mul\n    /* \"#utility.yul\":8385:8410   */\n  swap1\n  pop\n    /* \"#utility.yul\":7343:8416   */\ntag_195:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8422:8508   */\ntag_99:\n    /* \"#utility.yul\":8457:8464   */\n  0x00\n    /* \"#utility.yul\":8497:8501   */\n  0xff\n    /* \"#utility.yul\":8490:8495   */\n  dup3\n    /* \"#utility.yul\":8486:8502   */\n  and\n    /* \"#utility.yul\":8475:8502   */\n  swap1\n  pop\n    /* \"#utility.yul\":8422:8508   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8514:8795   */\ntag_18:\n    /* \"#utility.yul\":8572:8577   */\n  0x00\n    /* \"#utility.yul\":8596:8619   */\n  tag_213\n    /* \"#utility.yul\":8614:8618   */\n  dup3\n    /* \"#utility.yul\":8596:8619   */\n  tag_73\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":8588:8619   */\n  swap2\n  pop\n    /* \"#utility.yul\":8640:8665   */\n  tag_214\n    /* \"#utility.yul\":8656:8664   */\n  dup4\n    /* \"#utility.yul\":8640:8665   */\n  tag_99\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":8628:8665   */\n  swap3\n  pop\n    /* \"#utility.yul\":8684:8788   */\n  tag_215\n    /* \"#utility.yul\":8721:8787   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8711:8719   */\n  dup5\n    /* \"#utility.yul\":8705:8709   */\n  dup5\n    /* \"#utility.yul\":8684:8788   */\n  tag_98\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":8675:8788   */\n  swap1\n  pop\n    /* \"#utility.yul\":8514:8795   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8801:9211   */\ntag_20:\n    /* \"#utility.yul\":8841:8848   */\n  0x00\n    /* \"#utility.yul\":8864:8884   */\n  tag_217\n    /* \"#utility.yul\":8882:8883   */\n  dup3\n    /* \"#utility.yul\":8864:8884   */\n  tag_73\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":8859:8884   */\n  swap2\n  pop\n    /* \"#utility.yul\":8898:8918   */\n  tag_218\n    /* \"#utility.yul\":8916:8917   */\n  dup4\n    /* \"#utility.yul\":8898:8918   */\n  tag_73\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":8893:8918   */\n  swap3\n  pop\n    /* \"#utility.yul\":8953:8954   */\n  dup3\n    /* \"#utility.yul\":8950:8951   */\n  dup3\n    /* \"#utility.yul\":8946:8955   */\n  mul\n    /* \"#utility.yul\":8975:9005   */\n  tag_219\n    /* \"#utility.yul\":8993:9004   */\n  dup2\n    /* \"#utility.yul\":8975:9005   */\n  tag_73\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":8964:9005   */\n  swap2\n  pop\n    /* \"#utility.yul\":9154:9155   */\n  dup3\n    /* \"#utility.yul\":9145:9152   */\n  dup3\n    /* \"#utility.yul\":9141:9156   */\n  div\n    /* \"#utility.yul\":9138:9139   */\n  dup5\n    /* \"#utility.yul\":9135:9157   */\n  eq\n    /* \"#utility.yul\":9115:9116   */\n  dup4\n    /* \"#utility.yul\":9108:9117   */\n  iszero\n    /* \"#utility.yul\":9088:9171   */\n  or\n    /* \"#utility.yul\":9065:9204   */\n  tag_220\n  jumpi\n    /* \"#utility.yul\":9184:9202   */\n  tag_221\n  tag_95\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":9065:9204   */\ntag_220:\n    /* \"#utility.yul\":8849:9211   */\n  pop\n    /* \"#utility.yul\":8801:9211   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9343   */\ntag_100:\n    /* \"#utility.yul\":9254:9261   */\n  0x00\n    /* \"#utility.yul\":9294:9336   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9287:9292   */\n  dup3\n    /* \"#utility.yul\":9283:9337   */\n  and\n    /* \"#utility.yul\":9272:9337   */\n  swap1\n  pop\n    /* \"#utility.yul\":9217:9343   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9349:9445   */\ntag_101:\n    /* \"#utility.yul\":9386:9393   */\n  0x00\n    /* \"#utility.yul\":9415:9439   */\n  tag_224\n    /* \"#utility.yul\":9433:9438   */\n  dup3\n    /* \"#utility.yul\":9415:9439   */\n  tag_100\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":9404:9439   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_102:\n    /* \"#utility.yul\":9538:9562   */\n  tag_226\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_101\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_38:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_228\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_102\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9972   */\ntag_103:\n    /* \"#utility.yul\":9887:9898   */\n  0x00\n    /* \"#utility.yul\":9921:9927   */\n  dup3\n    /* \"#utility.yul\":9916:9919   */\n  dup3\n    /* \"#utility.yul\":9909:9928   */\n  mstore\n    /* \"#utility.yul\":9961:9965   */\n  0x20\n    /* \"#utility.yul\":9956:9959   */\n  dup3\n    /* \"#utility.yul\":9952:9966   */\n  add\n    /* \"#utility.yul\":9937:9966   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9972   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9978:10146   */\ntag_104:\n    /* \"#utility.yul\":10118:10138   */\n  0x4261736564546f6b656e3a207061757365640000000000000000000000000000\n    /* \"#utility.yul\":10114:10115   */\n  0x00\n    /* \"#utility.yul\":10106:10112   */\n  dup3\n    /* \"#utility.yul\":10102:10116   */\n  add\n    /* \"#utility.yul\":10095:10139   */\n  mstore\n    /* \"#utility.yul\":9978:10146   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10152:10518   */\ntag_105:\n    /* \"#utility.yul\":10294:10297   */\n  0x00\n    /* \"#utility.yul\":10315:10382   */\n  tag_232\n    /* \"#utility.yul\":10379:10381   */\n  0x12\n    /* \"#utility.yul\":10374:10377   */\n  dup4\n    /* \"#utility.yul\":10315:10382   */\n  tag_103\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":10308:10382   */\n  swap2\n  pop\n    /* \"#utility.yul\":10391:10484   */\n  tag_233\n    /* \"#utility.yul\":10480:10483   */\n  dup3\n    /* \"#utility.yul\":10391:10484   */\n  tag_104\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":10509:10511   */\n  0x20\n    /* \"#utility.yul\":10504:10507   */\n  dup3\n    /* \"#utility.yul\":10500:10512   */\n  add\n    /* \"#utility.yul\":10493:10512   */\n  swap1\n  pop\n    /* \"#utility.yul\":10152:10518   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10524:10943   */\ntag_48:\n    /* \"#utility.yul\":10690:10694   */\n  0x00\n    /* \"#utility.yul\":10728:10730   */\n  0x20\n    /* \"#utility.yul\":10717:10726   */\n  dup3\n    /* \"#utility.yul\":10713:10731   */\n  add\n    /* \"#utility.yul\":10705:10731   */\n  swap1\n  pop\n    /* \"#utility.yul\":10777:10786   */\n  dup2\n    /* \"#utility.yul\":10771:10775   */\n  dup2\n    /* \"#utility.yul\":10767:10787   */\n  sub\n    /* \"#utility.yul\":10763:10764   */\n  0x00\n    /* \"#utility.yul\":10752:10761   */\n  dup4\n    /* \"#utility.yul\":10748:10765   */\n  add\n    /* \"#utility.yul\":10741:10788   */\n  mstore\n    /* \"#utility.yul\":10805:10936   */\n  tag_235\n    /* \"#utility.yul\":10931:10935   */\n  dup2\n    /* \"#utility.yul\":10805:10936   */\n  tag_105\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":10797:10936   */\n  swap1\n  pop\n    /* \"#utility.yul\":10524:10943   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10949:11129   */\ntag_106:\n    /* \"#utility.yul\":11089:11121   */\n  0x4261736564546f6b656e3a2073656e64657220626c61636b6c69737465640000\n    /* \"#utility.yul\":11085:11086   */\n  0x00\n    /* \"#utility.yul\":11077:11083   */\n  dup3\n    /* \"#utility.yul\":11073:11087   */\n  add\n    /* \"#utility.yul\":11066:11122   */\n  mstore\n    /* \"#utility.yul\":10949:11129   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11135:11501   */\ntag_107:\n    /* \"#utility.yul\":11277:11280   */\n  0x00\n    /* \"#utility.yul\":11298:11365   */\n  tag_238\n    /* \"#utility.yul\":11362:11364   */\n  0x1e\n    /* \"#utility.yul\":11357:11360   */\n  dup4\n    /* \"#utility.yul\":11298:11365   */\n  tag_103\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11291:11365   */\n  swap2\n  pop\n    /* \"#utility.yul\":11374:11467   */\n  tag_239\n    /* \"#utility.yul\":11463:11466   */\n  dup3\n    /* \"#utility.yul\":11374:11467   */\n  tag_106\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":11492:11494   */\n  0x20\n    /* \"#utility.yul\":11487:11490   */\n  dup3\n    /* \"#utility.yul\":11483:11495   */\n  add\n    /* \"#utility.yul\":11476:11495   */\n  swap1\n  pop\n    /* \"#utility.yul\":11135:11501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11507:11926   */\ntag_51:\n    /* \"#utility.yul\":11673:11677   */\n  0x00\n    /* \"#utility.yul\":11711:11713   */\n  0x20\n    /* \"#utility.yul\":11700:11709   */\n  dup3\n    /* \"#utility.yul\":11696:11714   */\n  add\n    /* \"#utility.yul\":11688:11714   */\n  swap1\n  pop\n    /* \"#utility.yul\":11760:11769   */\n  dup2\n    /* \"#utility.yul\":11754:11758   */\n  dup2\n    /* \"#utility.yul\":11750:11770   */\n  sub\n    /* \"#utility.yul\":11746:11747   */\n  0x00\n    /* \"#utility.yul\":11735:11744   */\n  dup4\n    /* \"#utility.yul\":11731:11748   */\n  add\n    /* \"#utility.yul\":11724:11771   */\n  mstore\n    /* \"#utility.yul\":11788:11919   */\n  tag_241\n    /* \"#utility.yul\":11914:11918   */\n  dup2\n    /* \"#utility.yul\":11788:11919   */\n  tag_107\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":11780:11919   */\n  swap1\n  pop\n    /* \"#utility.yul\":11507:11926   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11932:12152   */\ntag_108:\n    /* \"#utility.yul\":12072:12106   */\n  0x4261736564546f6b656e3a20726563697069656e7420626c61636b6c69737465\n    /* \"#utility.yul\":12068:12069   */\n  0x00\n    /* \"#utility.yul\":12060:12066   */\n  dup3\n    /* \"#utility.yul\":12056:12070   */\n  add\n    /* \"#utility.yul\":12049:12107   */\n  mstore\n    /* \"#utility.yul\":12141:12144   */\n  0x6400000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":12136:12138   */\n  0x20\n    /* \"#utility.yul\":12128:12134   */\n  dup3\n    /* \"#utility.yul\":12124:12139   */\n  add\n    /* \"#utility.yul\":12117:12145   */\n  mstore\n    /* \"#utility.yul\":11932:12152   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12158:12524   */\ntag_109:\n    /* \"#utility.yul\":12300:12303   */\n  0x00\n    /* \"#utility.yul\":12321:12388   */\n  tag_244\n    /* \"#utility.yul\":12385:12387   */\n  0x21\n    /* \"#utility.yul\":12380:12383   */\n  dup4\n    /* \"#utility.yul\":12321:12388   */\n  tag_103\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12314:12388   */\n  swap2\n  pop\n    /* \"#utility.yul\":12397:12490   */\n  tag_245\n    /* \"#utility.yul\":12486:12489   */\n  dup3\n    /* \"#utility.yul\":12397:12490   */\n  tag_108\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":12515:12517   */\n  0x40\n    /* \"#utility.yul\":12510:12513   */\n  dup3\n    /* \"#utility.yul\":12506:12518   */\n  add\n    /* \"#utility.yul\":12499:12518   */\n  swap1\n  pop\n    /* \"#utility.yul\":12158:12524   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12530:12949   */\ntag_54:\n    /* \"#utility.yul\":12696:12700   */\n  0x00\n    /* \"#utility.yul\":12734:12736   */\n  0x20\n    /* \"#utility.yul\":12723:12732   */\n  dup3\n    /* \"#utility.yul\":12719:12737   */\n  add\n    /* \"#utility.yul\":12711:12737   */\n  swap1\n  pop\n    /* \"#utility.yul\":12783:12792   */\n  dup2\n    /* \"#utility.yul\":12777:12781   */\n  dup2\n    /* \"#utility.yul\":12773:12793   */\n  sub\n    /* \"#utility.yul\":12769:12770   */\n  0x00\n    /* \"#utility.yul\":12758:12767   */\n  dup4\n    /* \"#utility.yul\":12754:12771   */\n  add\n    /* \"#utility.yul\":12747:12794   */\n  mstore\n    /* \"#utility.yul\":12811:12942   */\n  tag_247\n    /* \"#utility.yul\":12937:12941   */\n  dup2\n    /* \"#utility.yul\":12811:12942   */\n  tag_109\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":12803:12942   */\n  swap1\n  pop\n    /* \"#utility.yul\":12530:12949   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12955:13146   */\ntag_61:\n    /* \"#utility.yul\":12995:12998   */\n  0x00\n    /* \"#utility.yul\":13014:13034   */\n  tag_249\n    /* \"#utility.yul\":13032:13033   */\n  dup3\n    /* \"#utility.yul\":13014:13034   */\n  tag_73\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":13009:13034   */\n  swap2\n  pop\n    /* \"#utility.yul\":13048:13068   */\n  tag_250\n    /* \"#utility.yul\":13066:13067   */\n  dup4\n    /* \"#utility.yul\":13048:13068   */\n  tag_73\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":13043:13068   */\n  swap3\n  pop\n    /* \"#utility.yul\":13091:13092   */\n  dup3\n    /* \"#utility.yul\":13088:13089   */\n  dup3\n    /* \"#utility.yul\":13084:13093   */\n  add\n    /* \"#utility.yul\":13077:13093   */\n  swap1\n  pop\n    /* \"#utility.yul\":13112:13115   */\n  dup1\n    /* \"#utility.yul\":13109:13110   */\n  dup3\n    /* \"#utility.yul\":13106:13116   */\n  gt\n    /* \"#utility.yul\":13103:13139   */\n  iszero\n  tag_251\n  jumpi\n    /* \"#utility.yul\":13119:13137   */\n  tag_252\n  tag_95\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13103:13139   */\ntag_251:\n    /* \"#utility.yul\":12955:13146   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13152:13270   */\ntag_110:\n    /* \"#utility.yul\":13239:13263   */\n  tag_254\n    /* \"#utility.yul\":13257:13262   */\n  dup2\n    /* \"#utility.yul\":13239:13263   */\n  tag_73\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":13234:13237   */\n  dup3\n    /* \"#utility.yul\":13227:13264   */\n  mstore\n    /* \"#utility.yul\":13152:13270   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13276:13718   */\ntag_65:\n    /* \"#utility.yul\":13425:13429   */\n  0x00\n    /* \"#utility.yul\":13463:13465   */\n  0x60\n    /* \"#utility.yul\":13452:13461   */\n  dup3\n    /* \"#utility.yul\":13448:13466   */\n  add\n    /* \"#utility.yul\":13440:13466   */\n  swap1\n  pop\n    /* \"#utility.yul\":13476:13547   */\n  tag_256\n    /* \"#utility.yul\":13544:13545   */\n  0x00\n    /* \"#utility.yul\":13533:13542   */\n  dup4\n    /* \"#utility.yul\":13529:13546   */\n  add\n    /* \"#utility.yul\":13520:13526   */\n  dup7\n    /* \"#utility.yul\":13476:13547   */\n  tag_102\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":13557:13629   */\n  tag_257\n    /* \"#utility.yul\":13625:13627   */\n  0x20\n    /* \"#utility.yul\":13614:13623   */\n  dup4\n    /* \"#utility.yul\":13610:13628   */\n  add\n    /* \"#utility.yul\":13601:13607   */\n  dup6\n    /* \"#utility.yul\":13557:13629   */\n  tag_110\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":13639:13711   */\n  tag_258\n    /* \"#utility.yul\":13707:13709   */\n  0x40\n    /* \"#utility.yul\":13696:13705   */\n  dup4\n    /* \"#utility.yul\":13692:13710   */\n  add\n    /* \"#utility.yul\":13683:13689   */\n  dup5\n    /* \"#utility.yul\":13639:13711   */\n  tag_110\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":13276:13718   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13724:13946   */\ntag_69:\n    /* \"#utility.yul\":13817:13821   */\n  0x00\n    /* \"#utility.yul\":13855:13857   */\n  0x20\n    /* \"#utility.yul\":13844:13853   */\n  dup3\n    /* \"#utility.yul\":13840:13858   */\n  add\n    /* \"#utility.yul\":13832:13858   */\n  swap1\n  pop\n    /* \"#utility.yul\":13868:13939   */\n  tag_260\n    /* \"#utility.yul\":13936:13937   */\n  0x00\n    /* \"#utility.yul\":13925:13934   */\n  dup4\n    /* \"#utility.yul\":13921:13938   */\n  add\n    /* \"#utility.yul\":13912:13918   */\n  dup5\n    /* \"#utility.yul\":13868:13939   */\n  tag_110\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":13724:13946   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/erc20.sol\":302:2137  contract BasedToken is ERC20, ERC20Burnable, Pausable, AccessControl {... */\ntag_26:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xbad1b344d34b455fbd62473d291e4203218b71bf49ff9d2fee56820689d318af\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/erc20.sol\":302:2137  contract BasedToken is ERC20, ERC20Burnable, Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdbac26e9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcf849442\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8456cb59\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c16e15e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x37c909ec\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x153b0d1e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/erc20.sol\":1305:1433  function setBlacklist(address user, bool status) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_6:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/erc20.sol\":558:605  uint256 public constant CLAIM_COOLDOWN = 1 days */\n    tag_13:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/erc20.sol\":1224:1299  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_14:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/erc20.sol\":1036:1141  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_15:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_16:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/erc20.sol\":661:705  mapping(address => uint256) public lastClaim */\n    tag_17:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_18:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_20:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/erc20.sol\":1147:1218  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_21:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_22:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_24:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/erc20.sol\":1439:1780  function claimReward() public {... */\n    tag_26:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/erc20.sol\":514:552  uint256 public immutable REWARD_AMOUNT */\n    tag_27:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/erc20.sol\":377:439  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_28:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"contracts/erc20.sol\":612:655  mapping(address => bool) public blacklisted */\n    tag_30:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/erc20.sol\":445:507  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_32:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_152\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_157\n      jump\t// in\n    tag_158:\n      dup1\n      iszero\n      tag_159\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_160\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_159)\n    tag_160:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_161:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_161\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":1305:1433  function setBlacklist(address user, bool status) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"contracts/erc20.sol\":1370:1388  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/erc20.sol\":1420:1426  status */\n      dup2\n        /* \"contracts/erc20.sol\":1400:1411  blacklisted */\n      0x07\n        /* \"contracts/erc20.sol\":1400:1417  blacklisted[user] */\n      0x00\n        /* \"contracts/erc20.sol\":1412:1416  user */\n      dup6\n        /* \"contracts/erc20.sol\":1400:1417  blacklisted[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/erc20.sol\":1400:1426  blacklisted[user] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/erc20.sol\":1305:1433  function setBlacklist(address user, bool status) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_183:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_190\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":558:605  uint256 public constant CLAIM_COOLDOWN = 1 days */\n    tag_86:\n        /* \"contracts/erc20.sol\":599:605  1 days */\n      0x015180\n        /* \"contracts/erc20.sol\":558:605  uint256 public constant CLAIM_COOLDOWN = 1 days */\n      dup2\n      jump\t// out\n        /* \"contracts/erc20.sol\":1224:1299  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_89:\n        /* \"contracts/erc20.sol\":483:507  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_192\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/erc20.sol\":1282:1292  _unpause() */\n      tag_194\n        /* \"contracts/erc20.sol\":1282:1290  _unpause */\n      tag_195\n        /* \"contracts/erc20.sol\":1282:1292  _unpause() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/erc20.sol\":1224:1299  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":1036:1141  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_92:\n        /* \"contracts/erc20.sol\":415:439  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/erc20.sol\":1117:1134  _mint(to, amount) */\n      tag_199\n        /* \"contracts/erc20.sol\":1123:1125  to */\n      dup4\n        /* \"contracts/erc20.sol\":1127:1133  amount */\n      dup4\n        /* \"contracts/erc20.sol\":1117:1122  _mint */\n      tag_200\n        /* \"contracts/erc20.sol\":1117:1134  _mint(to, amount) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/erc20.sol\":1036:1141  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":661:705  mapping(address => uint256) public lastClaim */\n    tag_100:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":1147:1218  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_113:\n        /* \"contracts/erc20.sol\":483:507  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/erc20.sol\":1203:1211  _pause() */\n      tag_214\n        /* \"contracts/erc20.sol\":1203:1209  _pause */\n      tag_215\n        /* \"contracts/erc20.sol\":1203:1211  _pause() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/erc20.sol\":1147:1218  function pause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_218\n      swap1\n      tag_157\n      jump\t// in\n    tag_218:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_157\n      jump\t// in\n    tag_219:\n      dup1\n      iszero\n      tag_220\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_221\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_220)\n    tag_221:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_222:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_222\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":1439:1780  function claimReward() public {... */\n    tag_129:\n        /* \"contracts/erc20.sol\":599:605  1 days */\n      0x015180\n        /* \"contracts/erc20.sol\":1519:1528  lastClaim */\n      0x08\n        /* \"contracts/erc20.sol\":1519:1540  lastClaim[msg.sender] */\n      0x00\n        /* \"contracts/erc20.sol\":1529:1539  msg.sender */\n      caller\n        /* \"contracts/erc20.sol\":1519:1540  lastClaim[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/erc20.sol\":1519:1557  lastClaim[msg.sender] + CLAIM_COOLDOWN */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"contracts/erc20.sol\":1500:1515  block.timestamp */\n      timestamp\n        /* \"contracts/erc20.sol\":1500:1557  block.timestamp >= lastClaim[msg.sender] + CLAIM_COOLDOWN */\n      lt\n      iszero\n        /* \"contracts/erc20.sol\":1479:1611  require(... */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"contracts/erc20.sol\":1630:1641  blacklisted */\n      0x07\n        /* \"contracts/erc20.sol\":1630:1653  blacklisted[msg.sender] */\n      0x00\n        /* \"contracts/erc20.sol\":1642:1652  msg.sender */\n      caller\n        /* \"contracts/erc20.sol\":1630:1653  blacklisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/erc20.sol\":1629:1653  !blacklisted[msg.sender] */\n      iszero\n        /* \"contracts/erc20.sol\":1621:1681  require(!blacklisted[msg.sender], \"BasedToken: blacklisted\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/erc20.sol\":1692:1724  _mint(msg.sender, REWARD_AMOUNT) */\n      tag_235\n        /* \"contracts/erc20.sol\":1698:1708  msg.sender */\n      caller\n        /* \"contracts/erc20.sol\":1710:1723  REWARD_AMOUNT */\n      immutable(\"0xbad1b344d34b455fbd62473d291e4203218b71bf49ff9d2fee56820689d318af\")\n        /* \"contracts/erc20.sol\":1692:1697  _mint */\n      tag_200\n        /* \"contracts/erc20.sol\":1692:1724  _mint(msg.sender, REWARD_AMOUNT) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/erc20.sol\":1758:1773  block.timestamp */\n      timestamp\n        /* \"contracts/erc20.sol\":1734:1743  lastClaim */\n      0x08\n        /* \"contracts/erc20.sol\":1734:1755  lastClaim[msg.sender] */\n      0x00\n        /* \"contracts/erc20.sol\":1744:1754  msg.sender */\n      caller\n        /* \"contracts/erc20.sol\":1734:1755  lastClaim[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/erc20.sol\":1734:1773  lastClaim[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/erc20.sol\":1439:1780  function claimReward() public {... */\n      jump\t// out\n        /* \"contracts/erc20.sol\":514:552  uint256 public immutable REWARD_AMOUNT */\n    tag_131:\n      immutable(\"0xbad1b344d34b455fbd62473d291e4203218b71bf49ff9d2fee56820689d318af\")\n      dup2\n      jump\t// out\n        /* \"contracts/erc20.sol\":377:439  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_134:\n        /* \"contracts/erc20.sol\":415:439  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/erc20.sol\":377:439  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_240\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_190\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_240:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":612:655  mapping(address => bool) public blacklisted */\n    tag_141:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":445:507  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_149:\n        /* \"contracts/erc20.sol\":483:507  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/erc20.sol\":445:507  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_266)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_266:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_271)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_271:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      tag_277\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1611  _requirePaused */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2654:2659  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2651  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2659  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      tag_280\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2693  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2408:2412  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2405  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2444  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_304\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap3\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc20.sol\":1786:2135  function _update(... */\n    tag_265:\n        /* \"contracts/erc20.sol\":1912:1920  paused() */\n      tag_309\n        /* \"contracts/erc20.sol\":1912:1918  paused */\n      tag_103\n        /* \"contracts/erc20.sol\":1912:1920  paused() */\n      jump\t// in\n    tag_309:\n        /* \"contracts/erc20.sol\":1911:1920  !paused() */\n      iszero\n        /* \"contracts/erc20.sol\":1903:1943  require(!paused(), \"BasedToken: paused\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/erc20.sol\":1962:1973  blacklisted */\n      0x07\n        /* \"contracts/erc20.sol\":1962:1979  blacklisted[from] */\n      0x00\n        /* \"contracts/erc20.sol\":1974:1978  from */\n      dup5\n        /* \"contracts/erc20.sol\":1962:1979  blacklisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/erc20.sol\":1961:1979  !blacklisted[from] */\n      iszero\n        /* \"contracts/erc20.sol\":1953:2014  require(!blacklisted[from], \"BasedToken: sender blacklisted\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/erc20.sol\":2033:2044  blacklisted */\n      0x07\n        /* \"contracts/erc20.sol\":2033:2048  blacklisted[to] */\n      0x00\n        /* \"contracts/erc20.sol\":2045:2047  to */\n      dup4\n        /* \"contracts/erc20.sol\":2033:2048  blacklisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/erc20.sol\":2032:2048  !blacklisted[to] */\n      iszero\n        /* \"contracts/erc20.sol\":2024:2086  require(!blacklisted[to], \"BasedToken: recipient blacklisted\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"contracts/erc20.sol\":2097:2128  super._update(from, to, amount) */\n      tag_319\n        /* \"contracts/erc20.sol\":2111:2115  from */\n      dup4\n        /* \"contracts/erc20.sol\":2117:2119  to */\n      dup4\n        /* \"contracts/erc20.sol\":2121:2127  amount */\n      dup4\n        /* \"contracts/erc20.sol\":2097:2110  super._update */\n      tag_320\n        /* \"contracts/erc20.sol\":2097:2128  super._update(from, to, amount) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/erc20.sol\":1786:2135  function _update(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2147  paused */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_329\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_329:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_330)\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_334)\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_335\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_337:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_339:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_340:\n        /* \"#utility.yul\":561:584   */\n      tag_384\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_339\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_385:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_341:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_387\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_340\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_42:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_390\n      tag_337\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":833:952   */\n    tag_389:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_391\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_341\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_342:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_343:\n        /* \"#utility.yul\":1268:1289   */\n      tag_394\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_342\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_45:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_396\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_343\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_344:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_345:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_346:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_347:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_348:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_402\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_344\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2222:2293   */\n      tag_403\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_345\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_404\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_346\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2392:2421   */\n      tag_405\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_347\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_49:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_407\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_348\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_349:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_350:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_410\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_349\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_351:\n        /* \"#utility.yul\":3060:3084   */\n      tag_412\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_350\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_413:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_352:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_415\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_351\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_353:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_354:\n        /* \"#utility.yul\":3416:3440   */\n      tag_418\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_353\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_419:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_355:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_421\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_354\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_52:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_424\n      tag_337\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3709:3828   */\n    tag_423:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_425\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_352\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_426\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_355\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4212   */\n    tag_356:\n        /* \"#utility.yul\":4166:4187   */\n      tag_428\n        /* \"#utility.yul\":4181:4186   */\n      dup2\n        /* \"#utility.yul\":4166:4187   */\n      tag_342\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":4159:4164   */\n      dup2\n        /* \"#utility.yul\":4156:4188   */\n      eq\n        /* \"#utility.yul\":4146:4206   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4199:4200   */\n      0x00\n        /* \"#utility.yul\":4192:4204   */\n      revert\n        /* \"#utility.yul\":4146:4206   */\n    tag_429:\n        /* \"#utility.yul\":4096:4212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4218:4351   */\n    tag_357:\n        /* \"#utility.yul\":4261:4266   */\n      0x00\n        /* \"#utility.yul\":4299:4305   */\n      dup2\n        /* \"#utility.yul\":4286:4306   */\n      calldataload\n        /* \"#utility.yul\":4277:4306   */\n      swap1\n      pop\n        /* \"#utility.yul\":4315:4345   */\n      tag_431\n        /* \"#utility.yul\":4339:4344   */\n      dup2\n        /* \"#utility.yul\":4315:4345   */\n      tag_356\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4218:4351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4357:4825   */\n    tag_57:\n        /* \"#utility.yul\":4422:4428   */\n      0x00\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4479:4481   */\n      0x40\n        /* \"#utility.yul\":4467:4476   */\n      dup4\n        /* \"#utility.yul\":4458:4465   */\n      dup6\n        /* \"#utility.yul\":4454:4477   */\n      sub\n        /* \"#utility.yul\":4450:4482   */\n      slt\n        /* \"#utility.yul\":4447:4566   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":4485:4564   */\n      tag_434\n      tag_337\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4447:4566   */\n    tag_433:\n        /* \"#utility.yul\":4605:4606   */\n      0x00\n        /* \"#utility.yul\":4630:4683   */\n      tag_435\n        /* \"#utility.yul\":4675:4682   */\n      dup6\n        /* \"#utility.yul\":4666:4672   */\n      dup3\n        /* \"#utility.yul\":4655:4664   */\n      dup7\n        /* \"#utility.yul\":4651:4673   */\n      add\n        /* \"#utility.yul\":4630:4683   */\n      tag_352\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4620:4683   */\n      swap3\n      pop\n        /* \"#utility.yul\":4576:4693   */\n      pop\n        /* \"#utility.yul\":4732:4734   */\n      0x20\n        /* \"#utility.yul\":4758:4808   */\n      tag_436\n        /* \"#utility.yul\":4800:4807   */\n      dup6\n        /* \"#utility.yul\":4791:4797   */\n      dup3\n        /* \"#utility.yul\":4780:4789   */\n      dup7\n        /* \"#utility.yul\":4776:4798   */\n      add\n        /* \"#utility.yul\":4758:4808   */\n      tag_357\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4748:4808   */\n      swap2\n      pop\n        /* \"#utility.yul\":4703:4818   */\n      pop\n        /* \"#utility.yul\":4357:4825   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4831:4949   */\n    tag_358:\n        /* \"#utility.yul\":4918:4942   */\n      tag_438\n        /* \"#utility.yul\":4936:4941   */\n      dup2\n        /* \"#utility.yul\":4918:4942   */\n      tag_353\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4913:4916   */\n      dup3\n        /* \"#utility.yul\":4906:4943   */\n      mstore\n        /* \"#utility.yul\":4831:4949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4955:5177   */\n    tag_62:\n        /* \"#utility.yul\":5048:5052   */\n      0x00\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"#utility.yul\":5075:5084   */\n      dup3\n        /* \"#utility.yul\":5071:5089   */\n      add\n        /* \"#utility.yul\":5063:5089   */\n      swap1\n      pop\n        /* \"#utility.yul\":5099:5170   */\n      tag_440\n        /* \"#utility.yul\":5167:5168   */\n      0x00\n        /* \"#utility.yul\":5156:5165   */\n      dup4\n        /* \"#utility.yul\":5152:5169   */\n      add\n        /* \"#utility.yul\":5143:5149   */\n      dup5\n        /* \"#utility.yul\":5099:5170   */\n      tag_358\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4955:5177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5183:5802   */\n    tag_65:\n        /* \"#utility.yul\":5260:5266   */\n      0x00\n        /* \"#utility.yul\":5268:5274   */\n      0x00\n        /* \"#utility.yul\":5276:5282   */\n      0x00\n        /* \"#utility.yul\":5325:5327   */\n      0x60\n        /* \"#utility.yul\":5313:5322   */\n      dup5\n        /* \"#utility.yul\":5304:5311   */\n      dup7\n        /* \"#utility.yul\":5300:5323   */\n      sub\n        /* \"#utility.yul\":5296:5328   */\n      slt\n        /* \"#utility.yul\":5293:5412   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":5331:5410   */\n      tag_443\n      tag_337\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5293:5412   */\n    tag_442:\n        /* \"#utility.yul\":5451:5452   */\n      0x00\n        /* \"#utility.yul\":5476:5529   */\n      tag_444\n        /* \"#utility.yul\":5521:5528   */\n      dup7\n        /* \"#utility.yul\":5512:5518   */\n      dup3\n        /* \"#utility.yul\":5501:5510   */\n      dup8\n        /* \"#utility.yul\":5497:5519   */\n      add\n        /* \"#utility.yul\":5476:5529   */\n      tag_352\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5466:5529   */\n      swap4\n      pop\n        /* \"#utility.yul\":5422:5539   */\n      pop\n        /* \"#utility.yul\":5578:5580   */\n      0x20\n        /* \"#utility.yul\":5604:5657   */\n      tag_445\n        /* \"#utility.yul\":5649:5656   */\n      dup7\n        /* \"#utility.yul\":5640:5646   */\n      dup3\n        /* \"#utility.yul\":5629:5638   */\n      dup8\n        /* \"#utility.yul\":5625:5647   */\n      add\n        /* \"#utility.yul\":5604:5657   */\n      tag_352\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5594:5657   */\n      swap3\n      pop\n        /* \"#utility.yul\":5549:5667   */\n      pop\n        /* \"#utility.yul\":5706:5708   */\n      0x40\n        /* \"#utility.yul\":5732:5785   */\n      tag_446\n        /* \"#utility.yul\":5777:5784   */\n      dup7\n        /* \"#utility.yul\":5768:5774   */\n      dup3\n        /* \"#utility.yul\":5757:5766   */\n      dup8\n        /* \"#utility.yul\":5753:5775   */\n      add\n        /* \"#utility.yul\":5732:5785   */\n      tag_355\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5722:5785   */\n      swap2\n      pop\n        /* \"#utility.yul\":5677:5795   */\n      pop\n        /* \"#utility.yul\":5183:5802   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5808:5885   */\n    tag_359:\n        /* \"#utility.yul\":5845:5852   */\n      0x00\n        /* \"#utility.yul\":5874:5879   */\n      dup2\n        /* \"#utility.yul\":5863:5879   */\n      swap1\n      pop\n        /* \"#utility.yul\":5808:5885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5891:6013   */\n    tag_360:\n        /* \"#utility.yul\":5964:5988   */\n      tag_449\n        /* \"#utility.yul\":5982:5987   */\n      dup2\n        /* \"#utility.yul\":5964:5988   */\n      tag_359\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5957:5962   */\n      dup2\n        /* \"#utility.yul\":5954:5989   */\n      eq\n        /* \"#utility.yul\":5944:6007   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":6003:6004   */\n      0x00\n        /* \"#utility.yul\":6000:6001   */\n      0x00\n        /* \"#utility.yul\":5993:6005   */\n      revert\n        /* \"#utility.yul\":5944:6007   */\n    tag_450:\n        /* \"#utility.yul\":5891:6013   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6019:6158   */\n    tag_361:\n        /* \"#utility.yul\":6065:6070   */\n      0x00\n        /* \"#utility.yul\":6103:6109   */\n      dup2\n        /* \"#utility.yul\":6090:6110   */\n      calldataload\n        /* \"#utility.yul\":6081:6110   */\n      swap1\n      pop\n        /* \"#utility.yul\":6119:6152   */\n      tag_452\n        /* \"#utility.yul\":6146:6151   */\n      dup2\n        /* \"#utility.yul\":6119:6152   */\n      tag_360\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6019:6158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6164:6493   */\n    tag_70:\n        /* \"#utility.yul\":6223:6229   */\n      0x00\n        /* \"#utility.yul\":6272:6274   */\n      0x20\n        /* \"#utility.yul\":6260:6269   */\n      dup3\n        /* \"#utility.yul\":6251:6258   */\n      dup5\n        /* \"#utility.yul\":6247:6270   */\n      sub\n        /* \"#utility.yul\":6243:6275   */\n      slt\n        /* \"#utility.yul\":6240:6359   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":6278:6357   */\n      tag_455\n      tag_337\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6240:6359   */\n    tag_454:\n        /* \"#utility.yul\":6398:6399   */\n      0x00\n        /* \"#utility.yul\":6423:6476   */\n      tag_456\n        /* \"#utility.yul\":6468:6475   */\n      dup5\n        /* \"#utility.yul\":6459:6465   */\n      dup3\n        /* \"#utility.yul\":6448:6457   */\n      dup6\n        /* \"#utility.yul\":6444:6466   */\n      add\n        /* \"#utility.yul\":6423:6476   */\n      tag_361\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6413:6476   */\n      swap2\n      pop\n        /* \"#utility.yul\":6369:6486   */\n      pop\n        /* \"#utility.yul\":6164:6493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6499:6617   */\n    tag_362:\n        /* \"#utility.yul\":6586:6610   */\n      tag_458\n        /* \"#utility.yul\":6604:6609   */\n      dup2\n        /* \"#utility.yul\":6586:6610   */\n      tag_359\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6581:6584   */\n      dup3\n        /* \"#utility.yul\":6574:6611   */\n      mstore\n        /* \"#utility.yul\":6499:6617   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6623:6845   */\n    tag_73:\n        /* \"#utility.yul\":6716:6720   */\n      0x00\n        /* \"#utility.yul\":6754:6756   */\n      0x20\n        /* \"#utility.yul\":6743:6752   */\n      dup3\n        /* \"#utility.yul\":6739:6757   */\n      add\n        /* \"#utility.yul\":6731:6757   */\n      swap1\n      pop\n        /* \"#utility.yul\":6767:6838   */\n      tag_460\n        /* \"#utility.yul\":6835:6836   */\n      0x00\n        /* \"#utility.yul\":6824:6833   */\n      dup4\n        /* \"#utility.yul\":6820:6837   */\n      add\n        /* \"#utility.yul\":6811:6817   */\n      dup5\n        /* \"#utility.yul\":6767:6838   */\n      tag_362\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6623:6845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6851:7325   */\n    tag_76:\n        /* \"#utility.yul\":6919:6925   */\n      0x00\n        /* \"#utility.yul\":6927:6933   */\n      0x00\n        /* \"#utility.yul\":6976:6978   */\n      0x40\n        /* \"#utility.yul\":6964:6973   */\n      dup4\n        /* \"#utility.yul\":6955:6962   */\n      dup6\n        /* \"#utility.yul\":6951:6974   */\n      sub\n        /* \"#utility.yul\":6947:6979   */\n      slt\n        /* \"#utility.yul\":6944:7063   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6982:7061   */\n      tag_463\n      tag_337\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6944:7063   */\n    tag_462:\n        /* \"#utility.yul\":7102:7103   */\n      0x00\n        /* \"#utility.yul\":7127:7180   */\n      tag_464\n        /* \"#utility.yul\":7172:7179   */\n      dup6\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7152:7161   */\n      dup7\n        /* \"#utility.yul\":7148:7170   */\n      add\n        /* \"#utility.yul\":7127:7180   */\n      tag_361\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7117:7180   */\n      swap3\n      pop\n        /* \"#utility.yul\":7073:7190   */\n      pop\n        /* \"#utility.yul\":7229:7231   */\n      0x20\n        /* \"#utility.yul\":7255:7308   */\n      tag_465\n        /* \"#utility.yul\":7300:7307   */\n      dup6\n        /* \"#utility.yul\":7291:7297   */\n      dup3\n        /* \"#utility.yul\":7280:7289   */\n      dup7\n        /* \"#utility.yul\":7276:7298   */\n      add\n        /* \"#utility.yul\":7255:7308   */\n      tag_352\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7245:7308   */\n      swap2\n      pop\n        /* \"#utility.yul\":7200:7318   */\n      pop\n        /* \"#utility.yul\":6851:7325   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7331:7417   */\n    tag_363:\n        /* \"#utility.yul\":7366:7373   */\n      0x00\n        /* \"#utility.yul\":7406:7410   */\n      0xff\n        /* \"#utility.yul\":7399:7404   */\n      dup3\n        /* \"#utility.yul\":7395:7411   */\n      and\n        /* \"#utility.yul\":7384:7411   */\n      swap1\n      pop\n        /* \"#utility.yul\":7331:7417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7423:7535   */\n    tag_364:\n        /* \"#utility.yul\":7506:7528   */\n      tag_468\n        /* \"#utility.yul\":7522:7527   */\n      dup2\n        /* \"#utility.yul\":7506:7528   */\n      tag_363\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7501:7504   */\n      dup3\n        /* \"#utility.yul\":7494:7529   */\n      mstore\n        /* \"#utility.yul\":7423:7535   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7541:7755   */\n    tag_81:\n        /* \"#utility.yul\":7630:7634   */\n      0x00\n        /* \"#utility.yul\":7668:7670   */\n      0x20\n        /* \"#utility.yul\":7657:7666   */\n      dup3\n        /* \"#utility.yul\":7653:7671   */\n      add\n        /* \"#utility.yul\":7645:7671   */\n      swap1\n      pop\n        /* \"#utility.yul\":7681:7748   */\n      tag_470\n        /* \"#utility.yul\":7745:7746   */\n      0x00\n        /* \"#utility.yul\":7734:7743   */\n      dup4\n        /* \"#utility.yul\":7730:7747   */\n      add\n        /* \"#utility.yul\":7721:7727   */\n      dup5\n        /* \"#utility.yul\":7681:7748   */\n      tag_364\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7541:7755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7761:8090   */\n    tag_95:\n        /* \"#utility.yul\":7820:7826   */\n      0x00\n        /* \"#utility.yul\":7869:7871   */\n      0x20\n        /* \"#utility.yul\":7857:7866   */\n      dup3\n        /* \"#utility.yul\":7848:7855   */\n      dup5\n        /* \"#utility.yul\":7844:7867   */\n      sub\n        /* \"#utility.yul\":7840:7872   */\n      slt\n        /* \"#utility.yul\":7837:7956   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":7875:7954   */\n      tag_473\n      tag_337\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7837:7956   */\n    tag_472:\n        /* \"#utility.yul\":7995:7996   */\n      0x00\n        /* \"#utility.yul\":8020:8073   */\n      tag_474\n        /* \"#utility.yul\":8065:8072   */\n      dup5\n        /* \"#utility.yul\":8056:8062   */\n      dup3\n        /* \"#utility.yul\":8045:8054   */\n      dup6\n        /* \"#utility.yul\":8041:8063   */\n      add\n        /* \"#utility.yul\":8020:8073   */\n      tag_355\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8010:8073   */\n      swap2\n      pop\n        /* \"#utility.yul\":7966:8083   */\n      pop\n        /* \"#utility.yul\":7761:8090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8096:8425   */\n    tag_99:\n        /* \"#utility.yul\":8155:8161   */\n      0x00\n        /* \"#utility.yul\":8204:8206   */\n      0x20\n        /* \"#utility.yul\":8192:8201   */\n      dup3\n        /* \"#utility.yul\":8183:8190   */\n      dup5\n        /* \"#utility.yul\":8179:8202   */\n      sub\n        /* \"#utility.yul\":8175:8207   */\n      slt\n        /* \"#utility.yul\":8172:8291   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":8210:8289   */\n      tag_477\n      tag_337\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8172:8291   */\n    tag_476:\n        /* \"#utility.yul\":8330:8331   */\n      0x00\n        /* \"#utility.yul\":8355:8408   */\n      tag_478\n        /* \"#utility.yul\":8400:8407   */\n      dup5\n        /* \"#utility.yul\":8391:8397   */\n      dup3\n        /* \"#utility.yul\":8380:8389   */\n      dup6\n        /* \"#utility.yul\":8376:8398   */\n      add\n        /* \"#utility.yul\":8355:8408   */\n      tag_352\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8345:8408   */\n      swap2\n      pop\n        /* \"#utility.yul\":8301:8418   */\n      pop\n        /* \"#utility.yul\":8096:8425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8431:8905   */\n    tag_145:\n        /* \"#utility.yul\":8499:8505   */\n      0x00\n        /* \"#utility.yul\":8507:8513   */\n      0x00\n        /* \"#utility.yul\":8556:8558   */\n      0x40\n        /* \"#utility.yul\":8544:8553   */\n      dup4\n        /* \"#utility.yul\":8535:8542   */\n      dup6\n        /* \"#utility.yul\":8531:8554   */\n      sub\n        /* \"#utility.yul\":8527:8559   */\n      slt\n        /* \"#utility.yul\":8524:8643   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8562:8641   */\n      tag_481\n      tag_337\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8524:8643   */\n    tag_480:\n        /* \"#utility.yul\":8682:8683   */\n      0x00\n        /* \"#utility.yul\":8707:8760   */\n      tag_482\n        /* \"#utility.yul\":8752:8759   */\n      dup6\n        /* \"#utility.yul\":8743:8749   */\n      dup3\n        /* \"#utility.yul\":8732:8741   */\n      dup7\n        /* \"#utility.yul\":8728:8750   */\n      add\n        /* \"#utility.yul\":8707:8760   */\n      tag_352\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8697:8760   */\n      swap3\n      pop\n        /* \"#utility.yul\":8653:8770   */\n      pop\n        /* \"#utility.yul\":8809:8811   */\n      0x20\n        /* \"#utility.yul\":8835:8888   */\n      tag_483\n        /* \"#utility.yul\":8880:8887   */\n      dup6\n        /* \"#utility.yul\":8871:8877   */\n      dup3\n        /* \"#utility.yul\":8860:8869   */\n      dup7\n        /* \"#utility.yul\":8856:8878   */\n      add\n        /* \"#utility.yul\":8835:8888   */\n      tag_352\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8825:8888   */\n      swap2\n      pop\n        /* \"#utility.yul\":8780:8898   */\n      pop\n        /* \"#utility.yul\":8431:8905   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8911:9091   */\n    tag_365:\n        /* \"#utility.yul\":8959:9036   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8956:8957   */\n      0x00\n        /* \"#utility.yul\":8949:9037   */\n      mstore\n        /* \"#utility.yul\":9056:9060   */\n      0x22\n        /* \"#utility.yul\":9053:9054   */\n      0x04\n        /* \"#utility.yul\":9046:9061   */\n      mstore\n        /* \"#utility.yul\":9080:9084   */\n      0x24\n        /* \"#utility.yul\":9077:9078   */\n      0x00\n        /* \"#utility.yul\":9070:9085   */\n      revert\n        /* \"#utility.yul\":9097:9417   */\n    tag_157:\n        /* \"#utility.yul\":9141:9147   */\n      0x00\n        /* \"#utility.yul\":9178:9179   */\n      0x02\n        /* \"#utility.yul\":9172:9176   */\n      dup3\n        /* \"#utility.yul\":9168:9180   */\n      div\n        /* \"#utility.yul\":9158:9180   */\n      swap1\n      pop\n        /* \"#utility.yul\":9225:9226   */\n      0x01\n        /* \"#utility.yul\":9219:9223   */\n      dup3\n        /* \"#utility.yul\":9215:9227   */\n      and\n        /* \"#utility.yul\":9246:9264   */\n      dup1\n        /* \"#utility.yul\":9236:9317   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":9302:9306   */\n      0x7f\n        /* \"#utility.yul\":9294:9300   */\n      dup3\n        /* \"#utility.yul\":9290:9307   */\n      and\n        /* \"#utility.yul\":9280:9307   */\n      swap2\n      pop\n        /* \"#utility.yul\":9236:9317   */\n    tag_486:\n        /* \"#utility.yul\":9364:9366   */\n      0x20\n        /* \"#utility.yul\":9356:9362   */\n      dup3\n        /* \"#utility.yul\":9353:9367   */\n      lt\n        /* \"#utility.yul\":9333:9351   */\n      dup2\n        /* \"#utility.yul\":9330:9368   */\n      sub\n        /* \"#utility.yul\":9327:9411   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":9383:9401   */\n      tag_488\n      tag_365\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9327:9411   */\n    tag_487:\n        /* \"#utility.yul\":9148:9417   */\n      pop\n        /* \"#utility.yul\":9097:9417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9423:9603   */\n    tag_366:\n        /* \"#utility.yul\":9471:9548   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9468:9469   */\n      0x00\n        /* \"#utility.yul\":9461:9549   */\n      mstore\n        /* \"#utility.yul\":9568:9572   */\n      0x11\n        /* \"#utility.yul\":9565:9566   */\n      0x04\n        /* \"#utility.yul\":9558:9573   */\n      mstore\n        /* \"#utility.yul\":9592:9596   */\n      0x24\n        /* \"#utility.yul\":9589:9590   */\n      0x00\n        /* \"#utility.yul\":9582:9597   */\n      revert\n        /* \"#utility.yul\":9609:9800   */\n    tag_228:\n        /* \"#utility.yul\":9649:9652   */\n      0x00\n        /* \"#utility.yul\":9668:9688   */\n      tag_491\n        /* \"#utility.yul\":9686:9687   */\n      dup3\n        /* \"#utility.yul\":9668:9688   */\n      tag_353\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9663:9688   */\n      swap2\n      pop\n        /* \"#utility.yul\":9702:9722   */\n      tag_492\n        /* \"#utility.yul\":9720:9721   */\n      dup4\n        /* \"#utility.yul\":9702:9722   */\n      tag_353\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9697:9722   */\n      swap3\n      pop\n        /* \"#utility.yul\":9745:9746   */\n      dup3\n        /* \"#utility.yul\":9742:9743   */\n      dup3\n        /* \"#utility.yul\":9738:9747   */\n      add\n        /* \"#utility.yul\":9731:9747   */\n      swap1\n      pop\n        /* \"#utility.yul\":9766:9769   */\n      dup1\n        /* \"#utility.yul\":9763:9764   */\n      dup3\n        /* \"#utility.yul\":9760:9770   */\n      gt\n        /* \"#utility.yul\":9757:9793   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":9773:9791   */\n      tag_494\n      tag_366\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9757:9793   */\n    tag_493:\n        /* \"#utility.yul\":9609:9800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9806:9984   */\n    tag_367:\n        /* \"#utility.yul\":9946:9976   */\n      0x4261736564546f6b656e3a20726577617264206e6f7420726561647900000000\n        /* \"#utility.yul\":9942:9943   */\n      0x00\n        /* \"#utility.yul\":9934:9940   */\n      dup3\n        /* \"#utility.yul\":9930:9944   */\n      add\n        /* \"#utility.yul\":9923:9977   */\n      mstore\n        /* \"#utility.yul\":9806:9984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9990:10356   */\n    tag_368:\n        /* \"#utility.yul\":10132:10135   */\n      0x00\n        /* \"#utility.yul\":10153:10220   */\n      tag_497\n        /* \"#utility.yul\":10217:10219   */\n      0x1c\n        /* \"#utility.yul\":10212:10215   */\n      dup4\n        /* \"#utility.yul\":10153:10220   */\n      tag_345\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10146:10220   */\n      swap2\n      pop\n        /* \"#utility.yul\":10229:10322   */\n      tag_498\n        /* \"#utility.yul\":10318:10321   */\n      dup3\n        /* \"#utility.yul\":10229:10322   */\n      tag_367\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10347:10349   */\n      0x20\n        /* \"#utility.yul\":10342:10345   */\n      dup3\n        /* \"#utility.yul\":10338:10350   */\n      add\n        /* \"#utility.yul\":10331:10350   */\n      swap1\n      pop\n        /* \"#utility.yul\":9990:10356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10362:10781   */\n    tag_231:\n        /* \"#utility.yul\":10528:10532   */\n      0x00\n        /* \"#utility.yul\":10566:10568   */\n      0x20\n        /* \"#utility.yul\":10555:10564   */\n      dup3\n        /* \"#utility.yul\":10551:10569   */\n      add\n        /* \"#utility.yul\":10543:10569   */\n      swap1\n      pop\n        /* \"#utility.yul\":10615:10624   */\n      dup2\n        /* \"#utility.yul\":10609:10613   */\n      dup2\n        /* \"#utility.yul\":10605:10625   */\n      sub\n        /* \"#utility.yul\":10601:10602   */\n      0x00\n        /* \"#utility.yul\":10590:10599   */\n      dup4\n        /* \"#utility.yul\":10586:10603   */\n      add\n        /* \"#utility.yul\":10579:10626   */\n      mstore\n        /* \"#utility.yul\":10643:10774   */\n      tag_500\n        /* \"#utility.yul\":10769:10773   */\n      dup2\n        /* \"#utility.yul\":10643:10774   */\n      tag_368\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10635:10774   */\n      swap1\n      pop\n        /* \"#utility.yul\":10362:10781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10787:10960   */\n    tag_369:\n        /* \"#utility.yul\":10927:10952   */\n      0x4261736564546f6b656e3a20626c61636b6c6973746564000000000000000000\n        /* \"#utility.yul\":10923:10924   */\n      0x00\n        /* \"#utility.yul\":10915:10921   */\n      dup3\n        /* \"#utility.yul\":10911:10925   */\n      add\n        /* \"#utility.yul\":10904:10953   */\n      mstore\n        /* \"#utility.yul\":10787:10960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10966:11332   */\n    tag_370:\n        /* \"#utility.yul\":11108:11111   */\n      0x00\n        /* \"#utility.yul\":11129:11196   */\n      tag_503\n        /* \"#utility.yul\":11193:11195   */\n      0x17\n        /* \"#utility.yul\":11188:11191   */\n      dup4\n        /* \"#utility.yul\":11129:11196   */\n      tag_345\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11122:11196   */\n      swap2\n      pop\n        /* \"#utility.yul\":11205:11298   */\n      tag_504\n        /* \"#utility.yul\":11294:11297   */\n      dup3\n        /* \"#utility.yul\":11205:11298   */\n      tag_369\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11323:11325   */\n      0x20\n        /* \"#utility.yul\":11318:11321   */\n      dup3\n        /* \"#utility.yul\":11314:11326   */\n      add\n        /* \"#utility.yul\":11307:11326   */\n      swap1\n      pop\n        /* \"#utility.yul\":10966:11332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11338:11757   */\n    tag_234:\n        /* \"#utility.yul\":11504:11508   */\n      0x00\n        /* \"#utility.yul\":11542:11544   */\n      0x20\n        /* \"#utility.yul\":11531:11540   */\n      dup3\n        /* \"#utility.yul\":11527:11545   */\n      add\n        /* \"#utility.yul\":11519:11545   */\n      swap1\n      pop\n        /* \"#utility.yul\":11591:11600   */\n      dup2\n        /* \"#utility.yul\":11585:11589   */\n      dup2\n        /* \"#utility.yul\":11581:11601   */\n      sub\n        /* \"#utility.yul\":11577:11578   */\n      0x00\n        /* \"#utility.yul\":11566:11575   */\n      dup4\n        /* \"#utility.yul\":11562:11579   */\n      add\n        /* \"#utility.yul\":11555:11602   */\n      mstore\n        /* \"#utility.yul\":11619:11750   */\n      tag_506\n        /* \"#utility.yul\":11745:11749   */\n      dup2\n        /* \"#utility.yul\":11619:11750   */\n      tag_370\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11611:11750   */\n      swap1\n      pop\n        /* \"#utility.yul\":11338:11757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11763:11881   */\n    tag_371:\n        /* \"#utility.yul\":11850:11874   */\n      tag_508\n        /* \"#utility.yul\":11868:11873   */\n      dup2\n        /* \"#utility.yul\":11850:11874   */\n      tag_350\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":11845:11848   */\n      dup3\n        /* \"#utility.yul\":11838:11875   */\n      mstore\n        /* \"#utility.yul\":11763:11881   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11887:12329   */\n    tag_256:\n        /* \"#utility.yul\":12036:12040   */\n      0x00\n        /* \"#utility.yul\":12074:12076   */\n      0x60\n        /* \"#utility.yul\":12063:12072   */\n      dup3\n        /* \"#utility.yul\":12059:12077   */\n      add\n        /* \"#utility.yul\":12051:12077   */\n      swap1\n      pop\n        /* \"#utility.yul\":12087:12158   */\n      tag_510\n        /* \"#utility.yul\":12155:12156   */\n      0x00\n        /* \"#utility.yul\":12144:12153   */\n      dup4\n        /* \"#utility.yul\":12140:12157   */\n      add\n        /* \"#utility.yul\":12131:12137   */\n      dup7\n        /* \"#utility.yul\":12087:12158   */\n      tag_371\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12168:12240   */\n      tag_511\n        /* \"#utility.yul\":12236:12238   */\n      0x20\n        /* \"#utility.yul\":12225:12234   */\n      dup4\n        /* \"#utility.yul\":12221:12239   */\n      add\n        /* \"#utility.yul\":12212:12218   */\n      dup6\n        /* \"#utility.yul\":12168:12240   */\n      tag_358\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12250:12322   */\n      tag_512\n        /* \"#utility.yul\":12318:12320   */\n      0x40\n        /* \"#utility.yul\":12307:12316   */\n      dup4\n        /* \"#utility.yul\":12303:12321   */\n      add\n        /* \"#utility.yul\":12294:12300   */\n      dup5\n        /* \"#utility.yul\":12250:12322   */\n      tag_358\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11887:12329   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12335:12557   */\n    tag_261:\n        /* \"#utility.yul\":12428:12432   */\n      0x00\n        /* \"#utility.yul\":12466:12468   */\n      0x20\n        /* \"#utility.yul\":12455:12464   */\n      dup3\n        /* \"#utility.yul\":12451:12469   */\n      add\n        /* \"#utility.yul\":12443:12469   */\n      swap1\n      pop\n        /* \"#utility.yul\":12479:12550   */\n      tag_514\n        /* \"#utility.yul\":12547:12548   */\n      0x00\n        /* \"#utility.yul\":12536:12545   */\n      dup4\n        /* \"#utility.yul\":12532:12549   */\n      add\n        /* \"#utility.yul\":12523:12529   */\n      dup5\n        /* \"#utility.yul\":12479:12550   */\n      tag_371\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12335:12557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12563:12895   */\n    tag_307:\n        /* \"#utility.yul\":12684:12688   */\n      0x00\n        /* \"#utility.yul\":12722:12724   */\n      0x40\n        /* \"#utility.yul\":12711:12720   */\n      dup3\n        /* \"#utility.yul\":12707:12725   */\n      add\n        /* \"#utility.yul\":12699:12725   */\n      swap1\n      pop\n        /* \"#utility.yul\":12735:12806   */\n      tag_516\n        /* \"#utility.yul\":12803:12804   */\n      0x00\n        /* \"#utility.yul\":12792:12801   */\n      dup4\n        /* \"#utility.yul\":12788:12805   */\n      add\n        /* \"#utility.yul\":12779:12785   */\n      dup6\n        /* \"#utility.yul\":12735:12806   */\n      tag_371\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12816:12888   */\n      tag_517\n        /* \"#utility.yul\":12884:12886   */\n      0x20\n        /* \"#utility.yul\":12873:12882   */\n      dup4\n        /* \"#utility.yul\":12869:12887   */\n      add\n        /* \"#utility.yul\":12860:12866   */\n      dup5\n        /* \"#utility.yul\":12816:12888   */\n      tag_362\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":12563:12895   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12901:13069   */\n    tag_372:\n        /* \"#utility.yul\":13041:13061   */\n      0x4261736564546f6b656e3a207061757365640000000000000000000000000000\n        /* \"#utility.yul\":13037:13038   */\n      0x00\n        /* \"#utility.yul\":13029:13035   */\n      dup3\n        /* \"#utility.yul\":13025:13039   */\n      add\n        /* \"#utility.yul\":13018:13062   */\n      mstore\n        /* \"#utility.yul\":12901:13069   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13075:13441   */\n    tag_373:\n        /* \"#utility.yul\":13217:13220   */\n      0x00\n        /* \"#utility.yul\":13238:13305   */\n      tag_520\n        /* \"#utility.yul\":13302:13304   */\n      0x12\n        /* \"#utility.yul\":13297:13300   */\n      dup4\n        /* \"#utility.yul\":13238:13305   */\n      tag_345\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13231:13305   */\n      swap2\n      pop\n        /* \"#utility.yul\":13314:13407   */\n      tag_521\n        /* \"#utility.yul\":13403:13406   */\n      dup3\n        /* \"#utility.yul\":13314:13407   */\n      tag_372\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13432:13434   */\n      0x20\n        /* \"#utility.yul\":13427:13430   */\n      dup3\n        /* \"#utility.yul\":13423:13435   */\n      add\n        /* \"#utility.yul\":13416:13435   */\n      swap1\n      pop\n        /* \"#utility.yul\":13075:13441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13447:13866   */\n    tag_312:\n        /* \"#utility.yul\":13613:13617   */\n      0x00\n        /* \"#utility.yul\":13651:13653   */\n      0x20\n        /* \"#utility.yul\":13640:13649   */\n      dup3\n        /* \"#utility.yul\":13636:13654   */\n      add\n        /* \"#utility.yul\":13628:13654   */\n      swap1\n      pop\n        /* \"#utility.yul\":13700:13709   */\n      dup2\n        /* \"#utility.yul\":13694:13698   */\n      dup2\n        /* \"#utility.yul\":13690:13710   */\n      sub\n        /* \"#utility.yul\":13686:13687   */\n      0x00\n        /* \"#utility.yul\":13675:13684   */\n      dup4\n        /* \"#utility.yul\":13671:13688   */\n      add\n        /* \"#utility.yul\":13664:13711   */\n      mstore\n        /* \"#utility.yul\":13728:13859   */\n      tag_523\n        /* \"#utility.yul\":13854:13858   */\n      dup2\n        /* \"#utility.yul\":13728:13859   */\n      tag_373\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":13720:13859   */\n      swap1\n      pop\n        /* \"#utility.yul\":13447:13866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13872:14052   */\n    tag_374:\n        /* \"#utility.yul\":14012:14044   */\n      0x4261736564546f6b656e3a2073656e64657220626c61636b6c69737465640000\n        /* \"#utility.yul\":14008:14009   */\n      0x00\n        /* \"#utility.yul\":14000:14006   */\n      dup3\n        /* \"#utility.yul\":13996:14010   */\n      add\n        /* \"#utility.yul\":13989:14045   */\n      mstore\n        /* \"#utility.yul\":13872:14052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14058:14424   */\n    tag_375:\n        /* \"#utility.yul\":14200:14203   */\n      0x00\n        /* \"#utility.yul\":14221:14288   */\n      tag_526\n        /* \"#utility.yul\":14285:14287   */\n      0x1e\n        /* \"#utility.yul\":14280:14283   */\n      dup4\n        /* \"#utility.yul\":14221:14288   */\n      tag_345\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14214:14288   */\n      swap2\n      pop\n        /* \"#utility.yul\":14297:14390   */\n      tag_527\n        /* \"#utility.yul\":14386:14389   */\n      dup3\n        /* \"#utility.yul\":14297:14390   */\n      tag_374\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14415:14417   */\n      0x20\n        /* \"#utility.yul\":14410:14413   */\n      dup3\n        /* \"#utility.yul\":14406:14418   */\n      add\n        /* \"#utility.yul\":14399:14418   */\n      swap1\n      pop\n        /* \"#utility.yul\":14058:14424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14430:14849   */\n    tag_315:\n        /* \"#utility.yul\":14596:14600   */\n      0x00\n        /* \"#utility.yul\":14634:14636   */\n      0x20\n        /* \"#utility.yul\":14623:14632   */\n      dup3\n        /* \"#utility.yul\":14619:14637   */\n      add\n        /* \"#utility.yul\":14611:14637   */\n      swap1\n      pop\n        /* \"#utility.yul\":14683:14692   */\n      dup2\n        /* \"#utility.yul\":14677:14681   */\n      dup2\n        /* \"#utility.yul\":14673:14693   */\n      sub\n        /* \"#utility.yul\":14669:14670   */\n      0x00\n        /* \"#utility.yul\":14658:14667   */\n      dup4\n        /* \"#utility.yul\":14654:14671   */\n      add\n        /* \"#utility.yul\":14647:14694   */\n      mstore\n        /* \"#utility.yul\":14711:14842   */\n      tag_529\n        /* \"#utility.yul\":14837:14841   */\n      dup2\n        /* \"#utility.yul\":14711:14842   */\n      tag_375\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14703:14842   */\n      swap1\n      pop\n        /* \"#utility.yul\":14430:14849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14855:15075   */\n    tag_376:\n        /* \"#utility.yul\":14995:15029   */\n      0x4261736564546f6b656e3a20726563697069656e7420626c61636b6c69737465\n        /* \"#utility.yul\":14991:14992   */\n      0x00\n        /* \"#utility.yul\":14983:14989   */\n      dup3\n        /* \"#utility.yul\":14979:14993   */\n      add\n        /* \"#utility.yul\":14972:15030   */\n      mstore\n        /* \"#utility.yul\":15064:15067   */\n      0x6400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15059:15061   */\n      0x20\n        /* \"#utility.yul\":15051:15057   */\n      dup3\n        /* \"#utility.yul\":15047:15062   */\n      add\n        /* \"#utility.yul\":15040:15068   */\n      mstore\n        /* \"#utility.yul\":14855:15075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15081:15447   */\n    tag_377:\n        /* \"#utility.yul\":15223:15226   */\n      0x00\n        /* \"#utility.yul\":15244:15311   */\n      tag_532\n        /* \"#utility.yul\":15308:15310   */\n      0x21\n        /* \"#utility.yul\":15303:15306   */\n      dup4\n        /* \"#utility.yul\":15244:15311   */\n      tag_345\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":15237:15311   */\n      swap2\n      pop\n        /* \"#utility.yul\":15320:15413   */\n      tag_533\n        /* \"#utility.yul\":15409:15412   */\n      dup3\n        /* \"#utility.yul\":15320:15413   */\n      tag_376\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15438:15440   */\n      0x40\n        /* \"#utility.yul\":15433:15436   */\n      dup3\n        /* \"#utility.yul\":15429:15441   */\n      add\n        /* \"#utility.yul\":15422:15441   */\n      swap1\n      pop\n        /* \"#utility.yul\":15081:15447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15453:15872   */\n    tag_318:\n        /* \"#utility.yul\":15619:15623   */\n      0x00\n        /* \"#utility.yul\":15657:15659   */\n      0x20\n        /* \"#utility.yul\":15646:15655   */\n      dup3\n        /* \"#utility.yul\":15642:15660   */\n      add\n        /* \"#utility.yul\":15634:15660   */\n      swap1\n      pop\n        /* \"#utility.yul\":15706:15715   */\n      dup2\n        /* \"#utility.yul\":15700:15704   */\n      dup2\n        /* \"#utility.yul\":15696:15716   */\n      sub\n        /* \"#utility.yul\":15692:15693   */\n      0x00\n        /* \"#utility.yul\":15681:15690   */\n      dup4\n        /* \"#utility.yul\":15677:15694   */\n      add\n        /* \"#utility.yul\":15670:15717   */\n      mstore\n        /* \"#utility.yul\":15734:15865   */\n      tag_535\n        /* \"#utility.yul\":15860:15864   */\n      dup2\n        /* \"#utility.yul\":15734:15865   */\n      tag_377\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15726:15865   */\n      swap1\n      pop\n        /* \"#utility.yul\":15453:15872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122000a0558c635550c95a8c20d91c1df72c495862759aa84695ceae834f004f328564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1440": {
									"entryPoint": null,
									"id": 1440,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_568": {
									"entryPoint": null,
									"id": 568,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 411,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_871": {
									"entryPoint": 665,
									"id": 871,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1193": {
									"entryPoint": 898,
									"id": 1193,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_1575": {
									"entryPoint": 905,
									"id": 1575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_838": {
									"entryPoint": 1302,
									"id": 838,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_595": {
									"entryPoint": 657,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 798,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_1261": {
									"entryPoint": 1281,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2847,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13949:12",
										"nodeType": "YulBlock",
										"src": "0:13949:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:32:12",
													"nodeType": "YulBlock",
													"src": "379:32:12",
													"statements": [
														{
															"nativeSrc": "389:16:12",
															"nodeType": "YulAssignment",
															"src": "389:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:12",
																"nodeType": "YulIdentifier",
																"src": "400:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:77:12"
											},
											{
												"body": {
													"nativeSrc": "460:79:12",
													"nodeType": "YulBlock",
													"src": "460:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:12",
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:12",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:12",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nativeSrc": "519:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nativeSrc": "519:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:12"
																				},
																				"nativeSrc": "490:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:12"
																		},
																		"nativeSrc": "480:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:12"
																},
																"nativeSrc": "473:43:12",
																"nodeType": "YulFunctionCall",
																"src": "473:43:12"
															},
															"nativeSrc": "470:63:12",
															"nodeType": "YulIf",
															"src": "470:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:12",
														"nodeType": "YulTypedName",
														"src": "453:5:12",
														"type": ""
													}
												],
												"src": "417:122:12"
											},
											{
												"body": {
													"nativeSrc": "608:80:12",
													"nodeType": "YulBlock",
													"src": "608:80:12",
													"statements": [
														{
															"nativeSrc": "618:22:12",
															"nodeType": "YulAssignment",
															"src": "618:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:12"
																},
																"nativeSrc": "627:13:12",
																"nodeType": "YulFunctionCall",
																"src": "627:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:12"
																},
																"nativeSrc": "649:33:12",
																"nodeType": "YulFunctionCall",
																"src": "649:33:12"
															},
															"nativeSrc": "649:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:12",
														"nodeType": "YulTypedName",
														"src": "586:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:12",
														"nodeType": "YulTypedName",
														"src": "594:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:12",
														"nodeType": "YulTypedName",
														"src": "602:5:12",
														"type": ""
													}
												],
												"src": "545:143:12"
											},
											{
												"body": {
													"nativeSrc": "771:274:12",
													"nodeType": "YulBlock",
													"src": "771:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:12",
																"nodeType": "YulBlock",
																"src": "817:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:12"
																			},
																			"nativeSrc": "819:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:12"
																		},
																		"nativeSrc": "819:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:12"
																		},
																		"nativeSrc": "788:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:12",
																		"nodeType": "YulLiteral",
																		"src": "813:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:12"
																},
																"nativeSrc": "784:32:12",
																"nodeType": "YulFunctionCall",
																"src": "784:32:12"
															},
															"nativeSrc": "781:119:12",
															"nodeType": "YulIf",
															"src": "781:119:12"
														},
														{
															"nativeSrc": "910:128:12",
															"nodeType": "YulBlock",
															"src": "910:128:12",
															"statements": [
																{
																	"nativeSrc": "925:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:12",
																		"nodeType": "YulLiteral",
																		"src": "939:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:12",
																			"nodeType": "YulTypedName",
																			"src": "929:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:12",
																	"nodeType": "YulAssignment",
																	"src": "954:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:12"
																				},
																				"nativeSrc": "996:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:12"
																		},
																		"nativeSrc": "964:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:12",
														"nodeType": "YulTypedName",
														"src": "741:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:12",
														"nodeType": "YulTypedName",
														"src": "752:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:12",
														"nodeType": "YulTypedName",
														"src": "764:6:12",
														"type": ""
													}
												],
												"src": "694:351:12"
											},
											{
												"body": {
													"nativeSrc": "1110:40:12",
													"nodeType": "YulBlock",
													"src": "1110:40:12",
													"statements": [
														{
															"nativeSrc": "1121:22:12",
															"nodeType": "YulAssignment",
															"src": "1121:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:12"
																},
																"nativeSrc": "1131:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:12",
														"nodeType": "YulTypedName",
														"src": "1093:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:12",
														"nodeType": "YulTypedName",
														"src": "1103:6:12",
														"type": ""
													}
												],
												"src": "1051:99:12"
											},
											{
												"body": {
													"nativeSrc": "1184:152:12",
													"nodeType": "YulBlock",
													"src": "1184:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:12"
																},
																"nativeSrc": "1194:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:12"
															},
															"nativeSrc": "1194:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:12"
																},
																"nativeSrc": "1291:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:12"
															},
															"nativeSrc": "1291:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:12"
																},
																"nativeSrc": "1315:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:12"
															},
															"nativeSrc": "1315:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:12"
											},
											{
												"body": {
													"nativeSrc": "1370:152:12",
													"nodeType": "YulBlock",
													"src": "1370:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:12"
																},
																"nativeSrc": "1380:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:12"
															},
															"nativeSrc": "1380:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:12"
																},
																"nativeSrc": "1477:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:12"
															},
															"nativeSrc": "1477:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:12"
																},
																"nativeSrc": "1501:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:12"
															},
															"nativeSrc": "1501:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:12"
											},
											{
												"body": {
													"nativeSrc": "1579:269:12",
													"nodeType": "YulBlock",
													"src": "1579:269:12",
													"statements": [
														{
															"nativeSrc": "1589:22:12",
															"nodeType": "YulAssignment",
															"src": "1589:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:12"
																},
																"nativeSrc": "1599:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:12"
																}
															]
														},
														{
															"nativeSrc": "1620:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:12"
																},
																"nativeSrc": "1646:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:12",
																"nodeType": "YulBlock",
																"src": "1697:51:12",
																"statements": [
																	{
																		"nativeSrc": "1711:27:12",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:12"
																			},
																			"nativeSrc": "1721:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:12"
																},
																"nativeSrc": "1670:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:12"
															},
															"nativeSrc": "1667:81:12",
															"nodeType": "YulIf",
															"src": "1667:81:12"
														},
														{
															"body": {
																"nativeSrc": "1800:42:12",
																"nodeType": "YulBlock",
																"src": "1800:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:12"
																			},
																			"nativeSrc": "1814:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:12"
																		},
																		"nativeSrc": "1814:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:12"
																		},
																		"nativeSrc": "1784:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:12"
																},
																"nativeSrc": "1761:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:12"
															},
															"nativeSrc": "1758:84:12",
															"nodeType": "YulIf",
															"src": "1758:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:12",
														"nodeType": "YulTypedName",
														"src": "1563:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:12",
														"nodeType": "YulTypedName",
														"src": "1572:6:12",
														"type": ""
													}
												],
												"src": "1528:320:12"
											},
											{
												"body": {
													"nativeSrc": "1908:87:12",
													"nodeType": "YulBlock",
													"src": "1908:87:12",
													"statements": [
														{
															"nativeSrc": "1918:11:12",
															"nodeType": "YulAssignment",
															"src": "1918:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:12",
																"nodeType": "YulIdentifier",
																"src": "1926:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:12"
																},
																"nativeSrc": "1939:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:12"
															},
															"nativeSrc": "1939:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:12"
														},
														{
															"nativeSrc": "1962:26:12",
															"nodeType": "YulAssignment",
															"src": "1962:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:12"
																},
																"nativeSrc": "1970:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:12",
														"nodeType": "YulTypedName",
														"src": "1895:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:12",
														"nodeType": "YulTypedName",
														"src": "1903:4:12",
														"type": ""
													}
												],
												"src": "1854:141:12"
											},
											{
												"body": {
													"nativeSrc": "2045:49:12",
													"nodeType": "YulBlock",
													"src": "2045:49:12",
													"statements": [
														{
															"nativeSrc": "2055:33:12",
															"nodeType": "YulAssignment",
															"src": "2055:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:12"
																		},
																		"nativeSrc": "2069:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:12"
																},
																"nativeSrc": "2065:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:12",
														"nodeType": "YulTypedName",
														"src": "2028:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:12",
														"nodeType": "YulTypedName",
														"src": "2038:6:12",
														"type": ""
													}
												],
												"src": "2001:93:12"
											},
											{
												"body": {
													"nativeSrc": "2153:54:12",
													"nodeType": "YulBlock",
													"src": "2153:54:12",
													"statements": [
														{
															"nativeSrc": "2163:37:12",
															"nodeType": "YulAssignment",
															"src": "2163:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:12"
																},
																"nativeSrc": "2184:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:12",
														"nodeType": "YulTypedName",
														"src": "2128:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:12",
														"nodeType": "YulTypedName",
														"src": "2134:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:12",
														"nodeType": "YulTypedName",
														"src": "2144:8:12",
														"type": ""
													}
												],
												"src": "2100:107:12"
											},
											{
												"body": {
													"nativeSrc": "2289:317:12",
													"nodeType": "YulBlock",
													"src": "2289:317:12",
													"statements": [
														{
															"nativeSrc": "2299:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:12"
																},
																"nativeSrc": "2316:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:12",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:12"
																},
																"nativeSrc": "2355:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:12",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:12",
															"nodeType": "YulAssignment",
															"src": "2461:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:12"
																},
																"nativeSrc": "2473:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:12"
																}
															]
														},
														{
															"nativeSrc": "2521:30:12",
															"nodeType": "YulAssignment",
															"src": "2521:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:12"
																		},
																		"nativeSrc": "2541:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:12"
																},
																"nativeSrc": "2530:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:12"
																}
															]
														},
														{
															"nativeSrc": "2560:40:12",
															"nodeType": "YulAssignment",
															"src": "2560:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:12"
																		},
																		"nativeSrc": "2580:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:12"
																},
																"nativeSrc": "2570:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:12",
														"nodeType": "YulTypedName",
														"src": "2250:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:12",
														"nodeType": "YulTypedName",
														"src": "2257:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:12",
														"nodeType": "YulTypedName",
														"src": "2269:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:12",
														"nodeType": "YulTypedName",
														"src": "2282:6:12",
														"type": ""
													}
												],
												"src": "2213:393:12"
											},
											{
												"body": {
													"nativeSrc": "2644:28:12",
													"nodeType": "YulBlock",
													"src": "2644:28:12",
													"statements": [
														{
															"nativeSrc": "2654:12:12",
															"nodeType": "YulAssignment",
															"src": "2654:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:12",
																"nodeType": "YulIdentifier",
																"src": "2661:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:12",
														"nodeType": "YulTypedName",
														"src": "2630:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:12",
														"nodeType": "YulTypedName",
														"src": "2640:3:12",
														"type": ""
													}
												],
												"src": "2612:60:12"
											},
											{
												"body": {
													"nativeSrc": "2738:82:12",
													"nodeType": "YulBlock",
													"src": "2738:82:12",
													"statements": [
														{
															"nativeSrc": "2748:66:12",
															"nodeType": "YulAssignment",
															"src": "2748:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:12"
																				},
																				"nativeSrc": "2788:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:12"
																		},
																		"nativeSrc": "2779:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:12"
																},
																"nativeSrc": "2761:53:12",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:12",
														"nodeType": "YulTypedName",
														"src": "2718:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:12",
														"nodeType": "YulTypedName",
														"src": "2728:9:12",
														"type": ""
													}
												],
												"src": "2678:142:12"
											},
											{
												"body": {
													"nativeSrc": "2873:28:12",
													"nodeType": "YulBlock",
													"src": "2873:28:12",
													"statements": [
														{
															"nativeSrc": "2883:12:12",
															"nodeType": "YulAssignment",
															"src": "2883:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:12",
																"nodeType": "YulIdentifier",
																"src": "2890:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:12",
														"nodeType": "YulTypedName",
														"src": "2859:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:12",
														"nodeType": "YulTypedName",
														"src": "2869:3:12",
														"type": ""
													}
												],
												"src": "2826:75:12"
											},
											{
												"body": {
													"nativeSrc": "2983:193:12",
													"nodeType": "YulBlock",
													"src": "2983:193:12",
													"statements": [
														{
															"nativeSrc": "2993:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:12"
																},
																"nativeSrc": "3017:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:12"
																				},
																				"nativeSrc": "3106:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:12"
																				},
																				"nativeSrc": "3127:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:12"
																		},
																		"nativeSrc": "3078:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:12"
																},
																"nativeSrc": "3065:105:12",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:12"
															},
															"nativeSrc": "3065:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:12",
														"nodeType": "YulTypedName",
														"src": "2960:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:12",
														"nodeType": "YulTypedName",
														"src": "2966:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:12",
														"nodeType": "YulTypedName",
														"src": "2974:7:12",
														"type": ""
													}
												],
												"src": "2907:269:12"
											},
											{
												"body": {
													"nativeSrc": "3231:24:12",
													"nodeType": "YulBlock",
													"src": "3231:24:12",
													"statements": [
														{
															"nativeSrc": "3241:8:12",
															"nodeType": "YulAssignment",
															"src": "3241:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:12",
																"nodeType": "YulLiteral",
																"src": "3248:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:12",
														"nodeType": "YulTypedName",
														"src": "3227:3:12",
														"type": ""
													}
												],
												"src": "3182:73:12"
											},
											{
												"body": {
													"nativeSrc": "3314:136:12",
													"nodeType": "YulBlock",
													"src": "3314:136:12",
													"statements": [
														{
															"nativeSrc": "3324:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:12"
																},
																"nativeSrc": "3338:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:12"
																},
																"nativeSrc": "3379:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:12"
															},
															"nativeSrc": "3379:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:12",
														"nodeType": "YulTypedName",
														"src": "3300:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:12",
														"nodeType": "YulTypedName",
														"src": "3306:6:12",
														"type": ""
													}
												],
												"src": "3261:189:12"
											},
											{
												"body": {
													"nativeSrc": "3506:136:12",
													"nodeType": "YulBlock",
													"src": "3506:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:12",
																"nodeType": "YulBlock",
																"src": "3573:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:12"
																			},
																			"nativeSrc": "3587:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:12"
																		},
																		"nativeSrc": "3587:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:12"
																},
																"nativeSrc": "3523:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:12"
															},
															"nativeSrc": "3516:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:12",
																"nodeType": "YulBlock",
																"src": "3538:26:12",
																"statements": [
																	{
																		"nativeSrc": "3540:22:12",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:12"
																			},
																			"nativeSrc": "3549:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:12",
																"nodeType": "YulBlock",
																"src": "3520:2:12",
																"statements": []
															},
															"src": "3516:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:12",
														"nodeType": "YulTypedName",
														"src": "3494:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:12",
														"nodeType": "YulTypedName",
														"src": "3501:3:12",
														"type": ""
													}
												],
												"src": "3456:186:12"
											},
											{
												"body": {
													"nativeSrc": "3727:464:12",
													"nodeType": "YulBlock",
													"src": "3727:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:12",
																"nodeType": "YulBlock",
																"src": "3753:431:12",
																"statements": [
																	{
																		"nativeSrc": "3767:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:12"
																			},
																			"nativeSrc": "3783:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:12",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:12"
																					},
																					"nativeSrc": "3867:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:12"
																			},
																			"nativeSrc": "3853:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:12",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:12",
																			"nodeType": "YulBlock",
																			"src": "4054:27:12",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:12",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:12",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:12"
																			},
																			"nativeSrc": "4035:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:12"
																		},
																		"nativeSrc": "4032:49:12",
																		"nodeType": "YulIf",
																		"src": "4032:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:12"
																							},
																							"nativeSrc": "4150:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:12"
																					},
																					"nativeSrc": "4136:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:12"
																			},
																			"nativeSrc": "4094:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:12"
																		},
																		"nativeSrc": "4094:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:12"
																},
																"nativeSrc": "3741:11:12",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:12"
															},
															"nativeSrc": "3738:446:12",
															"nodeType": "YulIf",
															"src": "3738:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:12",
														"nodeType": "YulTypedName",
														"src": "3703:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:12",
														"nodeType": "YulTypedName",
														"src": "3710:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:12",
														"nodeType": "YulTypedName",
														"src": "3715:10:12",
														"type": ""
													}
												],
												"src": "3648:543:12"
											},
											{
												"body": {
													"nativeSrc": "4260:54:12",
													"nodeType": "YulBlock",
													"src": "4260:54:12",
													"statements": [
														{
															"nativeSrc": "4270:37:12",
															"nodeType": "YulAssignment",
															"src": "4270:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:12"
																},
																"nativeSrc": "4291:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:12",
														"nodeType": "YulTypedName",
														"src": "4235:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:12",
														"nodeType": "YulTypedName",
														"src": "4241:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:12",
														"nodeType": "YulTypedName",
														"src": "4251:8:12",
														"type": ""
													}
												],
												"src": "4197:117:12"
											},
											{
												"body": {
													"nativeSrc": "4371:118:12",
													"nodeType": "YulBlock",
													"src": "4371:118:12",
													"statements": [
														{
															"nativeSrc": "4381:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:12"
																				},
																				"nativeSrc": "4426:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:12"
																				},
																				"nativeSrc": "4441:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:12"
																		},
																		"nativeSrc": "4397:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:12"
																},
																"nativeSrc": "4393:56:12",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:12",
															"nodeType": "YulAssignment",
															"src": "4458:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:12"
																},
																"nativeSrc": "4468:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:12",
														"nodeType": "YulTypedName",
														"src": "4348:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:12",
														"nodeType": "YulTypedName",
														"src": "4354:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:12",
														"nodeType": "YulTypedName",
														"src": "4364:6:12",
														"type": ""
													}
												],
												"src": "4320:169:12"
											},
											{
												"body": {
													"nativeSrc": "4575:214:12",
													"nodeType": "YulBlock",
													"src": "4575:214:12",
													"statements": [
														{
															"nativeSrc": "4708:37:12",
															"nodeType": "YulAssignment",
															"src": "4708:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:12"
																},
																"nativeSrc": "4716:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:12"
																}
															]
														},
														{
															"nativeSrc": "4754:29:12",
															"nodeType": "YulAssignment",
															"src": "4754:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:12"
																		},
																		"nativeSrc": "4771:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:12"
																},
																"nativeSrc": "4762:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:12",
														"nodeType": "YulTypedName",
														"src": "4556:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:12",
														"nodeType": "YulTypedName",
														"src": "4562:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:12",
														"nodeType": "YulTypedName",
														"src": "4570:4:12",
														"type": ""
													}
												],
												"src": "4494:295:12"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:12",
													"nodeType": "YulBlock",
													"src": "4886:1303:12",
													"statements": [
														{
															"nativeSrc": "4897:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:12"
																},
																"nativeSrc": "4911:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:12",
																"nodeType": "YulBlock",
																"src": "5033:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:12"
																			},
																			"nativeSrc": "5035:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:12"
																		},
																		"nativeSrc": "5035:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:12"
																},
																"nativeSrc": "5002:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:12"
															},
															"nativeSrc": "4999:56:12",
															"nodeType": "YulIf",
															"src": "4999:56:12"
														},
														{
															"nativeSrc": "5065:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:12"
																		},
																		"nativeSrc": "5105:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:12"
																},
																"nativeSrc": "5079:38:12",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:12"
																},
																"nativeSrc": "5164:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:12"
															},
															"nativeSrc": "5164:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:12"
														},
														{
															"nativeSrc": "5241:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:12",
																"nodeType": "YulLiteral",
																"src": "5258:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:12",
															"nodeType": "YulAssignment",
															"src": "5269:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:12",
																"nodeType": "YulLiteral",
																"src": "5282:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:12",
																		"nodeType": "YulBlock",
																		"src": "5333:611:12",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:12",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:12"
																							},
																							"nativeSrc": "5374:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:12"
																					},
																					"nativeSrc": "5362:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:12",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:12"
																					},
																					"nativeSrc": "5412:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:12",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:12",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:12",
																					"nodeType": "YulBlock",
																					"src": "5530:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:12"
																												},
																												"nativeSrc": "5569:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:12"
																										},
																										"nativeSrc": "5563:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:12"
																								},
																								"nativeSrc": "5548:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:12"
																							},
																							"nativeSrc": "5548:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:12"
																						},
																						{
																							"nativeSrc": "5607:24:12",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:12",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:12"
																								},
																								"nativeSrc": "5617:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:12",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:12",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:12"
																								},
																								"nativeSrc": "5661:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:12"
																					},
																					"nativeSrc": "5493:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:12"
																				},
																				"nativeSrc": "5485:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:12",
																					"nodeType": "YulBlock",
																					"src": "5508:21:12",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:12",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:12",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:12"
																								},
																								"nativeSrc": "5515:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:12",
																					"nodeType": "YulBlock",
																					"src": "5489:3:12",
																					"statements": []
																				},
																				"src": "5485:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:12",
																					"nodeType": "YulBlock",
																					"src": "5729:156:12",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:12"
																										},
																										"nativeSrc": "5770:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:12"
																								},
																								"nativeSrc": "5764:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:12",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:12",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:12"
																												},
																												"nativeSrc": "5852:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:12"
																										},
																										"nativeSrc": "5822:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:12"
																								},
																								"nativeSrc": "5807:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:12"
																							},
																							"nativeSrc": "5807:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:12"
																					},
																					"nativeSrc": "5709:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:12"
																				},
																				"nativeSrc": "5706:179:12",
																				"nodeType": "YulIf",
																				"src": "5706:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:12",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:12"
																									},
																									"nativeSrc": "5915:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:12",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:12"
																							},
																							"nativeSrc": "5911:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:12"
																					},
																					"nativeSrc": "5898:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:12"
																				},
																				"nativeSrc": "5898:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:12"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:12",
																	"nodeType": "YulCase",
																	"src": "5326:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:12",
																		"nodeType": "YulBlock",
																		"src": "5961:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:12",
																					"nodeType": "YulBlock",
																					"src": "6012:67:12",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:12",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:12"
																										},
																										"nativeSrc": "6045:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:12"
																								},
																								"nativeSrc": "6039:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:12"
																				},
																				"nativeSrc": "6002:77:12",
																				"nodeType": "YulIf",
																				"src": "6002:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:12"
																							},
																							"nativeSrc": "6105:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:12"
																					},
																					"nativeSrc": "6092:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:12"
																				},
																				"nativeSrc": "6092:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:12"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:12",
																	"nodeType": "YulCase",
																	"src": "5953:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:12"
																},
																"nativeSrc": "5303:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:12"
															},
															"nativeSrc": "5296:887:12",
															"nodeType": "YulSwitch",
															"src": "5296:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:12",
														"nodeType": "YulTypedName",
														"src": "4875:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:12",
														"nodeType": "YulTypedName",
														"src": "4881:3:12",
														"type": ""
													}
												],
												"src": "4794:1395:12"
											},
											{
												"body": {
													"nativeSrc": "6223:152:12",
													"nodeType": "YulBlock",
													"src": "6223:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6240:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:77:12",
																		"nodeType": "YulLiteral",
																		"src": "6243:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6233:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6233:6:12"
																},
																"nativeSrc": "6233:88:12",
																"nodeType": "YulFunctionCall",
																"src": "6233:88:12"
															},
															"nativeSrc": "6233:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "6233:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6337:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6340:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:12"
																},
																"nativeSrc": "6330:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6330:15:12"
															},
															"nativeSrc": "6330:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6330:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6361:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6361:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6364:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6364:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6354:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:12"
																},
																"nativeSrc": "6354:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6354:15:12"
															},
															"nativeSrc": "6354:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6354:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6195:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6195:180:12"
											},
											{
												"body": {
													"nativeSrc": "6432:51:12",
													"nodeType": "YulBlock",
													"src": "6432:51:12",
													"statements": [
														{
															"nativeSrc": "6442:34:12",
															"nodeType": "YulAssignment",
															"src": "6442:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6467:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6467:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6470:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6470:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6463:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6463:3:12"
																},
																"nativeSrc": "6463:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6463:13:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6442:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6442:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6381:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6413:5:12",
														"nodeType": "YulTypedName",
														"src": "6413:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6423:8:12",
														"nodeType": "YulTypedName",
														"src": "6423:8:12",
														"type": ""
													}
												],
												"src": "6381:102:12"
											},
											{
												"body": {
													"nativeSrc": "6562:775:12",
													"nodeType": "YulBlock",
													"src": "6562:775:12",
													"statements": [
														{
															"nativeSrc": "6572:15:12",
															"nodeType": "YulAssignment",
															"src": "6572:15:12",
															"value": {
																"name": "_power",
																"nativeSrc": "6581:6:12",
																"nodeType": "YulIdentifier",
																"src": "6581:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6572:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6572:5:12"
																}
															]
														},
														{
															"nativeSrc": "6596:14:12",
															"nodeType": "YulAssignment",
															"src": "6596:14:12",
															"value": {
																"name": "_base",
																"nativeSrc": "6605:5:12",
																"nodeType": "YulIdentifier",
																"src": "6605:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6596:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6596:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6654:677:12",
																"nodeType": "YulBlock",
																"src": "6654:677:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6742:22:12",
																			"nodeType": "YulBlock",
																			"src": "6742:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6744:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "6744:16:12"
																						},
																						"nativeSrc": "6744:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6744:18:12"
																					},
																					"nativeSrc": "6744:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "6744:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6720:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "6720:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6730:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6730:3:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6735:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6735:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6726:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6726:3:12"
																					},
																					"nativeSrc": "6726:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6726:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6717:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6717:2:12"
																			},
																			"nativeSrc": "6717:24:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6717:24:12"
																		},
																		"nativeSrc": "6714:50:12",
																		"nodeType": "YulIf",
																		"src": "6714:50:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "6809:419:12",
																			"nodeType": "YulBlock",
																			"src": "6809:419:12",
																			"statements": [
																				{
																					"nativeSrc": "7189:25:12",
																					"nodeType": "YulAssignment",
																					"src": "7189:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7202:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "7202:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7209:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "7209:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7198:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7198:3:12"
																						},
																						"nativeSrc": "7198:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7198:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7189:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "7189:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6784:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "6784:8:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6794:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6794:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6780:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6780:3:12"
																			},
																			"nativeSrc": "6780:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6780:16:12"
																		},
																		"nativeSrc": "6777:451:12",
																		"nodeType": "YulIf",
																		"src": "6777:451:12"
																	},
																	{
																		"nativeSrc": "7241:23:12",
																		"nodeType": "YulAssignment",
																		"src": "7241:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7253:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "7253:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7259:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "7259:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7249:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7249:3:12"
																			},
																			"nativeSrc": "7249:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7249:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7241:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7241:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7277:44:12",
																		"nodeType": "YulAssignment",
																		"src": "7277:44:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7312:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "7312:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7289:22:12",
																				"nodeType": "YulIdentifier",
																				"src": "7289:22:12"
																			},
																			"nativeSrc": "7289:32:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7289:32:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7277:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "7277:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6630:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6630:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6640:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6640:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6627:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6627:2:12"
																},
																"nativeSrc": "6627:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6627:15:12"
															},
															"nativeSrc": "6619:712:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6643:2:12",
																"nodeType": "YulBlock",
																"src": "6643:2:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6623:3:12",
																"nodeType": "YulBlock",
																"src": "6623:3:12",
																"statements": []
															},
															"src": "6619:712:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6489:848:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6517:6:12",
														"nodeType": "YulTypedName",
														"src": "6517:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6525:5:12",
														"nodeType": "YulTypedName",
														"src": "6525:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6532:8:12",
														"nodeType": "YulTypedName",
														"src": "6532:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6542:3:12",
														"nodeType": "YulTypedName",
														"src": "6542:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6550:5:12",
														"nodeType": "YulTypedName",
														"src": "6550:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6557:4:12",
														"nodeType": "YulTypedName",
														"src": "6557:4:12",
														"type": ""
													}
												],
												"src": "6489:848:12"
											},
											{
												"body": {
													"nativeSrc": "7403:1013:12",
													"nodeType": "YulBlock",
													"src": "7403:1013:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7598:20:12",
																"nodeType": "YulBlock",
																"src": "7598:20:12",
																"statements": [
																	{
																		"nativeSrc": "7600:10:12",
																		"nodeType": "YulAssignment",
																		"src": "7600:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7609:1:12",
																			"nodeType": "YulLiteral",
																			"src": "7609:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7600:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7600:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7611:5:12",
																		"nodeType": "YulLeave",
																		"src": "7611:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7588:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "7588:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7581:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:12"
																},
																"nativeSrc": "7581:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7581:16:12"
															},
															"nativeSrc": "7578:40:12",
															"nodeType": "YulIf",
															"src": "7578:40:12"
														},
														{
															"body": {
																"nativeSrc": "7643:20:12",
																"nodeType": "YulBlock",
																"src": "7643:20:12",
																"statements": [
																	{
																		"nativeSrc": "7645:10:12",
																		"nodeType": "YulAssignment",
																		"src": "7645:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7654:1:12",
																			"nodeType": "YulLiteral",
																			"src": "7654:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7645:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7645:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7656:5:12",
																		"nodeType": "YulLeave",
																		"src": "7656:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7637:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7637:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7630:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:12"
																},
																"nativeSrc": "7630:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7630:12:12"
															},
															"nativeSrc": "7627:36:12",
															"nodeType": "YulIf",
															"src": "7627:36:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7773:20:12",
																		"nodeType": "YulBlock",
																		"src": "7773:20:12",
																		"statements": [
																			{
																				"nativeSrc": "7775:10:12",
																				"nodeType": "YulAssignment",
																				"src": "7775:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7784:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7784:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7775:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7775:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7786:5:12",
																				"nodeType": "YulLeave",
																				"src": "7786:5:12"
																			}
																		]
																	},
																	"nativeSrc": "7766:27:12",
																	"nodeType": "YulCase",
																	"src": "7766:27:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7771:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7771:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7817:176:12",
																		"nodeType": "YulBlock",
																		"src": "7817:176:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7852:22:12",
																					"nodeType": "YulBlock",
																					"src": "7852:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7854:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "7854:16:12"
																								},
																								"nativeSrc": "7854:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7854:18:12"
																							},
																							"nativeSrc": "7854:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "7854:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7837:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "7837:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7847:3:12",
																							"nodeType": "YulLiteral",
																							"src": "7847:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7834:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7834:2:12"
																					},
																					"nativeSrc": "7834:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7834:17:12"
																				},
																				"nativeSrc": "7831:43:12",
																				"nodeType": "YulIf",
																				"src": "7831:43:12"
																			},
																			{
																				"nativeSrc": "7887:25:12",
																				"nodeType": "YulAssignment",
																				"src": "7887:25:12",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7900:1:12",
																							"nodeType": "YulLiteral",
																							"src": "7900:1:12",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "7903:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "7903:8:12"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "7896:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7896:3:12"
																					},
																					"nativeSrc": "7896:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7896:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7887:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7887:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7943:22:12",
																					"nodeType": "YulBlock",
																					"src": "7943:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7945:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "7945:16:12"
																								},
																								"nativeSrc": "7945:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7945:18:12"
																							},
																							"nativeSrc": "7945:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "7945:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "7931:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:12"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "7938:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7938:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7928:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7928:2:12"
																					},
																					"nativeSrc": "7928:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7928:14:12"
																				},
																				"nativeSrc": "7925:40:12",
																				"nodeType": "YulIf",
																				"src": "7925:40:12"
																			},
																			{
																				"nativeSrc": "7978:5:12",
																				"nodeType": "YulLeave",
																				"src": "7978:5:12"
																			}
																		]
																	},
																	"nativeSrc": "7802:191:12",
																	"nodeType": "YulCase",
																	"src": "7802:191:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7807:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7807:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7723:4:12",
																"nodeType": "YulIdentifier",
																"src": "7723:4:12"
															},
															"nativeSrc": "7716:277:12",
															"nodeType": "YulSwitch",
															"src": "7716:277:12"
														},
														{
															"body": {
																"nativeSrc": "8125:123:12",
																"nodeType": "YulBlock",
																"src": "8125:123:12",
																"statements": [
																	{
																		"nativeSrc": "8139:28:12",
																		"nodeType": "YulAssignment",
																		"src": "8139:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8152:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "8152:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8158:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "8158:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8148:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8148:3:12"
																			},
																			"nativeSrc": "8148:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8148:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8139:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8139:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8198:22:12",
																			"nodeType": "YulBlock",
																			"src": "8198:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8200:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "8200:16:12"
																						},
																						"nativeSrc": "8200:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8200:18:12"
																					},
																					"nativeSrc": "8200:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "8200:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8186:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "8186:5:12"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8193:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8193:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8183:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8183:2:12"
																			},
																			"nativeSrc": "8183:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8183:14:12"
																		},
																		"nativeSrc": "8180:40:12",
																		"nodeType": "YulIf",
																		"src": "8180:40:12"
																	},
																	{
																		"nativeSrc": "8233:5:12",
																		"nodeType": "YulLeave",
																		"src": "8233:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8028:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "8028:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8034:2:12",
																						"nodeType": "YulLiteral",
																						"src": "8034:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8025:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "8025:2:12"
																				},
																				"nativeSrc": "8025:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8025:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8042:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "8042:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8052:2:12",
																						"nodeType": "YulLiteral",
																						"src": "8052:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8039:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "8039:2:12"
																				},
																				"nativeSrc": "8039:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8039:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8021:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:12"
																		},
																		"nativeSrc": "8021:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8021:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8077:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "8077:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8083:3:12",
																						"nodeType": "YulLiteral",
																						"src": "8083:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8074:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "8074:2:12"
																				},
																				"nativeSrc": "8074:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8074:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8092:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "8092:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8102:2:12",
																						"nodeType": "YulLiteral",
																						"src": "8102:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8089:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "8089:2:12"
																				},
																				"nativeSrc": "8089:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8089:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8070:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:12"
																		},
																		"nativeSrc": "8070:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8070:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8005:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8005:2:12"
																},
																"nativeSrc": "8005:111:12",
																"nodeType": "YulFunctionCall",
																"src": "8005:111:12"
															},
															"nativeSrc": "8002:246:12",
															"nodeType": "YulIf",
															"src": "8002:246:12"
														},
														{
															"nativeSrc": "8258:57:12",
															"nodeType": "YulAssignment",
															"src": "8258:57:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8292:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8295:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8295:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8301:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8301:8:12"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8311:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8311:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8273:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "8273:18:12"
																},
																"nativeSrc": "8273:42:12",
																"nodeType": "YulFunctionCall",
																"src": "8273:42:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8258:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8258:5:12"
																},
																{
																	"name": "base",
																	"nativeSrc": "8265:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8265:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8354:22:12",
																"nodeType": "YulBlock",
																"src": "8354:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8356:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8356:16:12"
																			},
																			"nativeSrc": "8356:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8356:18:12"
																		},
																		"nativeSrc": "8356:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8356:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8331:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8331:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8342:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8342:3:12"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8347:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8347:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8338:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:12"
																		},
																		"nativeSrc": "8338:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8338:14:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8328:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8328:2:12"
																},
																"nativeSrc": "8328:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8328:25:12"
															},
															"nativeSrc": "8325:51:12",
															"nodeType": "YulIf",
															"src": "8325:51:12"
														},
														{
															"nativeSrc": "8385:25:12",
															"nodeType": "YulAssignment",
															"src": "8385:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8398:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8398:5:12"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8405:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8405:4:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8394:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8394:3:12"
																},
																"nativeSrc": "8394:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8394:16:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8385:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8385:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7343:1073:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7373:4:12",
														"nodeType": "YulTypedName",
														"src": "7373:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7379:8:12",
														"nodeType": "YulTypedName",
														"src": "7379:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7389:3:12",
														"nodeType": "YulTypedName",
														"src": "7389:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7397:5:12",
														"nodeType": "YulTypedName",
														"src": "7397:5:12",
														"type": ""
													}
												],
												"src": "7343:1073:12"
											},
											{
												"body": {
													"nativeSrc": "8465:43:12",
													"nodeType": "YulBlock",
													"src": "8465:43:12",
													"statements": [
														{
															"nativeSrc": "8475:27:12",
															"nodeType": "YulAssignment",
															"src": "8475:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8490:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8497:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8497:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8486:3:12"
																},
																"nativeSrc": "8486:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8486:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8475:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8475:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8422:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8447:5:12",
														"nodeType": "YulTypedName",
														"src": "8447:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8457:7:12",
														"nodeType": "YulTypedName",
														"src": "8457:7:12",
														"type": ""
													}
												],
												"src": "8422:86:12"
											},
											{
												"body": {
													"nativeSrc": "8578:217:12",
													"nodeType": "YulBlock",
													"src": "8578:217:12",
													"statements": [
														{
															"nativeSrc": "8588:31:12",
															"nodeType": "YulAssignment",
															"src": "8588:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8614:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8614:4:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8596:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8596:17:12"
																},
																"nativeSrc": "8596:23:12",
																"nodeType": "YulFunctionCall",
																"src": "8596:23:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8588:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8588:4:12"
																}
															]
														},
														{
															"nativeSrc": "8628:37:12",
															"nodeType": "YulAssignment",
															"src": "8628:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8656:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8656:8:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8640:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "8640:15:12"
																},
																"nativeSrc": "8640:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8640:25:12"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8628:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "8628:8:12"
																}
															]
														},
														{
															"nativeSrc": "8675:113:12",
															"nodeType": "YulAssignment",
															"src": "8675:113:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8705:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8705:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8711:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8711:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8721:66:12",
																		"nodeType": "YulLiteral",
																		"src": "8721:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8684:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "8684:20:12"
																},
																"nativeSrc": "8684:104:12",
																"nodeType": "YulFunctionCall",
																"src": "8684:104:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8675:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8675:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8514:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8553:4:12",
														"nodeType": "YulTypedName",
														"src": "8553:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8559:8:12",
														"nodeType": "YulTypedName",
														"src": "8559:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8572:5:12",
														"nodeType": "YulTypedName",
														"src": "8572:5:12",
														"type": ""
													}
												],
												"src": "8514:281:12"
											},
											{
												"body": {
													"nativeSrc": "8849:362:12",
													"nodeType": "YulBlock",
													"src": "8849:362:12",
													"statements": [
														{
															"nativeSrc": "8859:25:12",
															"nodeType": "YulAssignment",
															"src": "8859:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8882:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8882:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8864:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8864:17:12"
																},
																"nativeSrc": "8864:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8864:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8859:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8859:1:12"
																}
															]
														},
														{
															"nativeSrc": "8893:25:12",
															"nodeType": "YulAssignment",
															"src": "8893:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8916:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8916:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8898:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8898:17:12"
																},
																"nativeSrc": "8898:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8898:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8893:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8893:1:12"
																}
															]
														},
														{
															"nativeSrc": "8927:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8927:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8950:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8950:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8946:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8946:3:12"
																},
																"nativeSrc": "8946:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8946:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8931:11:12",
																	"nodeType": "YulTypedName",
																	"src": "8931:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8964:41:12",
															"nodeType": "YulAssignment",
															"src": "8964:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8993:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "8993:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8975:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8975:17:12"
																},
																"nativeSrc": "8975:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8975:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8964:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8964:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9182:22:12",
																"nodeType": "YulBlock",
																"src": "9182:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9184:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9184:16:12"
																			},
																			"nativeSrc": "9184:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9184:18:12"
																		},
																		"nativeSrc": "9184:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9184:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9115:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "9115:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9108:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9108:6:12"
																				},
																				"nativeSrc": "9108:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9108:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9138:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "9138:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9145:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "9145:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9154:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "9154:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9141:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9141:3:12"
																						},
																						"nativeSrc": "9141:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "9141:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9135:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "9135:2:12"
																				},
																				"nativeSrc": "9135:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9135:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9088:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9088:2:12"
																		},
																		"nativeSrc": "9088:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9088:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9068:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:12"
																},
																"nativeSrc": "9068:113:12",
																"nodeType": "YulFunctionCall",
																"src": "9068:113:12"
															},
															"nativeSrc": "9065:139:12",
															"nodeType": "YulIf",
															"src": "9065:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8801:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8832:1:12",
														"nodeType": "YulTypedName",
														"src": "8832:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8835:1:12",
														"nodeType": "YulTypedName",
														"src": "8835:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8841:7:12",
														"nodeType": "YulTypedName",
														"src": "8841:7:12",
														"type": ""
													}
												],
												"src": "8801:410:12"
											},
											{
												"body": {
													"nativeSrc": "9262:81:12",
													"nodeType": "YulBlock",
													"src": "9262:81:12",
													"statements": [
														{
															"nativeSrc": "9272:65:12",
															"nodeType": "YulAssignment",
															"src": "9272:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9287:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9287:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9294:42:12",
																		"nodeType": "YulLiteral",
																		"src": "9294:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9283:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:12"
																},
																"nativeSrc": "9283:54:12",
																"nodeType": "YulFunctionCall",
																"src": "9283:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9272:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "9272:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9217:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9244:5:12",
														"nodeType": "YulTypedName",
														"src": "9244:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9254:7:12",
														"nodeType": "YulTypedName",
														"src": "9254:7:12",
														"type": ""
													}
												],
												"src": "9217:126:12"
											},
											{
												"body": {
													"nativeSrc": "9394:51:12",
													"nodeType": "YulBlock",
													"src": "9394:51:12",
													"statements": [
														{
															"nativeSrc": "9404:35:12",
															"nodeType": "YulAssignment",
															"src": "9404:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9433:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9433:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9415:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9415:17:12"
																},
																"nativeSrc": "9415:24:12",
																"nodeType": "YulFunctionCall",
																"src": "9415:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9404:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "9404:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9349:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9376:5:12",
														"nodeType": "YulTypedName",
														"src": "9376:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9386:7:12",
														"nodeType": "YulTypedName",
														"src": "9386:7:12",
														"type": ""
													}
												],
												"src": "9349:96:12"
											},
											{
												"body": {
													"nativeSrc": "9516:53:12",
													"nodeType": "YulBlock",
													"src": "9516:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:12"
																		},
																		"nativeSrc": "9538:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:12"
																},
																"nativeSrc": "9526:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:12"
															},
															"nativeSrc": "9526:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:12",
														"nodeType": "YulTypedName",
														"src": "9504:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:12",
														"nodeType": "YulTypedName",
														"src": "9511:3:12",
														"type": ""
													}
												],
												"src": "9451:118:12"
											},
											{
												"body": {
													"nativeSrc": "9673:124:12",
													"nodeType": "YulBlock",
													"src": "9673:124:12",
													"statements": [
														{
															"nativeSrc": "9683:26:12",
															"nodeType": "YulAssignment",
															"src": "9683:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:12"
																},
																"nativeSrc": "9691:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:12"
																		},
																		"nativeSrc": "9772:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:12"
																},
																"nativeSrc": "9719:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:12"
															},
															"nativeSrc": "9719:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:12",
														"nodeType": "YulTypedName",
														"src": "9645:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:12",
														"nodeType": "YulTypedName",
														"src": "9657:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:12",
														"nodeType": "YulTypedName",
														"src": "9668:4:12",
														"type": ""
													}
												],
												"src": "9575:222:12"
											},
											{
												"body": {
													"nativeSrc": "9899:73:12",
													"nodeType": "YulBlock",
													"src": "9899:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9916:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9916:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9921:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9921:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9909:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:12"
																},
																"nativeSrc": "9909:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9909:19:12"
															},
															"nativeSrc": "9909:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9909:19:12"
														},
														{
															"nativeSrc": "9937:29:12",
															"nodeType": "YulAssignment",
															"src": "9937:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9956:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9961:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9961:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9952:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9952:3:12"
																},
																"nativeSrc": "9952:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9952:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9937:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9937:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9803:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9871:3:12",
														"nodeType": "YulTypedName",
														"src": "9871:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9876:6:12",
														"nodeType": "YulTypedName",
														"src": "9876:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9887:11:12",
														"nodeType": "YulTypedName",
														"src": "9887:11:12",
														"type": ""
													}
												],
												"src": "9803:169:12"
											},
											{
												"body": {
													"nativeSrc": "10084:62:12",
													"nodeType": "YulBlock",
													"src": "10084:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10106:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10106:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10114:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10114:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10102:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:12"
																		},
																		"nativeSrc": "10102:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10102:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a20706175736564",
																		"kind": "string",
																		"nativeSrc": "10118:20:12",
																		"nodeType": "YulLiteral",
																		"src": "10118:20:12",
																		"type": "",
																		"value": "BasedToken: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10095:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:12"
																},
																"nativeSrc": "10095:44:12",
																"nodeType": "YulFunctionCall",
																"src": "10095:44:12"
															},
															"nativeSrc": "10095:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "10095:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870",
												"nativeSrc": "9978:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10076:6:12",
														"nodeType": "YulTypedName",
														"src": "10076:6:12",
														"type": ""
													}
												],
												"src": "9978:168:12"
											},
											{
												"body": {
													"nativeSrc": "10298:220:12",
													"nodeType": "YulBlock",
													"src": "10298:220:12",
													"statements": [
														{
															"nativeSrc": "10308:74:12",
															"nodeType": "YulAssignment",
															"src": "10308:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10374:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10374:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10379:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10379:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10315:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10315:58:12"
																},
																"nativeSrc": "10315:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10315:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10308:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10308:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10480:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10480:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870",
																	"nativeSrc": "10391:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10391:88:12"
																},
																"nativeSrc": "10391:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10391:93:12"
															},
															"nativeSrc": "10391:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10391:93:12"
														},
														{
															"nativeSrc": "10493:19:12",
															"nodeType": "YulAssignment",
															"src": "10493:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10504:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10504:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10509:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10509:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10500:3:12"
																},
																"nativeSrc": "10500:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10500:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10493:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10493:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10152:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10286:3:12",
														"nodeType": "YulTypedName",
														"src": "10286:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10294:3:12",
														"nodeType": "YulTypedName",
														"src": "10294:3:12",
														"type": ""
													}
												],
												"src": "10152:366:12"
											},
											{
												"body": {
													"nativeSrc": "10695:248:12",
													"nodeType": "YulBlock",
													"src": "10695:248:12",
													"statements": [
														{
															"nativeSrc": "10705:26:12",
															"nodeType": "YulAssignment",
															"src": "10705:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10717:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10717:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10728:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10728:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10713:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10713:3:12"
																},
																"nativeSrc": "10713:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10713:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10705:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10705:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10752:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10752:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10763:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10763:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10748:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10748:3:12"
																		},
																		"nativeSrc": "10748:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10748:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10771:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10771:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10777:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10777:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10767:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10767:3:12"
																		},
																		"nativeSrc": "10767:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10767:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10741:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10741:6:12"
																},
																"nativeSrc": "10741:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10741:47:12"
															},
															"nativeSrc": "10741:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10741:47:12"
														},
														{
															"nativeSrc": "10797:139:12",
															"nodeType": "YulAssignment",
															"src": "10797:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10931:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10931:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10805:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10805:124:12"
																},
																"nativeSrc": "10805:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10805:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10797:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10797:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10524:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10675:9:12",
														"nodeType": "YulTypedName",
														"src": "10675:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10690:4:12",
														"nodeType": "YulTypedName",
														"src": "10690:4:12",
														"type": ""
													}
												],
												"src": "10524:419:12"
											},
											{
												"body": {
													"nativeSrc": "11055:74:12",
													"nodeType": "YulBlock",
													"src": "11055:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11077:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11077:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11085:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11085:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11073:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11073:3:12"
																		},
																		"nativeSrc": "11073:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11073:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a2073656e64657220626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "11089:32:12",
																		"nodeType": "YulLiteral",
																		"src": "11089:32:12",
																		"type": "",
																		"value": "BasedToken: sender blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11066:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11066:6:12"
																},
																"nativeSrc": "11066:56:12",
																"nodeType": "YulFunctionCall",
																"src": "11066:56:12"
															},
															"nativeSrc": "11066:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "11066:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe",
												"nativeSrc": "10949:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11047:6:12",
														"nodeType": "YulTypedName",
														"src": "11047:6:12",
														"type": ""
													}
												],
												"src": "10949:180:12"
											},
											{
												"body": {
													"nativeSrc": "11281:220:12",
													"nodeType": "YulBlock",
													"src": "11281:220:12",
													"statements": [
														{
															"nativeSrc": "11291:74:12",
															"nodeType": "YulAssignment",
															"src": "11291:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11357:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11357:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11362:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11362:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11298:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11298:58:12"
																},
																"nativeSrc": "11298:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11298:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11291:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11291:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11463:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11463:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe",
																	"nativeSrc": "11374:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11374:88:12"
																},
																"nativeSrc": "11374:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11374:93:12"
															},
															"nativeSrc": "11374:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11374:93:12"
														},
														{
															"nativeSrc": "11476:19:12",
															"nodeType": "YulAssignment",
															"src": "11476:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11487:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11487:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11492:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11492:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11483:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11483:3:12"
																},
																"nativeSrc": "11483:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11483:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11476:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11476:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11135:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11269:3:12",
														"nodeType": "YulTypedName",
														"src": "11269:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11277:3:12",
														"nodeType": "YulTypedName",
														"src": "11277:3:12",
														"type": ""
													}
												],
												"src": "11135:366:12"
											},
											{
												"body": {
													"nativeSrc": "11678:248:12",
													"nodeType": "YulBlock",
													"src": "11678:248:12",
													"statements": [
														{
															"nativeSrc": "11688:26:12",
															"nodeType": "YulAssignment",
															"src": "11688:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11700:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11700:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11711:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11711:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11696:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11696:3:12"
																},
																"nativeSrc": "11696:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11696:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11688:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11688:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11735:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11735:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11746:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11746:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11731:3:12"
																		},
																		"nativeSrc": "11731:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11731:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11754:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11754:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11760:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11760:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11750:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11750:3:12"
																		},
																		"nativeSrc": "11750:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11750:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11724:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11724:6:12"
																},
																"nativeSrc": "11724:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11724:47:12"
															},
															"nativeSrc": "11724:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11724:47:12"
														},
														{
															"nativeSrc": "11780:139:12",
															"nodeType": "YulAssignment",
															"src": "11780:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11914:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11914:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11788:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11788:124:12"
																},
																"nativeSrc": "11788:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11788:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11780:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11780:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11507:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11658:9:12",
														"nodeType": "YulTypedName",
														"src": "11658:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11673:4:12",
														"nodeType": "YulTypedName",
														"src": "11673:4:12",
														"type": ""
													}
												],
												"src": "11507:419:12"
											},
											{
												"body": {
													"nativeSrc": "12038:114:12",
													"nodeType": "YulBlock",
													"src": "12038:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12060:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12060:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12068:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12068:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12056:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12056:3:12"
																		},
																		"nativeSrc": "12056:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12056:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a20726563697069656e7420626c61636b6c69737465",
																		"kind": "string",
																		"nativeSrc": "12072:34:12",
																		"nodeType": "YulLiteral",
																		"src": "12072:34:12",
																		"type": "",
																		"value": "BasedToken: recipient blackliste"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12049:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12049:6:12"
																},
																"nativeSrc": "12049:58:12",
																"nodeType": "YulFunctionCall",
																"src": "12049:58:12"
															},
															"nativeSrc": "12049:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "12049:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12128:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12128:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12136:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12136:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12124:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12124:3:12"
																		},
																		"nativeSrc": "12124:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12124:15:12"
																	},
																	{
																		"hexValue": "64",
																		"kind": "string",
																		"nativeSrc": "12141:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12141:3:12",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12117:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12117:6:12"
																},
																"nativeSrc": "12117:28:12",
																"nodeType": "YulFunctionCall",
																"src": "12117:28:12"
															},
															"nativeSrc": "12117:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "12117:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532",
												"nativeSrc": "11932:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12030:6:12",
														"nodeType": "YulTypedName",
														"src": "12030:6:12",
														"type": ""
													}
												],
												"src": "11932:220:12"
											},
											{
												"body": {
													"nativeSrc": "12304:220:12",
													"nodeType": "YulBlock",
													"src": "12304:220:12",
													"statements": [
														{
															"nativeSrc": "12314:74:12",
															"nodeType": "YulAssignment",
															"src": "12314:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12380:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12380:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12385:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12385:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12321:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12321:58:12"
																},
																"nativeSrc": "12321:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12321:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12314:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12314:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12486:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12486:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532",
																	"nativeSrc": "12397:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12397:88:12"
																},
																"nativeSrc": "12397:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12397:93:12"
															},
															"nativeSrc": "12397:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12397:93:12"
														},
														{
															"nativeSrc": "12499:19:12",
															"nodeType": "YulAssignment",
															"src": "12499:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12510:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12510:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12515:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12515:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12506:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12506:3:12"
																},
																"nativeSrc": "12506:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12506:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12499:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12499:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12158:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12292:3:12",
														"nodeType": "YulTypedName",
														"src": "12292:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12300:3:12",
														"nodeType": "YulTypedName",
														"src": "12300:3:12",
														"type": ""
													}
												],
												"src": "12158:366:12"
											},
											{
												"body": {
													"nativeSrc": "12701:248:12",
													"nodeType": "YulBlock",
													"src": "12701:248:12",
													"statements": [
														{
															"nativeSrc": "12711:26:12",
															"nodeType": "YulAssignment",
															"src": "12711:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12723:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12723:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12734:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12734:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12719:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12719:3:12"
																},
																"nativeSrc": "12719:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12719:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12711:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12711:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12758:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12758:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12769:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12769:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12754:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12754:3:12"
																		},
																		"nativeSrc": "12754:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12754:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12777:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12777:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12783:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12783:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12773:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12773:3:12"
																		},
																		"nativeSrc": "12773:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12773:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12747:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12747:6:12"
																},
																"nativeSrc": "12747:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12747:47:12"
															},
															"nativeSrc": "12747:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12747:47:12"
														},
														{
															"nativeSrc": "12803:139:12",
															"nodeType": "YulAssignment",
															"src": "12803:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12937:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12937:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12811:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12811:124:12"
																},
																"nativeSrc": "12811:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12811:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12803:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12803:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12530:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12681:9:12",
														"nodeType": "YulTypedName",
														"src": "12681:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12696:4:12",
														"nodeType": "YulTypedName",
														"src": "12696:4:12",
														"type": ""
													}
												],
												"src": "12530:419:12"
											},
											{
												"body": {
													"nativeSrc": "12999:147:12",
													"nodeType": "YulBlock",
													"src": "12999:147:12",
													"statements": [
														{
															"nativeSrc": "13009:25:12",
															"nodeType": "YulAssignment",
															"src": "13009:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13032:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13032:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13014:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13014:17:12"
																},
																"nativeSrc": "13014:20:12",
																"nodeType": "YulFunctionCall",
																"src": "13014:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13009:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13009:1:12"
																}
															]
														},
														{
															"nativeSrc": "13043:25:12",
															"nodeType": "YulAssignment",
															"src": "13043:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13066:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13066:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13048:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13048:17:12"
																},
																"nativeSrc": "13048:20:12",
																"nodeType": "YulFunctionCall",
																"src": "13048:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13043:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13043:1:12"
																}
															]
														},
														{
															"nativeSrc": "13077:16:12",
															"nodeType": "YulAssignment",
															"src": "13077:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13088:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13088:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13091:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13091:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13084:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13084:3:12"
																},
																"nativeSrc": "13084:9:12",
																"nodeType": "YulFunctionCall",
																"src": "13084:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13077:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13077:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13117:22:12",
																"nodeType": "YulBlock",
																"src": "13117:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13119:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13119:16:12"
																			},
																			"nativeSrc": "13119:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13119:18:12"
																		},
																		"nativeSrc": "13119:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13119:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13109:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13109:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13112:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13112:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13106:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13106:2:12"
																},
																"nativeSrc": "13106:10:12",
																"nodeType": "YulFunctionCall",
																"src": "13106:10:12"
															},
															"nativeSrc": "13103:36:12",
															"nodeType": "YulIf",
															"src": "13103:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12955:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12986:1:12",
														"nodeType": "YulTypedName",
														"src": "12986:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12989:1:12",
														"nodeType": "YulTypedName",
														"src": "12989:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12995:3:12",
														"nodeType": "YulTypedName",
														"src": "12995:3:12",
														"type": ""
													}
												],
												"src": "12955:191:12"
											},
											{
												"body": {
													"nativeSrc": "13217:53:12",
													"nodeType": "YulBlock",
													"src": "13217:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13234:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13234:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13257:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13257:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13239:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "13239:17:12"
																		},
																		"nativeSrc": "13239:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13239:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13227:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13227:6:12"
																},
																"nativeSrc": "13227:37:12",
																"nodeType": "YulFunctionCall",
																"src": "13227:37:12"
															},
															"nativeSrc": "13227:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "13227:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13152:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13205:5:12",
														"nodeType": "YulTypedName",
														"src": "13205:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13212:3:12",
														"nodeType": "YulTypedName",
														"src": "13212:3:12",
														"type": ""
													}
												],
												"src": "13152:118:12"
											},
											{
												"body": {
													"nativeSrc": "13430:288:12",
													"nodeType": "YulBlock",
													"src": "13430:288:12",
													"statements": [
														{
															"nativeSrc": "13440:26:12",
															"nodeType": "YulAssignment",
															"src": "13440:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13452:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13452:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13463:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13463:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13448:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13448:3:12"
																},
																"nativeSrc": "13448:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13448:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13440:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13440:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13520:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13520:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13533:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13533:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13544:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13544:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13529:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13529:3:12"
																		},
																		"nativeSrc": "13529:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13529:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13476:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13476:43:12"
																},
																"nativeSrc": "13476:71:12",
																"nodeType": "YulFunctionCall",
																"src": "13476:71:12"
															},
															"nativeSrc": "13476:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "13476:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13601:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13601:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13614:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13614:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13625:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13625:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13610:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13610:3:12"
																		},
																		"nativeSrc": "13610:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13610:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13557:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13557:43:12"
																},
																"nativeSrc": "13557:72:12",
																"nodeType": "YulFunctionCall",
																"src": "13557:72:12"
															},
															"nativeSrc": "13557:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "13557:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13683:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13683:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13696:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13696:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13707:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13707:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13692:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13692:3:12"
																		},
																		"nativeSrc": "13692:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13692:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13639:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13639:43:12"
																},
																"nativeSrc": "13639:72:12",
																"nodeType": "YulFunctionCall",
																"src": "13639:72:12"
															},
															"nativeSrc": "13639:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "13639:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13276:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13386:9:12",
														"nodeType": "YulTypedName",
														"src": "13386:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13398:6:12",
														"nodeType": "YulTypedName",
														"src": "13398:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13406:6:12",
														"nodeType": "YulTypedName",
														"src": "13406:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13414:6:12",
														"nodeType": "YulTypedName",
														"src": "13414:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13425:4:12",
														"nodeType": "YulTypedName",
														"src": "13425:4:12",
														"type": ""
													}
												],
												"src": "13276:442:12"
											},
											{
												"body": {
													"nativeSrc": "13822:124:12",
													"nodeType": "YulBlock",
													"src": "13822:124:12",
													"statements": [
														{
															"nativeSrc": "13832:26:12",
															"nodeType": "YulAssignment",
															"src": "13832:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13844:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13844:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13855:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13855:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13840:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13840:3:12"
																},
																"nativeSrc": "13840:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13840:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13832:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13832:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13912:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13912:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13925:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13925:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13936:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13936:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13921:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13921:3:12"
																		},
																		"nativeSrc": "13921:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13921:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13868:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13868:43:12"
																},
																"nativeSrc": "13868:71:12",
																"nodeType": "YulFunctionCall",
																"src": "13868:71:12"
															},
															"nativeSrc": "13868:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "13868:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13724:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13794:9:12",
														"nodeType": "YulTypedName",
														"src": "13794:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13806:6:12",
														"nodeType": "YulTypedName",
														"src": "13806:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13817:4:12",
														"nodeType": "YulTypedName",
														"src": "13817:4:12",
														"type": ""
													}
												],
												"src": "13724:222:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: sender blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: recipient blackliste\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b5060405161306238038061306283398181016040528101906100319190610766565b6040518060400160405280600a81526020017f4261736564546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f424153454400000000000000000000000000000000000000000000000000000081525081600390816100ac91906109c5565b5080600490816100bc91906109c5565b5050506100d15f5f1b3361019b60201b60201c565b506101027f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361019b60201b60201c565b506101337f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3361019b60201b60201c565b5061014261029160201b60201c565b600a61014e9190610bfc565b600a61015a9190610c46565b608081815250506101953361017361029160201b60201c565b600a61017f9190610bfc565b8361018a9190610c46565b61029960201b60201c565b50610edd565b5f6101ac838361031e60201b60201c565b61028757600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061022461038260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061028b565b5f90505b92915050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610309575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103009190610cc6565b60405180910390fd5b61031a5f838361038960201b60201c565b5050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b61039761050160201b60201c565b156103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90610d39565b60405180910390fd5b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045890610da1565b60405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e290610e2f565b60405180910390fd5b6104fc83838361051660201b60201c565b505050565b5f60055f9054906101000a900460ff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610566578060025f82825461055a9190610e4d565b92505081905550610634565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156105ef578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016105e693929190610e8f565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361067b578060025f82825403925050819055506106c5565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107229190610ec4565b60405180910390a3505050565b5f5ffd5b5f819050919050565b61074581610733565b811461074f575f5ffd5b50565b5f815190506107608161073c565b92915050565b5f6020828403121561077b5761077a61072f565b5b5f61078884828501610752565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061080c57607f821691505b60208210810361081f5761081e6107c8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610846565b61088b8683610846565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6108c66108c16108bc84610733565b6108a3565b610733565b9050919050565b5f819050919050565b6108df836108ac565b6108f36108eb826108cd565b848454610852565b825550505050565b5f5f905090565b61090a6108fb565b6109158184846108d6565b505050565b5b818110156109385761092d5f82610902565b60018101905061091b565b5050565b601f82111561097d5761094e81610825565b61095784610837565b81016020851015610966578190505b61097a61097285610837565b83018261091a565b50505b505050565b5f82821c905092915050565b5f61099d5f1984600802610982565b1980831691505092915050565b5f6109b5838361098e565b9150826002028217905092915050565b6109ce82610791565b67ffffffffffffffff8111156109e7576109e661079b565b5b6109f182546107f5565b6109fc82828561093c565b5f60209050601f831160018114610a2d575f8415610a1b578287015190505b610a2585826109aa565b865550610a8c565b601f198416610a3b86610825565b5f5b82811015610a6257848901518255600182019150602085019450602081019050610a3d565b86831015610a7f5784890151610a7b601f89168261098e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610b1657808604811115610af257610af1610a94565b5b6001851615610b015780820291505b8081029050610b0f85610ac1565b9450610ad6565b94509492505050565b5f82610b2e5760019050610be9565b81610b3b575f9050610be9565b8160018114610b515760028114610b5b57610b8a565b6001915050610be9565b60ff841115610b6d57610b6c610a94565b5b8360020a915084821115610b8457610b83610a94565b5b50610be9565b5060208310610133831016604e8410600b8410161715610bbf5782820a905083811115610bba57610bb9610a94565b5b610be9565b610bcc8484846001610acd565b92509050818404811115610be357610be2610a94565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610c0682610733565b9150610c1183610bf0565b9250610c3e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b1f565b905092915050565b5f610c5082610733565b9150610c5b83610733565b9250828202610c6981610733565b91508282048414831517610c8057610c7f610a94565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cb082610c87565b9050919050565b610cc081610ca6565b82525050565b5f602082019050610cd95f830184610cb7565b92915050565b5f82825260208201905092915050565b7f4261736564546f6b656e3a2070617573656400000000000000000000000000005f82015250565b5f610d23601283610cdf565b9150610d2e82610cef565b602082019050919050565b5f6020820190508181035f830152610d5081610d17565b9050919050565b7f4261736564546f6b656e3a2073656e64657220626c61636b6c697374656400005f82015250565b5f610d8b601e83610cdf565b9150610d9682610d57565b602082019050919050565b5f6020820190508181035f830152610db881610d7f565b9050919050565b7f4261736564546f6b656e3a20726563697069656e7420626c61636b6c697374655f8201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b5f610e19602183610cdf565b9150610e2482610dbf565b604082019050919050565b5f6020820190508181035f830152610e4681610e0d565b9050919050565b5f610e5782610733565b9150610e6283610733565b9250828201905080821115610e7a57610e79610a94565b5b92915050565b610e8981610733565b82525050565b5f606082019050610ea25f830186610cb7565b610eaf6020830185610e80565b610ebc6040830184610e80565b949350505050565b5f602082019050610ed75f830184610e80565b92915050565b608051612166610efc5f395f8181610bda0152610c4401526121665ff3fe608060405234801561000f575f5ffd5b50600436106101d8575f3560e01c80635c975abb11610102578063a9059cbb116100a0578063d547741f1161006f578063d547741f14610530578063dbac26e91461054c578063dd62ed3e1461057c578063e63ab1e9146105ac576101d8565b8063a9059cbb146104ba578063b88a802f146104ea578063cf849442146104f4578063d539139314610512576101d8565b80638456cb59116100dc5780638456cb591461044457806391d148541461044e57806395d89b411461047e578063a217fddf1461049c576101d8565b80635c975abb146103da57806370a08231146103f857806379cc679014610428576101d8565b80632f2ff15d1161017a5780633f4ba83a116101495780633f4ba83a1461036857806340c10f191461037257806342966c681461038e5780635c16e15e146103aa576101d8565b80632f2ff15d146102f4578063313ce5671461031057806336568abe1461032e57806337c909ec1461034a576101d8565b8063153b0d1e116101b6578063153b0d1e1461025a57806318160ddd1461027657806323b872dd14610294578063248a9ca3146102c4576101d8565b806301ffc9a7146101dc57806306fdde031461020c578063095ea7b31461022a575b5f5ffd5b6101f660048036038101906101f1919061199c565b6105ca565b60405161020391906119e1565b60405180910390f35b610214610643565b6040516102219190611a6a565b60405180910390f35b610244600480360381019061023f9190611b17565b6106d3565b60405161025191906119e1565b60405180910390f35b610274600480360381019061026f9190611b7f565b6106f5565b005b61027e61075a565b60405161028b9190611bcc565b60405180910390f35b6102ae60048036038101906102a99190611be5565b610763565b6040516102bb91906119e1565b60405180910390f35b6102de60048036038101906102d99190611c68565b610791565b6040516102eb9190611ca2565b60405180910390f35b61030e60048036038101906103099190611cbb565b6107ae565b005b6103186107d0565b6040516103259190611d14565b60405180910390f35b61034860048036038101906103439190611cbb565b6107d8565b005b610352610853565b60405161035f9190611bcc565b60405180910390f35b61037061085a565b005b61038c60048036038101906103879190611b17565b61088f565b005b6103a860048036038101906103a39190611d2d565b6108c8565b005b6103c460048036038101906103bf9190611d58565b6108dc565b6040516103d19190611bcc565b60405180910390f35b6103e26108f1565b6040516103ef91906119e1565b60405180910390f35b610412600480360381019061040d9190611d58565b610906565b60405161041f9190611bcc565b60405180910390f35b610442600480360381019061043d9190611b17565b61094b565b005b61044c61096b565b005b61046860048036038101906104639190611cbb565b6109a0565b60405161047591906119e1565b60405180910390f35b610486610a04565b6040516104939190611a6a565b60405180910390f35b6104a4610a94565b6040516104b19190611ca2565b60405180910390f35b6104d460048036038101906104cf9190611b17565b610a9a565b6040516104e191906119e1565b60405180910390f35b6104f2610abc565b005b6104fc610c42565b6040516105099190611bcc565b60405180910390f35b61051a610c66565b6040516105279190611ca2565b60405180910390f35b61054a60048036038101906105459190611cbb565b610c8a565b005b61056660048036038101906105619190611d58565b610cac565b60405161057391906119e1565b60405180910390f35b61059660048036038101906105919190611d83565b610cc9565b6040516105a39190611bcc565b60405180910390f35b6105b4610d4b565b6040516105c19190611ca2565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063c575061063b82610d6f565b5b9050919050565b60606003805461065290611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461067e90611dee565b80156106c95780601f106106a0576101008083540402835291602001916106c9565b820191905f5260205f20905b8154815290600101906020018083116106ac57829003601f168201915b5050505050905090565b5f5f6106dd610dd8565b90506106ea818585610ddf565b600191505092915050565b5f5f1b61070181610df1565b8160075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b5f600254905090565b5f5f61076d610dd8565b905061077a858285610e05565b610785858585610e98565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6107b782610791565b6107c081610df1565b6107ca8383610f88565b50505050565b5f6012905090565b6107e0610dd8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610844576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61084e8282611072565b505050565b6201518081565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61088481610df1565b61088c61115c565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66108b981610df1565b6108c383836111bd565b505050565b6108d96108d3610dd8565b8261123c565b50565b6008602052805f5260405f205f915090505481565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61095d82610957610dd8565b83610e05565b610967828261123c565b5050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61099581610df1565b61099d6112bb565b50565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610a1390611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3f90611dee565b8015610a8a5780601f10610a6157610100808354040283529160200191610a8a565b820191905f5260205f20905b815481529060010190602001808311610a6d57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f610aa4610dd8565b9050610ab1818585610e98565b600191505092915050565b6201518060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b089190611e4b565b421015610b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4190611ec8565b60405180910390fd5b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f30565b60405180910390fd5b610bfe337f00000000000000000000000000000000000000000000000000000000000000006111bd565b4260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c9382610791565b610c9c81610df1565b610ca68383611072565b50505050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610dec838383600161131d565b505050565b610e0281610dfd610dd8565b6114ec565b50565b5f610e108484610cc9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610e925781811015610e83578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e7a93929190611f5d565b60405180910390fd5b610e9184848484035f61131d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f08575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610eff9190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f78575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6f9190611f92565b60405180910390fd5b610f8383838361153d565b505050565b5f610f9383836109a0565b61106857600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611005610dd8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061106c565b5f90505b92915050565b5f61107d83836109a0565b15611152575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506110ef610dd8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611156565b5f90505b92915050565b6111646116a9565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111a6610dd8565b6040516111b39190611f92565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361122d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112249190611f92565b60405180910390fd5b6112385f838361153d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ac575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112a39190611f92565b60405180910390fd5b6112b7825f8361153d565b5050565b6112c36116e9565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611306610dd8565b6040516113139190611f92565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361138d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113849190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113fd575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113f49190611f92565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156114e6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516114dd9190611bcc565b60405180910390a35b50505050565b6114f682826109a0565b6115395780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611530929190611fab565b60405180910390fd5b5050565b6115456108f1565b15611585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157c9061201c565b60405180910390fd5b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561160f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160690612084565b60405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169090612112565b60405180910390fd5b6116a483838361172a565b505050565b6116b16108f1565b6116e7576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116f16108f1565b15611728576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361177a578060025f82825461176e9190611e4b565b92505081905550611848565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611803578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117fa93929190611f5d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361188f578060025f82825403925050819055506118d9565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119369190611bcc565b60405180910390a3505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61197b81611947565b8114611985575f5ffd5b50565b5f8135905061199681611972565b92915050565b5f602082840312156119b1576119b0611943565b5b5f6119be84828501611988565b91505092915050565b5f8115159050919050565b6119db816119c7565b82525050565b5f6020820190506119f45f8301846119d2565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a3c826119fa565b611a468185611a04565b9350611a56818560208601611a14565b611a5f81611a22565b840191505092915050565b5f6020820190508181035f830152611a828184611a32565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ab382611a8a565b9050919050565b611ac381611aa9565b8114611acd575f5ffd5b50565b5f81359050611ade81611aba565b92915050565b5f819050919050565b611af681611ae4565b8114611b00575f5ffd5b50565b5f81359050611b1181611aed565b92915050565b5f5f60408385031215611b2d57611b2c611943565b5b5f611b3a85828601611ad0565b9250506020611b4b85828601611b03565b9150509250929050565b611b5e816119c7565b8114611b68575f5ffd5b50565b5f81359050611b7981611b55565b92915050565b5f5f60408385031215611b9557611b94611943565b5b5f611ba285828601611ad0565b9250506020611bb385828601611b6b565b9150509250929050565b611bc681611ae4565b82525050565b5f602082019050611bdf5f830184611bbd565b92915050565b5f5f5f60608486031215611bfc57611bfb611943565b5b5f611c0986828701611ad0565b9350506020611c1a86828701611ad0565b9250506040611c2b86828701611b03565b9150509250925092565b5f819050919050565b611c4781611c35565b8114611c51575f5ffd5b50565b5f81359050611c6281611c3e565b92915050565b5f60208284031215611c7d57611c7c611943565b5b5f611c8a84828501611c54565b91505092915050565b611c9c81611c35565b82525050565b5f602082019050611cb55f830184611c93565b92915050565b5f5f60408385031215611cd157611cd0611943565b5b5f611cde85828601611c54565b9250506020611cef85828601611ad0565b9150509250929050565b5f60ff82169050919050565b611d0e81611cf9565b82525050565b5f602082019050611d275f830184611d05565b92915050565b5f60208284031215611d4257611d41611943565b5b5f611d4f84828501611b03565b91505092915050565b5f60208284031215611d6d57611d6c611943565b5b5f611d7a84828501611ad0565b91505092915050565b5f5f60408385031215611d9957611d98611943565b5b5f611da685828601611ad0565b9250506020611db785828601611ad0565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e0557607f821691505b602082108103611e1857611e17611dc1565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e5582611ae4565b9150611e6083611ae4565b9250828201905080821115611e7857611e77611e1e565b5b92915050565b7f4261736564546f6b656e3a20726577617264206e6f74207265616479000000005f82015250565b5f611eb2601c83611a04565b9150611ebd82611e7e565b602082019050919050565b5f6020820190508181035f830152611edf81611ea6565b9050919050565b7f4261736564546f6b656e3a20626c61636b6c69737465640000000000000000005f82015250565b5f611f1a601783611a04565b9150611f2582611ee6565b602082019050919050565b5f6020820190508181035f830152611f4781611f0e565b9050919050565b611f5781611aa9565b82525050565b5f606082019050611f705f830186611f4e565b611f7d6020830185611bbd565b611f8a6040830184611bbd565b949350505050565b5f602082019050611fa55f830184611f4e565b92915050565b5f604082019050611fbe5f830185611f4e565b611fcb6020830184611c93565b9392505050565b7f4261736564546f6b656e3a2070617573656400000000000000000000000000005f82015250565b5f612006601283611a04565b915061201182611fd2565b602082019050919050565b5f6020820190508181035f83015261203381611ffa565b9050919050565b7f4261736564546f6b656e3a2073656e64657220626c61636b6c697374656400005f82015250565b5f61206e601e83611a04565b91506120798261203a565b602082019050919050565b5f6020820190508181035f83015261209b81612062565b9050919050565b7f4261736564546f6b656e3a20726563697069656e7420626c61636b6c697374655f8201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6120fc602183611a04565b9150612107826120a2565b604082019050919050565b5f6020820190508181035f830152612129816120f0565b905091905056fea264697066735822122000a0558c635550c95a8c20d91c1df72c495862759aa84695ceae834f004f328564736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3062 CODESIZE SUB DUP1 PUSH2 0x3062 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4261736564546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4241534544000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST POP POP POP PUSH2 0xD1 PUSH0 PUSH0 SHL CALLER PUSH2 0x19B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x102 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x19B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x133 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x19B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x142 PUSH2 0x291 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0xA PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH2 0x195 CALLER PUSH2 0x173 PUSH2 0x291 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST DUP4 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xEDD JUMP JUMPDEST PUSH0 PUSH2 0x1AC DUP4 DUP4 PUSH2 0x31E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x287 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x224 PUSH2 0x382 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x28B JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x309 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31A PUSH0 DUP4 DUP4 PUSH2 0x389 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x501 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x458 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FC DUP4 DUP4 DUP4 PUSH2 0x516 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x566 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x634 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5EF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C5 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x745 DUP2 PUSH2 0x733 JUMP JUMPDEST DUP2 EQ PUSH2 0x74F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x760 DUP2 PUSH2 0x73C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x72F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x788 DUP5 DUP3 DUP6 ADD PUSH2 0x752 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x80C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81F JUMPI PUSH2 0x81E PUSH2 0x7C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x881 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x88B DUP7 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8C6 PUSH2 0x8C1 PUSH2 0x8BC DUP5 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DF DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x8EB DUP3 PUSH2 0x8CD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x852 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x915 DUP2 DUP5 DUP5 PUSH2 0x8D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x938 JUMPI PUSH2 0x92D PUSH0 DUP3 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x91B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x97D JUMPI PUSH2 0x94E DUP2 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x957 DUP5 PUSH2 0x837 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x966 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x97A PUSH2 0x972 DUP6 PUSH2 0x837 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x91A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x99D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x982 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9B5 DUP4 DUP4 PUSH2 0x98E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9CE DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E7 JUMPI PUSH2 0x9E6 PUSH2 0x79B JUMP JUMPDEST JUMPDEST PUSH2 0x9F1 DUP3 SLOAD PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x9FC DUP3 DUP3 DUP6 PUSH2 0x93C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA2D JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA1B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA25 DUP6 DUP3 PUSH2 0x9AA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA3B DUP7 PUSH2 0x825 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA62 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA3D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA7F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA7B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x98E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB16 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0xA94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB01 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB0F DUP6 PUSH2 0xAC1 JUMP JUMPDEST SWAP5 POP PUSH2 0xAD6 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB2E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBE9 JUMP JUMPDEST DUP2 PUSH2 0xB3B JUMPI PUSH0 SWAP1 POP PUSH2 0xBE9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB51 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB5B JUMPI PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB6D JUMPI PUSH2 0xB6C PUSH2 0xA94 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB83 PUSH2 0xA94 JUMP JUMPDEST JUMPDEST POP PUSH2 0xBE9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBBF JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBBA JUMPI PUSH2 0xBB9 PUSH2 0xA94 JUMP JUMPDEST JUMPDEST PUSH2 0xBE9 JUMP JUMPDEST PUSH2 0xBCC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xACD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBE3 JUMPI PUSH2 0xBE2 PUSH2 0xA94 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC06 DUP3 PUSH2 0x733 JUMP JUMPDEST SWAP2 POP PUSH2 0xC11 DUP4 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 POP PUSH2 0xC3E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC50 DUP3 PUSH2 0x733 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5B DUP4 PUSH2 0x733 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC69 DUP2 PUSH2 0x733 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xA94 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB0 DUP3 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC0 DUP2 PUSH2 0xCA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD23 PUSH1 0x12 DUP4 PUSH2 0xCDF JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD50 DUP2 PUSH2 0xD17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A2073656E64657220626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD8B PUSH1 0x1E DUP4 PUSH2 0xCDF JUMP JUMPDEST SWAP2 POP PUSH2 0xD96 DUP3 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDB8 DUP2 PUSH2 0xD7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A20726563697069656E7420626C61636B6C69737465 PUSH0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE19 PUSH1 0x21 DUP4 PUSH2 0xCDF JUMP JUMPDEST SWAP2 POP PUSH2 0xE24 DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE46 DUP2 PUSH2 0xE0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE57 DUP3 PUSH2 0x733 JUMP JUMPDEST SWAP2 POP PUSH2 0xE62 DUP4 PUSH2 0x733 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7A JUMPI PUSH2 0xE79 PUSH2 0xA94 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE89 DUP2 PUSH2 0x733 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEA2 PUSH0 DUP4 ADD DUP7 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xEAF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0xEBC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED7 PUSH0 DUP4 ADD DUP5 PUSH2 0xE80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2166 PUSH2 0xEFC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xBDA ADD MSTORE PUSH2 0xC44 ADD MSTORE PUSH2 0x2166 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5AC JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xCF849442 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x512 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x49C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x428 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x5C16E15E EQ PUSH2 0x3AA JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x37C909EC EQ PUSH2 0x34A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x153B0D1E GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1B7F JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1BE5 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44C PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH2 0xABC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FC PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x566 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B4 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x63C JUMPI POP PUSH2 0x63B DUP3 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x652 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67E SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6DD PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EA DUP2 DUP6 DUP6 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0x701 DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x76D PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B7 DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH2 0x7C0 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x7CA DUP4 DUP4 PUSH2 0xF88 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0xDD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP3 DUP3 PUSH2 0x1072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x884 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x88C PUSH2 0x115C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x8B9 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x8C3 DUP4 DUP4 PUSH2 0x11BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0x8D3 PUSH2 0xDD8 JUMP JUMPDEST DUP3 PUSH2 0x123C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95D DUP3 PUSH2 0x957 PUSH2 0xDD8 JUMP JUMPDEST DUP4 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x967 DUP3 DUP3 PUSH2 0x123C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x995 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x99D PUSH2 0x12BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA13 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3F SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA61 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAA4 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB1 DUP2 DUP6 DUP6 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB41 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE CALLER PUSH32 0x0 PUSH2 0x11BD JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC93 DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH2 0xC9C DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xCA6 DUP4 DUP4 PUSH2 0x1072 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x131D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE02 DUP2 PUSH2 0xDFD PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x14EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE10 DUP5 DUP5 PUSH2 0xCC9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE92 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE83 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE91 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x131D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6F SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF83 DUP4 DUP4 DUP4 PUSH2 0x153D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP4 DUP4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1005 PUSH2 0xDD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x106C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x107D DUP4 DUP4 PUSH2 0x9A0 JUMP JUMPDEST ISZERO PUSH2 0x1152 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10EF PUSH2 0xDD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1156 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1164 PUSH2 0x16A9 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11A6 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1238 PUSH0 DUP4 DUP4 PUSH2 0x153D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12AC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B7 DUP3 PUSH0 DUP4 PUSH2 0x153D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12C3 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1306 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1313 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14E6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14DD SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x14F6 DUP3 DUP3 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x1539 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1530 SWAP3 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1545 PUSH2 0x8F1 JUMP JUMPDEST ISZERO PUSH2 0x1585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157C SWAP1 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1606 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1690 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A4 DUP4 DUP4 DUP4 PUSH2 0x172A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16B1 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x16F1 PUSH2 0x8F1 JUMP JUMPDEST ISZERO PUSH2 0x1728 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x176E SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1848 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1803 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D9 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1936 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197B DUP2 PUSH2 0x1947 JUMP JUMPDEST DUP2 EQ PUSH2 0x1985 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1996 DUP2 PUSH2 0x1972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19BE DUP5 DUP3 DUP6 ADD PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x19C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3C DUP3 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x1A46 DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A56 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x1A5F DUP2 PUSH2 0x1A22 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A82 DUP2 DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 DUP3 PUSH2 0x1A8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC3 DUP2 PUSH2 0x1AA9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADE DUP2 PUSH2 0x1ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B00 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B11 DUP2 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3A DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4B DUP6 DUP3 DUP7 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5E DUP2 PUSH2 0x19C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B68 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B79 DUP2 PUSH2 0x1B55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BB3 DUP6 DUP3 DUP7 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC6 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDF PUSH0 DUP4 ADD DUP5 PUSH2 0x1BBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFB PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C09 DUP7 DUP3 DUP8 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C1A DUP7 DUP3 DUP8 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C2B DUP7 DUP3 DUP8 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C47 DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C51 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C62 DUP2 PUSH2 0x1C3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C8A DUP5 DUP3 DUP6 ADD PUSH2 0x1C54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C9C DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD1 JUMPI PUSH2 0x1CD0 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CDE DUP6 DUP3 DUP7 ADD PUSH2 0x1C54 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CEF DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0E DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D27 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D42 JUMPI PUSH2 0x1D41 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D4F DUP5 DUP3 DUP6 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6D JUMPI PUSH2 0x1D6C PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7A DUP5 DUP3 DUP6 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA6 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB7 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E05 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E18 JUMPI PUSH2 0x1E17 PUSH2 0x1DC1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E55 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E60 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E78 JUMPI PUSH2 0x1E77 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A20726577617264206E6F7420726561647900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB2 PUSH1 0x1C DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP3 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDF DUP2 PUSH2 0x1EA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A20626C61636B6C6973746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1A PUSH1 0x17 DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F25 DUP3 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F47 DUP2 PUSH2 0x1F0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 DUP2 PUSH2 0x1AA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F70 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1F7D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x1F8A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BBD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FBE PUSH0 DUP4 ADD DUP6 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1FCB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2006 PUSH1 0x12 DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x2011 DUP3 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2033 DUP2 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A2073656E64657220626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x206E PUSH1 0x1E DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x2079 DUP3 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x209B DUP2 PUSH2 0x2062 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A20726563697069656E7420626C61636B6C69737465 PUSH0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20FC PUSH1 0x21 DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x2107 DUP3 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2129 DUP2 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP LOG0 SSTORE DUP13 PUSH4 0x5550C95A DUP13 KECCAK256 0xD9 SHR SAR 0xF7 0x2C BLOBHASH PC PUSH3 0x759AA8 CHAINID SWAP6 0xCE 0xAE DUP4 0x4F STOP 0x4F ORIGIN DUP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "302:1835:11:-:0;;;712:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;786:42:11::1;2241:4:0;797:18:11;;817:10;786;;;:42;;:::i;:::-;;838:35;415:24;862:10;838;;;:35;;:::i;:::-;;883;483:24;907:10;883;;;:35;;:::i;:::-;;954:10;:8;;;:10;;:::i;:::-;950:2;:14;;;;:::i;:::-;945:2;:19;;;;:::i;:::-;929:35;;;;::::0;::::1;974:49;980:10;1012;:8;;;:10;;:::i;:::-;1008:2;:14;;;;:::i;:::-;992:13;:30;;;;:::i;:::-;974:5;;;:49;;:::i;:::-;712:318:::0;302:1835;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;1786:349:11:-;1912:8;:6;;;:8;;:::i;:::-;1911:9;1903:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;1962:11;:17;1974:4;1962:17;;;;;;;;;;;;;;;;;;;;;;;;;1961:18;1953:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2033:11;:15;2045:2;2033:15;;;;;;;;;;;;;;;;;;;;;;;;;2032:16;2024:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2097:31;2111:4;2117:2;2121:6;2097:13;;;:31;;:::i;:::-;1786:349;;;:::o;1726:84:8:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;5912:1107:3:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;88:117:12:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3248:1;3241:8;;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:102;6423:8;6470:5;6467:1;6463:13;6442:34;;6381:102;;;:::o;6489:848::-;6550:5;6557:4;6581:6;6572:15;;6605:5;6596:14;;6619:712;6640:1;6630:8;6627:15;6619:712;;;6735:4;6730:3;6726:14;6720:4;6717:24;6714:50;;;6744:18;;:::i;:::-;6714:50;6794:1;6784:8;6780:16;6777:451;;;7209:4;7202:5;7198:16;7189:25;;6777:451;7259:4;7253;7249:15;7241:23;;7289:32;7312:8;7289:32;:::i;:::-;7277:44;;6619:712;;;6489:848;;;;;;;:::o;7343:1073::-;7397:5;7588:8;7578:40;;7609:1;7600:10;;7611:5;;7578:40;7637:4;7627:36;;7654:1;7645:10;;7656:5;;7627:36;7723:4;7771:1;7766:27;;;;7807:1;7802:191;;;;7716:277;;7766:27;7784:1;7775:10;;7786:5;;;7802:191;7847:3;7837:8;7834:17;7831:43;;;7854:18;;:::i;:::-;7831:43;7903:8;7900:1;7896:16;7887:25;;7938:3;7931:5;7928:14;7925:40;;;7945:18;;:::i;:::-;7925:40;7978:5;;;7716:277;;8102:2;8092:8;8089:16;8083:3;8077:4;8074:13;8070:36;8052:2;8042:8;8039:16;8034:2;8028:4;8025:12;8021:35;8005:111;8002:246;;;8158:8;8152:4;8148:19;8139:28;;8193:3;8186:5;8183:14;8180:40;;;8200:18;;:::i;:::-;8180:40;8233:5;;8002:246;8273:42;8311:3;8301:8;8295:4;8292:1;8273:42;:::i;:::-;8258:57;;;;8347:4;8342:3;8338:14;8331:5;8328:25;8325:51;;;8356:18;;:::i;:::-;8325:51;8405:4;8398:5;8394:16;8385:25;;7343:1073;;;;;;:::o;8422:86::-;8457:7;8497:4;8490:5;8486:16;8475:27;;8422:86;;;:::o;8514:281::-;8572:5;8596:23;8614:4;8596:23;:::i;:::-;8588:31;;8640:25;8656:8;8640:25;:::i;:::-;8628:37;;8684:104;8721:66;8711:8;8705:4;8684:104;:::i;:::-;8675:113;;8514:281;;;;:::o;8801:410::-;8841:7;8864:20;8882:1;8864:20;:::i;:::-;8859:25;;8898:20;8916:1;8898:20;:::i;:::-;8893:25;;8953:1;8950;8946:9;8975:30;8993:11;8975:30;:::i;:::-;8964:41;;9154:1;9145:7;9141:15;9138:1;9135:22;9115:1;9108:9;9088:83;9065:139;;9184:18;;:::i;:::-;9065:139;8849:362;8801:410;;;;:::o;9217:126::-;9254:7;9294:42;9287:5;9283:54;9272:65;;9217:126;;;:::o;9349:96::-;9386:7;9415:24;9433:5;9415:24;:::i;:::-;9404:35;;9349:96;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:169::-;9887:11;9921:6;9916:3;9909:19;9961:4;9956:3;9952:14;9937:29;;9803:169;;;;:::o;9978:168::-;10118:20;10114:1;10106:6;10102:14;10095:44;9978:168;:::o;10152:366::-;10294:3;10315:67;10379:2;10374:3;10315:67;:::i;:::-;10308:74;;10391:93;10480:3;10391:93;:::i;:::-;10509:2;10504:3;10500:12;10493:19;;10152:366;;;:::o;10524:419::-;10690:4;10728:2;10717:9;10713:18;10705:26;;10777:9;10771:4;10767:20;10763:1;10752:9;10748:17;10741:47;10805:131;10931:4;10805:131;:::i;:::-;10797:139;;10524:419;;;:::o;10949:180::-;11089:32;11085:1;11077:6;11073:14;11066:56;10949:180;:::o;11135:366::-;11277:3;11298:67;11362:2;11357:3;11298:67;:::i;:::-;11291:74;;11374:93;11463:3;11374:93;:::i;:::-;11492:2;11487:3;11483:12;11476:19;;11135:366;;;:::o;11507:419::-;11673:4;11711:2;11700:9;11696:18;11688:26;;11760:9;11754:4;11750:20;11746:1;11735:9;11731:17;11724:47;11788:131;11914:4;11788:131;:::i;:::-;11780:139;;11507:419;;;:::o;11932:220::-;12072:34;12068:1;12060:6;12056:14;12049:58;12141:3;12136:2;12128:6;12124:15;12117:28;11932:220;:::o;12158:366::-;12300:3;12321:67;12385:2;12380:3;12321:67;:::i;:::-;12314:74;;12397:93;12486:3;12397:93;:::i;:::-;12515:2;12510:3;12506:12;12499:19;;12158:366;;;:::o;12530:419::-;12696:4;12734:2;12723:9;12719:18;12711:26;;12783:9;12777:4;12773:20;12769:1;12758:9;12754:17;12747:47;12811:131;12937:4;12811:131;:::i;:::-;12803:139;;12530:419;;;:::o;12955:191::-;12995:3;13014:20;13032:1;13014:20;:::i;:::-;13009:25;;13048:20;13066:1;13048:20;:::i;:::-;13043:25;;13091:1;13088;13084:9;13077:16;;13112:3;13109:1;13106:10;13103:36;;;13119:18;;:::i;:::-;13103:36;12955:191;;;;:::o;13152:118::-;13239:24;13257:5;13239:24;:::i;:::-;13234:3;13227:37;13152:118;;:::o;13276:442::-;13425:4;13463:2;13452:9;13448:18;13440:26;;13476:71;13544:1;13533:9;13529:17;13520:6;13476:71;:::i;:::-;13557:72;13625:2;13614:9;13610:18;13601:6;13557:72;:::i;:::-;13639;13707:2;13696:9;13692:18;13683:6;13639:72;:::i;:::-;13276:442;;;;;;:::o;13724:222::-;13817:4;13855:2;13844:9;13840:18;13832:26;;13868:71;13936:1;13925:9;13921:17;13912:6;13868:71;:::i;:::-;13724:222;;;;:::o;302:1835:11:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CLAIM_COOLDOWN_1384": {
									"entryPoint": 2131,
									"id": 1384,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 2708,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1374": {
									"entryPoint": 3174,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1379": {
									"entryPoint": 3403,
									"id": 1379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REWARD_AMOUNT_1381": {
									"entryPoint": 3138,
									"id": 1381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_922": {
									"entryPoint": 3551,
									"id": 922,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_982": {
									"entryPoint": 4893,
									"id": 982,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_904": {
									"entryPoint": 4668,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 5356,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 3569,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 3976,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_871": {
									"entryPoint": 4541,
									"id": 871,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1193": {
									"entryPoint": 3544,
									"id": 1193,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1302": {
									"entryPoint": 4795,
									"id": 1302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1273": {
									"entryPoint": 5865,
									"id": 1273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1286": {
									"entryPoint": 5801,
									"id": 1286,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 4210,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1030": {
									"entryPoint": 3589,
									"id": 1030,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_761": {
									"entryPoint": 3736,
									"id": 761,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1318": {
									"entryPoint": 4444,
									"id": 1318,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1575": {
									"entryPoint": 5437,
									"id": 1575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_838": {
									"entryPoint": 5930,
									"id": 838,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_658": {
									"entryPoint": 3273,
									"id": 658,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_682": {
									"entryPoint": 1747,
									"id": 682,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_617": {
									"entryPoint": 2310,
									"id": 617,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blacklisted_1388": {
									"entryPoint": 3244,
									"id": 1388,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_1154": {
									"entryPoint": 2379,
									"id": 1154,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1133": {
									"entryPoint": 2248,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_1533": {
									"entryPoint": 2748,
									"id": 1533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_595": {
									"entryPoint": 2000,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": 1937,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 1966,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 2464,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lastClaim_1392": {
									"entryPoint": 2268,
									"id": 1392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1456": {
									"entryPoint": 2191,
									"id": 1456,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_577": {
									"entryPoint": 1603,
									"id": 577,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1466": {
									"entryPoint": 2411,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1261": {
									"entryPoint": 2289,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_190": {
									"entryPoint": 2008,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 3210,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBlacklist_1493": {
									"entryPoint": 1781,
									"id": 1493,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1342": {
									"entryPoint": 3439,
									"id": 1342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1482,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_586": {
									"entryPoint": 2564,
									"id": 586,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_604": {
									"entryPoint": 1882,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_714": {
									"entryPoint": 1891,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_641": {
									"entryPoint": 2714,
									"id": 641,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1476": {
									"entryPoint": 2138,
									"id": 1476,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7617,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15875:12",
										"nodeType": "YulBlock",
										"src": "0:15875:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:77:12",
													"nodeType": "YulBlock",
													"src": "1860:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:12"
																},
																"nativeSrc": "1871:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:12"
															},
															"nativeSrc": "1871:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:12"
																		},
																		"nativeSrc": "1910:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:12"
																},
																"nativeSrc": "1903:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:12"
															},
															"nativeSrc": "1903:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:139:12"
											},
											{
												"body": {
													"nativeSrc": "1991:54:12",
													"nodeType": "YulBlock",
													"src": "1991:54:12",
													"statements": [
														{
															"nativeSrc": "2001:38:12",
															"nodeType": "YulAssignment",
															"src": "2001:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nativeSrc": "2015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:12"
																		},
																		"nativeSrc": "2031:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nativeSrc": "2011:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:12",
														"nodeType": "YulTypedName",
														"src": "1974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:12",
														"nodeType": "YulTypedName",
														"src": "1984:6:12",
														"type": ""
													}
												],
												"src": "1943:102:12"
											},
											{
												"body": {
													"nativeSrc": "2143:285:12",
													"nodeType": "YulBlock",
													"src": "2143:285:12",
													"statements": [
														{
															"nativeSrc": "2153:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:12"
																},
																"nativeSrc": "2167:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:12",
															"nodeType": "YulAssignment",
															"src": "2215:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:12"
																},
																"nativeSrc": "2222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:12"
																},
																"nativeSrc": "2302:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:12"
															},
															"nativeSrc": "2302:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:12"
														},
														{
															"nativeSrc": "2376:46:12",
															"nodeType": "YulAssignment",
															"src": "2376:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:12"
																		},
																		"nativeSrc": "2392:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																},
																"nativeSrc": "2383:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:12",
														"nodeType": "YulTypedName",
														"src": "2124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:12",
														"nodeType": "YulTypedName",
														"src": "2131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:12",
														"nodeType": "YulTypedName",
														"src": "2139:3:12",
														"type": ""
													}
												],
												"src": "2051:377:12"
											},
											{
												"body": {
													"nativeSrc": "2552:195:12",
													"nodeType": "YulBlock",
													"src": "2552:195:12",
													"statements": [
														{
															"nativeSrc": "2562:26:12",
															"nodeType": "YulAssignment",
															"src": "2562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:12"
																},
																"nativeSrc": "2570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:12"
																		},
																		"nativeSrc": "2605:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nativeSrc": "2624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:12"
																},
																"nativeSrc": "2598:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:12"
															},
															"nativeSrc": "2598:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:12"
														},
														{
															"nativeSrc": "2654:86:12",
															"nodeType": "YulAssignment",
															"src": "2654:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:12"
																},
																"nativeSrc": "2662:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:12",
														"nodeType": "YulTypedName",
														"src": "2536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:12",
														"nodeType": "YulTypedName",
														"src": "2547:4:12",
														"type": ""
													}
												],
												"src": "2434:313:12"
											},
											{
												"body": {
													"nativeSrc": "2798:81:12",
													"nodeType": "YulBlock",
													"src": "2798:81:12",
													"statements": [
														{
															"nativeSrc": "2808:65:12",
															"nodeType": "YulAssignment",
															"src": "2808:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:12"
																},
																"nativeSrc": "2819:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:12",
														"nodeType": "YulTypedName",
														"src": "2780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:12",
														"nodeType": "YulTypedName",
														"src": "2790:7:12",
														"type": ""
													}
												],
												"src": "2753:126:12"
											},
											{
												"body": {
													"nativeSrc": "2930:51:12",
													"nodeType": "YulBlock",
													"src": "2930:51:12",
													"statements": [
														{
															"nativeSrc": "2940:35:12",
															"nodeType": "YulAssignment",
															"src": "2940:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:12"
																},
																"nativeSrc": "2951:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:12",
														"nodeType": "YulTypedName",
														"src": "2912:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:12",
														"nodeType": "YulTypedName",
														"src": "2922:7:12",
														"type": ""
													}
												],
												"src": "2885:96:12"
											},
											{
												"body": {
													"nativeSrc": "3030:79:12",
													"nodeType": "YulBlock",
													"src": "3030:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:12",
																"nodeType": "YulBlock",
																"src": "3087:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:12"
																			},
																			"nativeSrc": "3089:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:12"
																		},
																		"nativeSrc": "3089:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:12"
																				},
																				"nativeSrc": "3060:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:12"
																		},
																		"nativeSrc": "3050:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:12"
																},
																"nativeSrc": "3043:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:12"
															},
															"nativeSrc": "3040:63:12",
															"nodeType": "YulIf",
															"src": "3040:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:12",
														"nodeType": "YulTypedName",
														"src": "3023:5:12",
														"type": ""
													}
												],
												"src": "2987:122:12"
											},
											{
												"body": {
													"nativeSrc": "3167:87:12",
													"nodeType": "YulBlock",
													"src": "3167:87:12",
													"statements": [
														{
															"nativeSrc": "3177:29:12",
															"nodeType": "YulAssignment",
															"src": "3177:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:12"
																},
																"nativeSrc": "3186:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:12"
																},
																"nativeSrc": "3215:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:12"
															},
															"nativeSrc": "3215:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:12",
														"nodeType": "YulTypedName",
														"src": "3145:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:12",
														"nodeType": "YulTypedName",
														"src": "3153:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:12",
														"nodeType": "YulTypedName",
														"src": "3161:5:12",
														"type": ""
													}
												],
												"src": "3115:139:12"
											},
											{
												"body": {
													"nativeSrc": "3305:32:12",
													"nodeType": "YulBlock",
													"src": "3305:32:12",
													"statements": [
														{
															"nativeSrc": "3315:16:12",
															"nodeType": "YulAssignment",
															"src": "3315:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:12",
																"nodeType": "YulIdentifier",
																"src": "3326:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:12",
														"nodeType": "YulTypedName",
														"src": "3287:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:12",
														"nodeType": "YulTypedName",
														"src": "3297:7:12",
														"type": ""
													}
												],
												"src": "3260:77:12"
											},
											{
												"body": {
													"nativeSrc": "3386:79:12",
													"nodeType": "YulBlock",
													"src": "3386:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:12",
																"nodeType": "YulBlock",
																"src": "3443:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:12"
																			},
																			"nativeSrc": "3445:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:12"
																		},
																		"nativeSrc": "3445:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:12"
																				},
																				"nativeSrc": "3416:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:12"
																		},
																		"nativeSrc": "3406:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:12"
																},
																"nativeSrc": "3399:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:12"
															},
															"nativeSrc": "3396:63:12",
															"nodeType": "YulIf",
															"src": "3396:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:12",
														"nodeType": "YulTypedName",
														"src": "3379:5:12",
														"type": ""
													}
												],
												"src": "3343:122:12"
											},
											{
												"body": {
													"nativeSrc": "3523:87:12",
													"nodeType": "YulBlock",
													"src": "3523:87:12",
													"statements": [
														{
															"nativeSrc": "3533:29:12",
															"nodeType": "YulAssignment",
															"src": "3533:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:12"
																},
																"nativeSrc": "3542:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:12"
																},
																"nativeSrc": "3571:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:12"
															},
															"nativeSrc": "3571:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:12",
														"nodeType": "YulTypedName",
														"src": "3501:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:12",
														"nodeType": "YulTypedName",
														"src": "3509:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:12",
														"nodeType": "YulTypedName",
														"src": "3517:5:12",
														"type": ""
													}
												],
												"src": "3471:139:12"
											},
											{
												"body": {
													"nativeSrc": "3699:391:12",
													"nodeType": "YulBlock",
													"src": "3699:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:12",
																"nodeType": "YulBlock",
																"src": "3745:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:12"
																			},
																			"nativeSrc": "3747:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:12"
																		},
																		"nativeSrc": "3747:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:12"
																		},
																		"nativeSrc": "3716:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:12"
																},
																"nativeSrc": "3712:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:12"
															},
															"nativeSrc": "3709:119:12",
															"nodeType": "YulIf",
															"src": "3709:119:12"
														},
														{
															"nativeSrc": "3838:117:12",
															"nodeType": "YulBlock",
															"src": "3838:117:12",
															"statements": [
																{
																	"nativeSrc": "3853:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:12"
																				},
																				"nativeSrc": "3913:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:12"
																		},
																		"nativeSrc": "3892:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:12",
															"nodeType": "YulBlock",
															"src": "3965:118:12",
															"statements": [
																{
																	"nativeSrc": "3980:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:12"
																				},
																				"nativeSrc": "4041:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:12"
																		},
																		"nativeSrc": "4020:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:12",
														"nodeType": "YulTypedName",
														"src": "3661:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:12",
														"nodeType": "YulTypedName",
														"src": "3672:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:12",
														"nodeType": "YulTypedName",
														"src": "3684:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:12",
														"nodeType": "YulTypedName",
														"src": "3692:6:12",
														"type": ""
													}
												],
												"src": "3616:474:12"
											},
											{
												"body": {
													"nativeSrc": "4136:76:12",
													"nodeType": "YulBlock",
													"src": "4136:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4190:16:12",
																"nodeType": "YulBlock",
																"src": "4190:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4199:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4199:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4202:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4202:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4192:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4192:6:12"
																			},
																			"nativeSrc": "4192:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4192:12:12"
																		},
																		"nativeSrc": "4192:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4192:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4159:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4159:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4181:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4181:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4166:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "4166:14:12"
																				},
																				"nativeSrc": "4166:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4166:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4156:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4156:2:12"
																		},
																		"nativeSrc": "4156:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4149:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:12"
																},
																"nativeSrc": "4149:40:12",
																"nodeType": "YulFunctionCall",
																"src": "4149:40:12"
															},
															"nativeSrc": "4146:60:12",
															"nodeType": "YulIf",
															"src": "4146:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4096:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4129:5:12",
														"nodeType": "YulTypedName",
														"src": "4129:5:12",
														"type": ""
													}
												],
												"src": "4096:116:12"
											},
											{
												"body": {
													"nativeSrc": "4267:84:12",
													"nodeType": "YulBlock",
													"src": "4267:84:12",
													"statements": [
														{
															"nativeSrc": "4277:29:12",
															"nodeType": "YulAssignment",
															"src": "4277:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4299:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4299:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4286:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4286:12:12"
																},
																"nativeSrc": "4286:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4286:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4277:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4277:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4315:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "4315:23:12"
																},
																"nativeSrc": "4315:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4315:30:12"
															},
															"nativeSrc": "4315:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4315:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4218:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4245:6:12",
														"nodeType": "YulTypedName",
														"src": "4245:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4253:3:12",
														"nodeType": "YulTypedName",
														"src": "4253:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4261:5:12",
														"nodeType": "YulTypedName",
														"src": "4261:5:12",
														"type": ""
													}
												],
												"src": "4218:133:12"
											},
											{
												"body": {
													"nativeSrc": "4437:388:12",
													"nodeType": "YulBlock",
													"src": "4437:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4483:83:12",
																"nodeType": "YulBlock",
																"src": "4483:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4485:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4485:77:12"
																			},
																			"nativeSrc": "4485:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4485:79:12"
																		},
																		"nativeSrc": "4485:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4485:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4458:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4458:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4467:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4467:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4454:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:12"
																		},
																		"nativeSrc": "4454:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4454:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4479:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4479:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4450:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4450:3:12"
																},
																"nativeSrc": "4450:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4450:32:12"
															},
															"nativeSrc": "4447:119:12",
															"nodeType": "YulIf",
															"src": "4447:119:12"
														},
														{
															"nativeSrc": "4576:117:12",
															"nodeType": "YulBlock",
															"src": "4576:117:12",
															"statements": [
																{
																	"nativeSrc": "4591:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4591:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4605:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4605:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4595:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4595:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4620:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4620:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4655:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4655:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4666:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4666:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4651:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4651:3:12"
																				},
																				"nativeSrc": "4651:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4651:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4675:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4675:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4630:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4630:20:12"
																		},
																		"nativeSrc": "4630:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4630:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4620:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4620:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4703:115:12",
															"nodeType": "YulBlock",
															"src": "4703:115:12",
															"statements": [
																{
																	"nativeSrc": "4718:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4718:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4732:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4722:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4722:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4748:60:12",
																	"nodeType": "YulAssignment",
																	"src": "4748:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4780:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4780:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4791:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4791:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4776:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4776:3:12"
																				},
																				"nativeSrc": "4776:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4776:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4800:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4800:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4758:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4758:17:12"
																		},
																		"nativeSrc": "4758:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4758:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4748:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4748:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4357:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4399:9:12",
														"nodeType": "YulTypedName",
														"src": "4399:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4410:7:12",
														"nodeType": "YulTypedName",
														"src": "4410:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4422:6:12",
														"nodeType": "YulTypedName",
														"src": "4422:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4430:6:12",
														"nodeType": "YulTypedName",
														"src": "4430:6:12",
														"type": ""
													}
												],
												"src": "4357:468:12"
											},
											{
												"body": {
													"nativeSrc": "4896:53:12",
													"nodeType": "YulBlock",
													"src": "4896:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4913:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4913:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4936:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4936:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4918:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4918:17:12"
																		},
																		"nativeSrc": "4918:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4918:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4906:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4906:6:12"
																},
																"nativeSrc": "4906:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4906:37:12"
															},
															"nativeSrc": "4906:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4906:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4831:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4884:5:12",
														"nodeType": "YulTypedName",
														"src": "4884:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4891:3:12",
														"nodeType": "YulTypedName",
														"src": "4891:3:12",
														"type": ""
													}
												],
												"src": "4831:118:12"
											},
											{
												"body": {
													"nativeSrc": "5053:124:12",
													"nodeType": "YulBlock",
													"src": "5053:124:12",
													"statements": [
														{
															"nativeSrc": "5063:26:12",
															"nodeType": "YulAssignment",
															"src": "5063:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5075:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5075:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5071:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5071:3:12"
																},
																"nativeSrc": "5071:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5071:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5063:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5063:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5143:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5143:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5156:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5156:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5167:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5167:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5152:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5152:3:12"
																		},
																		"nativeSrc": "5152:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5152:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5099:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5099:43:12"
																},
																"nativeSrc": "5099:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5099:71:12"
															},
															"nativeSrc": "5099:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5099:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4955:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5025:9:12",
														"nodeType": "YulTypedName",
														"src": "5025:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5037:6:12",
														"nodeType": "YulTypedName",
														"src": "5037:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5048:4:12",
														"nodeType": "YulTypedName",
														"src": "5048:4:12",
														"type": ""
													}
												],
												"src": "4955:222:12"
											},
											{
												"body": {
													"nativeSrc": "5283:519:12",
													"nodeType": "YulBlock",
													"src": "5283:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5329:83:12",
																"nodeType": "YulBlock",
																"src": "5329:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5331:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5331:77:12"
																			},
																			"nativeSrc": "5331:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5331:79:12"
																		},
																		"nativeSrc": "5331:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5331:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5304:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5304:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5313:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5313:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5300:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:12"
																		},
																		"nativeSrc": "5300:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5300:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5325:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5325:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5296:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5296:3:12"
																},
																"nativeSrc": "5296:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5296:32:12"
															},
															"nativeSrc": "5293:119:12",
															"nodeType": "YulIf",
															"src": "5293:119:12"
														},
														{
															"nativeSrc": "5422:117:12",
															"nodeType": "YulBlock",
															"src": "5422:117:12",
															"statements": [
																{
																	"nativeSrc": "5437:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5437:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5451:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5451:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5441:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5441:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5466:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5466:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5501:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5501:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5512:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5512:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5497:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5497:3:12"
																				},
																				"nativeSrc": "5497:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5497:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5521:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5521:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5476:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5476:20:12"
																		},
																		"nativeSrc": "5476:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5476:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5466:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5466:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5549:118:12",
															"nodeType": "YulBlock",
															"src": "5549:118:12",
															"statements": [
																{
																	"nativeSrc": "5564:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5564:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5578:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5578:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5568:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5568:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5594:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5594:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5629:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5629:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5640:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5640:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5625:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5625:3:12"
																				},
																				"nativeSrc": "5625:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5625:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5649:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5649:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5604:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5604:20:12"
																		},
																		"nativeSrc": "5604:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5594:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5594:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5677:118:12",
															"nodeType": "YulBlock",
															"src": "5677:118:12",
															"statements": [
																{
																	"nativeSrc": "5692:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5692:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5706:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5706:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5696:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5696:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5722:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5722:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5757:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5757:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5768:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5768:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5753:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5753:3:12"
																				},
																				"nativeSrc": "5753:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5753:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5777:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5777:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5732:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5732:20:12"
																		},
																		"nativeSrc": "5732:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5732:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5722:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5722:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5183:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5237:9:12",
														"nodeType": "YulTypedName",
														"src": "5237:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5248:7:12",
														"nodeType": "YulTypedName",
														"src": "5248:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5260:6:12",
														"nodeType": "YulTypedName",
														"src": "5260:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5268:6:12",
														"nodeType": "YulTypedName",
														"src": "5268:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5276:6:12",
														"nodeType": "YulTypedName",
														"src": "5276:6:12",
														"type": ""
													}
												],
												"src": "5183:619:12"
											},
											{
												"body": {
													"nativeSrc": "5853:32:12",
													"nodeType": "YulBlock",
													"src": "5853:32:12",
													"statements": [
														{
															"nativeSrc": "5863:16:12",
															"nodeType": "YulAssignment",
															"src": "5863:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5874:5:12",
																"nodeType": "YulIdentifier",
																"src": "5874:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5863:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5863:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5808:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5835:5:12",
														"nodeType": "YulTypedName",
														"src": "5835:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5845:7:12",
														"nodeType": "YulTypedName",
														"src": "5845:7:12",
														"type": ""
													}
												],
												"src": "5808:77:12"
											},
											{
												"body": {
													"nativeSrc": "5934:79:12",
													"nodeType": "YulBlock",
													"src": "5934:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5991:16:12",
																"nodeType": "YulBlock",
																"src": "5991:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6000:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6000:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6003:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6003:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5993:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5993:6:12"
																			},
																			"nativeSrc": "5993:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5993:12:12"
																		},
																		"nativeSrc": "5993:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5993:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5957:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5957:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5982:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5982:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5964:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5964:17:12"
																				},
																				"nativeSrc": "5964:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5964:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5954:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5954:2:12"
																		},
																		"nativeSrc": "5954:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5954:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5947:6:12"
																},
																"nativeSrc": "5947:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5947:43:12"
															},
															"nativeSrc": "5944:63:12",
															"nodeType": "YulIf",
															"src": "5944:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5891:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5927:5:12",
														"nodeType": "YulTypedName",
														"src": "5927:5:12",
														"type": ""
													}
												],
												"src": "5891:122:12"
											},
											{
												"body": {
													"nativeSrc": "6071:87:12",
													"nodeType": "YulBlock",
													"src": "6071:87:12",
													"statements": [
														{
															"nativeSrc": "6081:29:12",
															"nodeType": "YulAssignment",
															"src": "6081:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6103:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6103:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6090:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6090:12:12"
																},
																"nativeSrc": "6090:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6090:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6081:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6081:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6146:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6146:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "6119:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "6119:26:12"
																},
																"nativeSrc": "6119:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6119:33:12"
															},
															"nativeSrc": "6119:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "6119:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "6019:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6049:6:12",
														"nodeType": "YulTypedName",
														"src": "6049:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6057:3:12",
														"nodeType": "YulTypedName",
														"src": "6057:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6065:5:12",
														"nodeType": "YulTypedName",
														"src": "6065:5:12",
														"type": ""
													}
												],
												"src": "6019:139:12"
											},
											{
												"body": {
													"nativeSrc": "6230:263:12",
													"nodeType": "YulBlock",
													"src": "6230:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6276:83:12",
																"nodeType": "YulBlock",
																"src": "6276:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6278:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6278:77:12"
																			},
																			"nativeSrc": "6278:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6278:79:12"
																		},
																		"nativeSrc": "6278:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6278:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6251:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6251:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6260:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6260:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6247:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6247:3:12"
																		},
																		"nativeSrc": "6247:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6247:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6272:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6243:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6243:3:12"
																},
																"nativeSrc": "6243:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6243:32:12"
															},
															"nativeSrc": "6240:119:12",
															"nodeType": "YulIf",
															"src": "6240:119:12"
														},
														{
															"nativeSrc": "6369:117:12",
															"nodeType": "YulBlock",
															"src": "6369:117:12",
															"statements": [
																{
																	"nativeSrc": "6384:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6384:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6398:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6398:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6388:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6388:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6413:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6413:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6448:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6448:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6459:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6459:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6444:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6444:3:12"
																				},
																				"nativeSrc": "6444:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6444:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6468:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6468:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6423:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6423:20:12"
																		},
																		"nativeSrc": "6423:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6423:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6413:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6413:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "6164:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6200:9:12",
														"nodeType": "YulTypedName",
														"src": "6200:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6211:7:12",
														"nodeType": "YulTypedName",
														"src": "6211:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6223:6:12",
														"nodeType": "YulTypedName",
														"src": "6223:6:12",
														"type": ""
													}
												],
												"src": "6164:329:12"
											},
											{
												"body": {
													"nativeSrc": "6564:53:12",
													"nodeType": "YulBlock",
													"src": "6564:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6581:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6581:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6604:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6604:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6586:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6586:17:12"
																		},
																		"nativeSrc": "6586:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6586:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6574:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:12"
																},
																"nativeSrc": "6574:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6574:37:12"
															},
															"nativeSrc": "6574:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6574:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6499:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6552:5:12",
														"nodeType": "YulTypedName",
														"src": "6552:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6559:3:12",
														"nodeType": "YulTypedName",
														"src": "6559:3:12",
														"type": ""
													}
												],
												"src": "6499:118:12"
											},
											{
												"body": {
													"nativeSrc": "6721:124:12",
													"nodeType": "YulBlock",
													"src": "6721:124:12",
													"statements": [
														{
															"nativeSrc": "6731:26:12",
															"nodeType": "YulAssignment",
															"src": "6731:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6743:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6743:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6754:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6754:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6739:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:12"
																},
																"nativeSrc": "6739:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6739:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6731:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6731:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6811:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6811:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6824:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6824:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6835:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6835:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6820:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:12"
																		},
																		"nativeSrc": "6820:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6820:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6767:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6767:43:12"
																},
																"nativeSrc": "6767:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6767:71:12"
															},
															"nativeSrc": "6767:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6767:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6623:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6693:9:12",
														"nodeType": "YulTypedName",
														"src": "6693:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6705:6:12",
														"nodeType": "YulTypedName",
														"src": "6705:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6716:4:12",
														"nodeType": "YulTypedName",
														"src": "6716:4:12",
														"type": ""
													}
												],
												"src": "6623:222:12"
											},
											{
												"body": {
													"nativeSrc": "6934:391:12",
													"nodeType": "YulBlock",
													"src": "6934:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6980:83:12",
																"nodeType": "YulBlock",
																"src": "6980:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6982:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6982:77:12"
																			},
																			"nativeSrc": "6982:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6982:79:12"
																		},
																		"nativeSrc": "6982:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6982:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6955:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6955:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6964:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6964:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6951:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6951:3:12"
																		},
																		"nativeSrc": "6951:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6951:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6976:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6976:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6947:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6947:3:12"
																},
																"nativeSrc": "6947:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6947:32:12"
															},
															"nativeSrc": "6944:119:12",
															"nodeType": "YulIf",
															"src": "6944:119:12"
														},
														{
															"nativeSrc": "7073:117:12",
															"nodeType": "YulBlock",
															"src": "7073:117:12",
															"statements": [
																{
																	"nativeSrc": "7088:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7088:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7102:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7102:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7092:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7092:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7117:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7117:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7152:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7152:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7163:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7163:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7148:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7148:3:12"
																				},
																				"nativeSrc": "7148:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7148:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7172:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7172:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "7127:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7127:20:12"
																		},
																		"nativeSrc": "7127:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7127:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7117:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7117:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7200:118:12",
															"nodeType": "YulBlock",
															"src": "7200:118:12",
															"statements": [
																{
																	"nativeSrc": "7215:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7215:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7229:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7229:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7219:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7219:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7245:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7245:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7280:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7280:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7291:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7291:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7276:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7276:3:12"
																				},
																				"nativeSrc": "7276:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7276:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7300:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7255:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7255:20:12"
																		},
																		"nativeSrc": "7255:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7255:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7245:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7245:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6851:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6896:9:12",
														"nodeType": "YulTypedName",
														"src": "6896:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6907:7:12",
														"nodeType": "YulTypedName",
														"src": "6907:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6919:6:12",
														"nodeType": "YulTypedName",
														"src": "6919:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6927:6:12",
														"nodeType": "YulTypedName",
														"src": "6927:6:12",
														"type": ""
													}
												],
												"src": "6851:474:12"
											},
											{
												"body": {
													"nativeSrc": "7374:43:12",
													"nodeType": "YulBlock",
													"src": "7374:43:12",
													"statements": [
														{
															"nativeSrc": "7384:27:12",
															"nodeType": "YulAssignment",
															"src": "7384:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7399:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7399:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7406:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7406:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7395:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7395:3:12"
																},
																"nativeSrc": "7395:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7395:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7384:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7384:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7331:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7356:5:12",
														"nodeType": "YulTypedName",
														"src": "7356:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7366:7:12",
														"nodeType": "YulTypedName",
														"src": "7366:7:12",
														"type": ""
													}
												],
												"src": "7331:86:12"
											},
											{
												"body": {
													"nativeSrc": "7484:51:12",
													"nodeType": "YulBlock",
													"src": "7484:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7501:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7501:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7522:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7522:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7506:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "7506:15:12"
																		},
																		"nativeSrc": "7506:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7506:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7494:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7494:6:12"
																},
																"nativeSrc": "7494:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7494:35:12"
															},
															"nativeSrc": "7494:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "7494:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7423:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7472:5:12",
														"nodeType": "YulTypedName",
														"src": "7472:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7479:3:12",
														"nodeType": "YulTypedName",
														"src": "7479:3:12",
														"type": ""
													}
												],
												"src": "7423:112:12"
											},
											{
												"body": {
													"nativeSrc": "7635:120:12",
													"nodeType": "YulBlock",
													"src": "7635:120:12",
													"statements": [
														{
															"nativeSrc": "7645:26:12",
															"nodeType": "YulAssignment",
															"src": "7645:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7657:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7657:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7668:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7668:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7653:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7653:3:12"
																},
																"nativeSrc": "7653:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7653:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7645:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7645:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7721:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7721:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7734:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7734:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7745:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7745:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7730:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7730:3:12"
																		},
																		"nativeSrc": "7730:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7730:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7681:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "7681:39:12"
																},
																"nativeSrc": "7681:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7681:67:12"
															},
															"nativeSrc": "7681:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7681:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7541:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7607:9:12",
														"nodeType": "YulTypedName",
														"src": "7607:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7619:6:12",
														"nodeType": "YulTypedName",
														"src": "7619:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7630:4:12",
														"nodeType": "YulTypedName",
														"src": "7630:4:12",
														"type": ""
													}
												],
												"src": "7541:214:12"
											},
											{
												"body": {
													"nativeSrc": "7827:263:12",
													"nodeType": "YulBlock",
													"src": "7827:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7873:83:12",
																"nodeType": "YulBlock",
																"src": "7873:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7875:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7875:77:12"
																			},
																			"nativeSrc": "7875:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7875:79:12"
																		},
																		"nativeSrc": "7875:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7875:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7848:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7848:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7857:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7857:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7844:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7844:3:12"
																		},
																		"nativeSrc": "7844:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7844:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7869:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7869:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7840:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7840:3:12"
																},
																"nativeSrc": "7840:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7840:32:12"
															},
															"nativeSrc": "7837:119:12",
															"nodeType": "YulIf",
															"src": "7837:119:12"
														},
														{
															"nativeSrc": "7966:117:12",
															"nodeType": "YulBlock",
															"src": "7966:117:12",
															"statements": [
																{
																	"nativeSrc": "7981:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7981:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7995:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7995:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7985:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7985:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8010:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8010:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8045:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8045:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8056:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8056:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8041:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8041:3:12"
																				},
																				"nativeSrc": "8041:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8041:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8065:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8065:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8020:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8020:20:12"
																		},
																		"nativeSrc": "8020:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8020:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8010:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8010:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7761:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7797:9:12",
														"nodeType": "YulTypedName",
														"src": "7797:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7808:7:12",
														"nodeType": "YulTypedName",
														"src": "7808:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7820:6:12",
														"nodeType": "YulTypedName",
														"src": "7820:6:12",
														"type": ""
													}
												],
												"src": "7761:329:12"
											},
											{
												"body": {
													"nativeSrc": "8162:263:12",
													"nodeType": "YulBlock",
													"src": "8162:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8208:83:12",
																"nodeType": "YulBlock",
																"src": "8208:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8210:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8210:77:12"
																			},
																			"nativeSrc": "8210:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8210:79:12"
																		},
																		"nativeSrc": "8210:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8210:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8183:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8183:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8192:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8192:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8179:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8179:3:12"
																		},
																		"nativeSrc": "8179:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8179:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8204:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8204:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8175:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8175:3:12"
																},
																"nativeSrc": "8175:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8175:32:12"
															},
															"nativeSrc": "8172:119:12",
															"nodeType": "YulIf",
															"src": "8172:119:12"
														},
														{
															"nativeSrc": "8301:117:12",
															"nodeType": "YulBlock",
															"src": "8301:117:12",
															"statements": [
																{
																	"nativeSrc": "8316:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8316:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8330:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8330:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8320:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8320:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8345:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8345:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8380:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8380:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8391:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8391:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8376:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8376:3:12"
																				},
																				"nativeSrc": "8376:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8376:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8400:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8400:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8355:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8355:20:12"
																		},
																		"nativeSrc": "8355:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8355:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8345:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8345:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8096:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8132:9:12",
														"nodeType": "YulTypedName",
														"src": "8132:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8143:7:12",
														"nodeType": "YulTypedName",
														"src": "8143:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8155:6:12",
														"nodeType": "YulTypedName",
														"src": "8155:6:12",
														"type": ""
													}
												],
												"src": "8096:329:12"
											},
											{
												"body": {
													"nativeSrc": "8514:391:12",
													"nodeType": "YulBlock",
													"src": "8514:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8560:83:12",
																"nodeType": "YulBlock",
																"src": "8560:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8562:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8562:77:12"
																			},
																			"nativeSrc": "8562:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8562:79:12"
																		},
																		"nativeSrc": "8562:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8562:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8535:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8535:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8544:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8544:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8531:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:12"
																		},
																		"nativeSrc": "8531:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8531:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8556:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8556:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8527:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:12"
																},
																"nativeSrc": "8527:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8527:32:12"
															},
															"nativeSrc": "8524:119:12",
															"nodeType": "YulIf",
															"src": "8524:119:12"
														},
														{
															"nativeSrc": "8653:117:12",
															"nodeType": "YulBlock",
															"src": "8653:117:12",
															"statements": [
																{
																	"nativeSrc": "8668:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8668:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8682:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8682:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8672:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8672:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8697:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8697:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8732:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8732:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8743:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8743:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8728:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8728:3:12"
																				},
																				"nativeSrc": "8728:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8728:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8752:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8752:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8707:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8707:20:12"
																		},
																		"nativeSrc": "8707:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8707:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8697:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8697:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8780:118:12",
															"nodeType": "YulBlock",
															"src": "8780:118:12",
															"statements": [
																{
																	"nativeSrc": "8795:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8795:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8809:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8809:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8799:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8799:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8825:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8825:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8860:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8860:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8871:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8871:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8856:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:12"
																				},
																				"nativeSrc": "8856:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8856:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8880:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8880:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8835:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8835:20:12"
																		},
																		"nativeSrc": "8835:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8835:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8825:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8825:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8431:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8476:9:12",
														"nodeType": "YulTypedName",
														"src": "8476:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8487:7:12",
														"nodeType": "YulTypedName",
														"src": "8487:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8499:6:12",
														"nodeType": "YulTypedName",
														"src": "8499:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8507:6:12",
														"nodeType": "YulTypedName",
														"src": "8507:6:12",
														"type": ""
													}
												],
												"src": "8431:474:12"
											},
											{
												"body": {
													"nativeSrc": "8939:152:12",
													"nodeType": "YulBlock",
													"src": "8939:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8956:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8956:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8959:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8959:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8949:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8949:6:12"
																},
																"nativeSrc": "8949:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8949:88:12"
															},
															"nativeSrc": "8949:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8949:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9053:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9053:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9056:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9056:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9046:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9046:6:12"
																},
																"nativeSrc": "9046:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9046:15:12"
															},
															"nativeSrc": "9046:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9046:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9077:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9077:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9080:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9080:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9070:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9070:6:12"
																},
																"nativeSrc": "9070:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9070:15:12"
															},
															"nativeSrc": "9070:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9070:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8911:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8911:180:12"
											},
											{
												"body": {
													"nativeSrc": "9148:269:12",
													"nodeType": "YulBlock",
													"src": "9148:269:12",
													"statements": [
														{
															"nativeSrc": "9158:22:12",
															"nodeType": "YulAssignment",
															"src": "9158:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9172:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9172:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9178:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9178:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9168:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9168:3:12"
																},
																"nativeSrc": "9168:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9168:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9158:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9158:6:12"
																}
															]
														},
														{
															"nativeSrc": "9189:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9189:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9219:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9219:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9225:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9225:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9215:3:12"
																},
																"nativeSrc": "9215:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9215:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9193:18:12",
																	"nodeType": "YulTypedName",
																	"src": "9193:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9266:51:12",
																"nodeType": "YulBlock",
																"src": "9266:51:12",
																"statements": [
																	{
																		"nativeSrc": "9280:27:12",
																		"nodeType": "YulAssignment",
																		"src": "9280:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9294:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9294:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9302:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9302:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9290:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9290:3:12"
																			},
																			"nativeSrc": "9290:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9290:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9280:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9280:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9246:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "9246:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9239:6:12"
																},
																"nativeSrc": "9239:26:12",
																"nodeType": "YulFunctionCall",
																"src": "9239:26:12"
															},
															"nativeSrc": "9236:81:12",
															"nodeType": "YulIf",
															"src": "9236:81:12"
														},
														{
															"body": {
																"nativeSrc": "9369:42:12",
																"nodeType": "YulBlock",
																"src": "9369:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9383:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9383:16:12"
																			},
																			"nativeSrc": "9383:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9383:18:12"
																		},
																		"nativeSrc": "9383:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9383:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9333:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "9333:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9356:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9356:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9364:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9364:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9353:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9353:2:12"
																		},
																		"nativeSrc": "9353:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9353:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9330:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9330:2:12"
																},
																"nativeSrc": "9330:38:12",
																"nodeType": "YulFunctionCall",
																"src": "9330:38:12"
															},
															"nativeSrc": "9327:84:12",
															"nodeType": "YulIf",
															"src": "9327:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9097:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9132:4:12",
														"nodeType": "YulTypedName",
														"src": "9132:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9141:6:12",
														"nodeType": "YulTypedName",
														"src": "9141:6:12",
														"type": ""
													}
												],
												"src": "9097:320:12"
											},
											{
												"body": {
													"nativeSrc": "9451:152:12",
													"nodeType": "YulBlock",
													"src": "9451:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9468:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9468:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9471:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9471:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9461:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9461:6:12"
																},
																"nativeSrc": "9461:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9461:88:12"
															},
															"nativeSrc": "9461:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9461:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9565:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9568:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9568:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9558:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:12"
																},
																"nativeSrc": "9558:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9558:15:12"
															},
															"nativeSrc": "9558:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9558:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9589:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9589:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9592:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9582:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9582:6:12"
																},
																"nativeSrc": "9582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9582:15:12"
															},
															"nativeSrc": "9582:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9582:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9423:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9423:180:12"
											},
											{
												"body": {
													"nativeSrc": "9653:147:12",
													"nodeType": "YulBlock",
													"src": "9653:147:12",
													"statements": [
														{
															"nativeSrc": "9663:25:12",
															"nodeType": "YulAssignment",
															"src": "9663:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9686:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9686:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9668:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9668:17:12"
																},
																"nativeSrc": "9668:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9668:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9663:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9663:1:12"
																}
															]
														},
														{
															"nativeSrc": "9697:25:12",
															"nodeType": "YulAssignment",
															"src": "9697:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9720:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9720:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9702:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9702:17:12"
																},
																"nativeSrc": "9702:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9702:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9697:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9697:1:12"
																}
															]
														},
														{
															"nativeSrc": "9731:16:12",
															"nodeType": "YulAssignment",
															"src": "9731:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9742:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9742:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9745:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9745:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9738:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9738:3:12"
																},
																"nativeSrc": "9738:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9738:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9731:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9731:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9771:22:12",
																"nodeType": "YulBlock",
																"src": "9771:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9773:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9773:16:12"
																			},
																			"nativeSrc": "9773:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9773:18:12"
																		},
																		"nativeSrc": "9773:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9773:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9763:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9763:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9766:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9760:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9760:2:12"
																},
																"nativeSrc": "9760:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9760:10:12"
															},
															"nativeSrc": "9757:36:12",
															"nodeType": "YulIf",
															"src": "9757:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9609:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9640:1:12",
														"nodeType": "YulTypedName",
														"src": "9640:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9643:1:12",
														"nodeType": "YulTypedName",
														"src": "9643:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9649:3:12",
														"nodeType": "YulTypedName",
														"src": "9649:3:12",
														"type": ""
													}
												],
												"src": "9609:191:12"
											},
											{
												"body": {
													"nativeSrc": "9912:72:12",
													"nodeType": "YulBlock",
													"src": "9912:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9934:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9934:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9942:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9942:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9930:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9930:3:12"
																		},
																		"nativeSrc": "9930:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9930:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a20726577617264206e6f74207265616479",
																		"kind": "string",
																		"nativeSrc": "9946:30:12",
																		"nodeType": "YulLiteral",
																		"src": "9946:30:12",
																		"type": "",
																		"value": "BasedToken: reward not ready"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9923:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9923:6:12"
																},
																"nativeSrc": "9923:54:12",
																"nodeType": "YulFunctionCall",
																"src": "9923:54:12"
															},
															"nativeSrc": "9923:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "9923:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5",
												"nativeSrc": "9806:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9904:6:12",
														"nodeType": "YulTypedName",
														"src": "9904:6:12",
														"type": ""
													}
												],
												"src": "9806:178:12"
											},
											{
												"body": {
													"nativeSrc": "10136:220:12",
													"nodeType": "YulBlock",
													"src": "10136:220:12",
													"statements": [
														{
															"nativeSrc": "10146:74:12",
															"nodeType": "YulAssignment",
															"src": "10146:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10212:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10212:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10217:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10217:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10153:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10153:58:12"
																},
																"nativeSrc": "10153:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10153:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10146:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10146:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10318:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10318:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5",
																	"nativeSrc": "10229:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10229:88:12"
																},
																"nativeSrc": "10229:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10229:93:12"
															},
															"nativeSrc": "10229:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10229:93:12"
														},
														{
															"nativeSrc": "10331:19:12",
															"nodeType": "YulAssignment",
															"src": "10331:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10342:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10342:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10347:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10347:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10338:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10338:3:12"
																},
																"nativeSrc": "10338:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10338:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10331:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10331:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9990:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10124:3:12",
														"nodeType": "YulTypedName",
														"src": "10124:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10132:3:12",
														"nodeType": "YulTypedName",
														"src": "10132:3:12",
														"type": ""
													}
												],
												"src": "9990:366:12"
											},
											{
												"body": {
													"nativeSrc": "10533:248:12",
													"nodeType": "YulBlock",
													"src": "10533:248:12",
													"statements": [
														{
															"nativeSrc": "10543:26:12",
															"nodeType": "YulAssignment",
															"src": "10543:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10555:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10555:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10566:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10566:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10551:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10551:3:12"
																},
																"nativeSrc": "10551:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10551:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10543:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10543:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10590:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10590:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10601:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10601:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10586:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10586:3:12"
																		},
																		"nativeSrc": "10586:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10586:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10609:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10609:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10615:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10615:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10605:3:12"
																		},
																		"nativeSrc": "10605:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10605:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10579:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10579:6:12"
																},
																"nativeSrc": "10579:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10579:47:12"
															},
															"nativeSrc": "10579:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10579:47:12"
														},
														{
															"nativeSrc": "10635:139:12",
															"nodeType": "YulAssignment",
															"src": "10635:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10769:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10769:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10643:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10643:124:12"
																},
																"nativeSrc": "10643:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10643:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10635:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10635:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10362:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10513:9:12",
														"nodeType": "YulTypedName",
														"src": "10513:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10528:4:12",
														"nodeType": "YulTypedName",
														"src": "10528:4:12",
														"type": ""
													}
												],
												"src": "10362:419:12"
											},
											{
												"body": {
													"nativeSrc": "10893:67:12",
													"nodeType": "YulBlock",
													"src": "10893:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10915:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10915:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10923:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10923:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10911:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10911:3:12"
																		},
																		"nativeSrc": "10911:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10911:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a20626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "10927:25:12",
																		"nodeType": "YulLiteral",
																		"src": "10927:25:12",
																		"type": "",
																		"value": "BasedToken: blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10904:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10904:6:12"
																},
																"nativeSrc": "10904:49:12",
																"nodeType": "YulFunctionCall",
																"src": "10904:49:12"
															},
															"nativeSrc": "10904:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "10904:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4",
												"nativeSrc": "10787:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10885:6:12",
														"nodeType": "YulTypedName",
														"src": "10885:6:12",
														"type": ""
													}
												],
												"src": "10787:173:12"
											},
											{
												"body": {
													"nativeSrc": "11112:220:12",
													"nodeType": "YulBlock",
													"src": "11112:220:12",
													"statements": [
														{
															"nativeSrc": "11122:74:12",
															"nodeType": "YulAssignment",
															"src": "11122:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11188:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11188:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11193:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11193:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11129:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11129:58:12"
																},
																"nativeSrc": "11129:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11129:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11122:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11122:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11294:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11294:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4",
																	"nativeSrc": "11205:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11205:88:12"
																},
																"nativeSrc": "11205:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11205:93:12"
															},
															"nativeSrc": "11205:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11205:93:12"
														},
														{
															"nativeSrc": "11307:19:12",
															"nodeType": "YulAssignment",
															"src": "11307:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11318:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11318:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11323:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11323:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11314:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11314:3:12"
																},
																"nativeSrc": "11314:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11314:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11307:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11307:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10966:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11100:3:12",
														"nodeType": "YulTypedName",
														"src": "11100:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11108:3:12",
														"nodeType": "YulTypedName",
														"src": "11108:3:12",
														"type": ""
													}
												],
												"src": "10966:366:12"
											},
											{
												"body": {
													"nativeSrc": "11509:248:12",
													"nodeType": "YulBlock",
													"src": "11509:248:12",
													"statements": [
														{
															"nativeSrc": "11519:26:12",
															"nodeType": "YulAssignment",
															"src": "11519:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11531:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11531:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11542:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11542:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11527:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11527:3:12"
																},
																"nativeSrc": "11527:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11527:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11519:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11519:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11566:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11566:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11577:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11577:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11562:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11562:3:12"
																		},
																		"nativeSrc": "11562:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11562:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11585:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11585:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11591:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11591:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11581:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11581:3:12"
																		},
																		"nativeSrc": "11581:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11581:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11555:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11555:6:12"
																},
																"nativeSrc": "11555:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11555:47:12"
															},
															"nativeSrc": "11555:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11555:47:12"
														},
														{
															"nativeSrc": "11611:139:12",
															"nodeType": "YulAssignment",
															"src": "11611:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11745:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11745:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11619:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11619:124:12"
																},
																"nativeSrc": "11619:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11619:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11611:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11611:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11338:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11489:9:12",
														"nodeType": "YulTypedName",
														"src": "11489:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11504:4:12",
														"nodeType": "YulTypedName",
														"src": "11504:4:12",
														"type": ""
													}
												],
												"src": "11338:419:12"
											},
											{
												"body": {
													"nativeSrc": "11828:53:12",
													"nodeType": "YulBlock",
													"src": "11828:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11845:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11845:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11868:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11868:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11850:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "11850:17:12"
																		},
																		"nativeSrc": "11850:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11850:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11838:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11838:6:12"
																},
																"nativeSrc": "11838:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11838:37:12"
															},
															"nativeSrc": "11838:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "11838:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11763:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11816:5:12",
														"nodeType": "YulTypedName",
														"src": "11816:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11823:3:12",
														"nodeType": "YulTypedName",
														"src": "11823:3:12",
														"type": ""
													}
												],
												"src": "11763:118:12"
											},
											{
												"body": {
													"nativeSrc": "12041:288:12",
													"nodeType": "YulBlock",
													"src": "12041:288:12",
													"statements": [
														{
															"nativeSrc": "12051:26:12",
															"nodeType": "YulAssignment",
															"src": "12051:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12063:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12063:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12074:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12074:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12059:3:12"
																},
																"nativeSrc": "12059:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12059:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12051:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12051:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12131:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12131:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12144:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12144:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12155:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12155:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12140:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12140:3:12"
																		},
																		"nativeSrc": "12140:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12140:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12087:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12087:43:12"
																},
																"nativeSrc": "12087:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12087:71:12"
															},
															"nativeSrc": "12087:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12087:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12212:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12212:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12225:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12225:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12236:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12236:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12221:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12221:3:12"
																		},
																		"nativeSrc": "12221:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12221:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12168:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12168:43:12"
																},
																"nativeSrc": "12168:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12168:72:12"
															},
															"nativeSrc": "12168:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12168:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12294:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12294:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12307:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12307:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12318:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12318:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12303:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12303:3:12"
																		},
																		"nativeSrc": "12303:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12303:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12250:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12250:43:12"
																},
																"nativeSrc": "12250:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12250:72:12"
															},
															"nativeSrc": "12250:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12250:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11887:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11997:9:12",
														"nodeType": "YulTypedName",
														"src": "11997:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12009:6:12",
														"nodeType": "YulTypedName",
														"src": "12009:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12017:6:12",
														"nodeType": "YulTypedName",
														"src": "12017:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12025:6:12",
														"nodeType": "YulTypedName",
														"src": "12025:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12036:4:12",
														"nodeType": "YulTypedName",
														"src": "12036:4:12",
														"type": ""
													}
												],
												"src": "11887:442:12"
											},
											{
												"body": {
													"nativeSrc": "12433:124:12",
													"nodeType": "YulBlock",
													"src": "12433:124:12",
													"statements": [
														{
															"nativeSrc": "12443:26:12",
															"nodeType": "YulAssignment",
															"src": "12443:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12455:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12455:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12466:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12466:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12451:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12451:3:12"
																},
																"nativeSrc": "12451:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12451:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12443:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12443:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12523:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12523:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12536:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12536:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12547:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12547:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12532:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12532:3:12"
																		},
																		"nativeSrc": "12532:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12532:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12479:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12479:43:12"
																},
																"nativeSrc": "12479:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12479:71:12"
															},
															"nativeSrc": "12479:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12479:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12335:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12405:9:12",
														"nodeType": "YulTypedName",
														"src": "12405:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12417:6:12",
														"nodeType": "YulTypedName",
														"src": "12417:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12428:4:12",
														"nodeType": "YulTypedName",
														"src": "12428:4:12",
														"type": ""
													}
												],
												"src": "12335:222:12"
											},
											{
												"body": {
													"nativeSrc": "12689:206:12",
													"nodeType": "YulBlock",
													"src": "12689:206:12",
													"statements": [
														{
															"nativeSrc": "12699:26:12",
															"nodeType": "YulAssignment",
															"src": "12699:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12711:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12711:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12722:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12722:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12707:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12707:3:12"
																},
																"nativeSrc": "12707:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12707:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12699:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12699:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12779:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12779:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12792:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12792:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12803:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12803:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12788:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:12"
																		},
																		"nativeSrc": "12788:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12788:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12735:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12735:43:12"
																},
																"nativeSrc": "12735:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12735:71:12"
															},
															"nativeSrc": "12735:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12735:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12860:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12860:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12873:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12873:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12884:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12884:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12869:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12869:3:12"
																		},
																		"nativeSrc": "12869:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12869:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12816:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12816:43:12"
																},
																"nativeSrc": "12816:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12816:72:12"
															},
															"nativeSrc": "12816:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12816:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "12563:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12653:9:12",
														"nodeType": "YulTypedName",
														"src": "12653:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12665:6:12",
														"nodeType": "YulTypedName",
														"src": "12665:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12673:6:12",
														"nodeType": "YulTypedName",
														"src": "12673:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12684:4:12",
														"nodeType": "YulTypedName",
														"src": "12684:4:12",
														"type": ""
													}
												],
												"src": "12563:332:12"
											},
											{
												"body": {
													"nativeSrc": "13007:62:12",
													"nodeType": "YulBlock",
													"src": "13007:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13029:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13029:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13037:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13037:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13025:3:12"
																		},
																		"nativeSrc": "13025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13025:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a20706175736564",
																		"kind": "string",
																		"nativeSrc": "13041:20:12",
																		"nodeType": "YulLiteral",
																		"src": "13041:20:12",
																		"type": "",
																		"value": "BasedToken: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13018:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13018:6:12"
																},
																"nativeSrc": "13018:44:12",
																"nodeType": "YulFunctionCall",
																"src": "13018:44:12"
															},
															"nativeSrc": "13018:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "13018:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870",
												"nativeSrc": "12901:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12999:6:12",
														"nodeType": "YulTypedName",
														"src": "12999:6:12",
														"type": ""
													}
												],
												"src": "12901:168:12"
											},
											{
												"body": {
													"nativeSrc": "13221:220:12",
													"nodeType": "YulBlock",
													"src": "13221:220:12",
													"statements": [
														{
															"nativeSrc": "13231:74:12",
															"nodeType": "YulAssignment",
															"src": "13231:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13297:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13297:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13302:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13302:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13238:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13238:58:12"
																},
																"nativeSrc": "13238:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13238:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13231:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13231:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13403:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13403:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870",
																	"nativeSrc": "13314:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13314:88:12"
																},
																"nativeSrc": "13314:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13314:93:12"
															},
															"nativeSrc": "13314:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13314:93:12"
														},
														{
															"nativeSrc": "13416:19:12",
															"nodeType": "YulAssignment",
															"src": "13416:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13427:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13427:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13432:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13432:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13423:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13423:3:12"
																},
																"nativeSrc": "13423:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13423:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13416:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13416:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13075:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13209:3:12",
														"nodeType": "YulTypedName",
														"src": "13209:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13217:3:12",
														"nodeType": "YulTypedName",
														"src": "13217:3:12",
														"type": ""
													}
												],
												"src": "13075:366:12"
											},
											{
												"body": {
													"nativeSrc": "13618:248:12",
													"nodeType": "YulBlock",
													"src": "13618:248:12",
													"statements": [
														{
															"nativeSrc": "13628:26:12",
															"nodeType": "YulAssignment",
															"src": "13628:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13640:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13640:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13651:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13651:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13636:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:12"
																},
																"nativeSrc": "13636:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13636:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13628:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13628:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13675:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13675:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13686:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13686:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13671:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13671:3:12"
																		},
																		"nativeSrc": "13671:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13671:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13694:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13694:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13700:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13700:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13690:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13690:3:12"
																		},
																		"nativeSrc": "13690:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13690:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13664:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13664:6:12"
																},
																"nativeSrc": "13664:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13664:47:12"
															},
															"nativeSrc": "13664:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13664:47:12"
														},
														{
															"nativeSrc": "13720:139:12",
															"nodeType": "YulAssignment",
															"src": "13720:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13854:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13854:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13728:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13728:124:12"
																},
																"nativeSrc": "13728:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13728:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13720:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13720:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13447:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13598:9:12",
														"nodeType": "YulTypedName",
														"src": "13598:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13613:4:12",
														"nodeType": "YulTypedName",
														"src": "13613:4:12",
														"type": ""
													}
												],
												"src": "13447:419:12"
											},
											{
												"body": {
													"nativeSrc": "13978:74:12",
													"nodeType": "YulBlock",
													"src": "13978:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14000:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14000:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14008:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14008:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13996:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13996:3:12"
																		},
																		"nativeSrc": "13996:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13996:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a2073656e64657220626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "14012:32:12",
																		"nodeType": "YulLiteral",
																		"src": "14012:32:12",
																		"type": "",
																		"value": "BasedToken: sender blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13989:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13989:6:12"
																},
																"nativeSrc": "13989:56:12",
																"nodeType": "YulFunctionCall",
																"src": "13989:56:12"
															},
															"nativeSrc": "13989:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "13989:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe",
												"nativeSrc": "13872:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13970:6:12",
														"nodeType": "YulTypedName",
														"src": "13970:6:12",
														"type": ""
													}
												],
												"src": "13872:180:12"
											},
											{
												"body": {
													"nativeSrc": "14204:220:12",
													"nodeType": "YulBlock",
													"src": "14204:220:12",
													"statements": [
														{
															"nativeSrc": "14214:74:12",
															"nodeType": "YulAssignment",
															"src": "14214:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14280:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14280:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14285:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14285:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14221:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14221:58:12"
																},
																"nativeSrc": "14221:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14221:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14214:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14214:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14386:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14386:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe",
																	"nativeSrc": "14297:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14297:88:12"
																},
																"nativeSrc": "14297:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14297:93:12"
															},
															"nativeSrc": "14297:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14297:93:12"
														},
														{
															"nativeSrc": "14399:19:12",
															"nodeType": "YulAssignment",
															"src": "14399:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14410:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14410:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14415:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14415:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14406:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14406:3:12"
																},
																"nativeSrc": "14406:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14406:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14399:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14058:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14192:3:12",
														"nodeType": "YulTypedName",
														"src": "14192:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14200:3:12",
														"nodeType": "YulTypedName",
														"src": "14200:3:12",
														"type": ""
													}
												],
												"src": "14058:366:12"
											},
											{
												"body": {
													"nativeSrc": "14601:248:12",
													"nodeType": "YulBlock",
													"src": "14601:248:12",
													"statements": [
														{
															"nativeSrc": "14611:26:12",
															"nodeType": "YulAssignment",
															"src": "14611:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14623:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14623:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14634:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14634:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14619:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14619:3:12"
																},
																"nativeSrc": "14619:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14619:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14611:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14611:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14658:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14658:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14669:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14669:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14654:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14654:3:12"
																		},
																		"nativeSrc": "14654:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14654:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14677:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14677:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14683:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14683:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14673:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14673:3:12"
																		},
																		"nativeSrc": "14673:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14673:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14647:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14647:6:12"
																},
																"nativeSrc": "14647:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14647:47:12"
															},
															"nativeSrc": "14647:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14647:47:12"
														},
														{
															"nativeSrc": "14703:139:12",
															"nodeType": "YulAssignment",
															"src": "14703:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14837:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14837:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14711:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14711:124:12"
																},
																"nativeSrc": "14711:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14711:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14703:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14703:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14430:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14581:9:12",
														"nodeType": "YulTypedName",
														"src": "14581:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14596:4:12",
														"nodeType": "YulTypedName",
														"src": "14596:4:12",
														"type": ""
													}
												],
												"src": "14430:419:12"
											},
											{
												"body": {
													"nativeSrc": "14961:114:12",
													"nodeType": "YulBlock",
													"src": "14961:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14983:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14983:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14991:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14991:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14979:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14979:3:12"
																		},
																		"nativeSrc": "14979:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14979:14:12"
																	},
																	{
																		"hexValue": "4261736564546f6b656e3a20726563697069656e7420626c61636b6c69737465",
																		"kind": "string",
																		"nativeSrc": "14995:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14995:34:12",
																		"type": "",
																		"value": "BasedToken: recipient blackliste"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14972:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14972:6:12"
																},
																"nativeSrc": "14972:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14972:58:12"
															},
															"nativeSrc": "14972:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14972:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15051:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15051:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15059:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15059:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15047:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15047:3:12"
																		},
																		"nativeSrc": "15047:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15047:15:12"
																	},
																	{
																		"hexValue": "64",
																		"kind": "string",
																		"nativeSrc": "15064:3:12",
																		"nodeType": "YulLiteral",
																		"src": "15064:3:12",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15040:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15040:6:12"
																},
																"nativeSrc": "15040:28:12",
																"nodeType": "YulFunctionCall",
																"src": "15040:28:12"
															},
															"nativeSrc": "15040:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "15040:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532",
												"nativeSrc": "14855:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14953:6:12",
														"nodeType": "YulTypedName",
														"src": "14953:6:12",
														"type": ""
													}
												],
												"src": "14855:220:12"
											},
											{
												"body": {
													"nativeSrc": "15227:220:12",
													"nodeType": "YulBlock",
													"src": "15227:220:12",
													"statements": [
														{
															"nativeSrc": "15237:74:12",
															"nodeType": "YulAssignment",
															"src": "15237:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15303:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15303:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15308:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15308:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15244:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15244:58:12"
																},
																"nativeSrc": "15244:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15244:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15237:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15237:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15409:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15409:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532",
																	"nativeSrc": "15320:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15320:88:12"
																},
																"nativeSrc": "15320:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15320:93:12"
															},
															"nativeSrc": "15320:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15320:93:12"
														},
														{
															"nativeSrc": "15422:19:12",
															"nodeType": "YulAssignment",
															"src": "15422:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15433:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15433:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15438:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15438:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15429:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15429:3:12"
																},
																"nativeSrc": "15429:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15429:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15422:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15422:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15081:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15215:3:12",
														"nodeType": "YulTypedName",
														"src": "15215:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15223:3:12",
														"nodeType": "YulTypedName",
														"src": "15223:3:12",
														"type": ""
													}
												],
												"src": "15081:366:12"
											},
											{
												"body": {
													"nativeSrc": "15624:248:12",
													"nodeType": "YulBlock",
													"src": "15624:248:12",
													"statements": [
														{
															"nativeSrc": "15634:26:12",
															"nodeType": "YulAssignment",
															"src": "15634:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15646:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15646:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15657:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15642:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15642:3:12"
																},
																"nativeSrc": "15642:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15642:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15634:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15634:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15681:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15681:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15692:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15692:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15677:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15677:3:12"
																		},
																		"nativeSrc": "15677:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15677:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15700:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15700:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15706:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15706:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15696:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15696:3:12"
																		},
																		"nativeSrc": "15696:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15696:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15670:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15670:6:12"
																},
																"nativeSrc": "15670:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15670:47:12"
															},
															"nativeSrc": "15670:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15670:47:12"
														},
														{
															"nativeSrc": "15726:139:12",
															"nodeType": "YulAssignment",
															"src": "15726:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15860:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15860:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15734:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15734:124:12"
																},
																"nativeSrc": "15734:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15734:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15726:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15453:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15604:9:12",
														"nodeType": "YulTypedName",
														"src": "15604:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15619:4:12",
														"nodeType": "YulTypedName",
														"src": "15619:4:12",
														"type": ""
													}
												],
												"src": "15453:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: reward not ready\")\n\n    }\n\n    function abi_encode_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: sender blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532(memPtr) {\n\n        mstore(add(memPtr, 0), \"BasedToken: recipient blackliste\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1381": [
									{
										"length": 32,
										"start": 3034
									},
									{
										"length": 32,
										"start": 3140
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101d8575f3560e01c80635c975abb11610102578063a9059cbb116100a0578063d547741f1161006f578063d547741f14610530578063dbac26e91461054c578063dd62ed3e1461057c578063e63ab1e9146105ac576101d8565b8063a9059cbb146104ba578063b88a802f146104ea578063cf849442146104f4578063d539139314610512576101d8565b80638456cb59116100dc5780638456cb591461044457806391d148541461044e57806395d89b411461047e578063a217fddf1461049c576101d8565b80635c975abb146103da57806370a08231146103f857806379cc679014610428576101d8565b80632f2ff15d1161017a5780633f4ba83a116101495780633f4ba83a1461036857806340c10f191461037257806342966c681461038e5780635c16e15e146103aa576101d8565b80632f2ff15d146102f4578063313ce5671461031057806336568abe1461032e57806337c909ec1461034a576101d8565b8063153b0d1e116101b6578063153b0d1e1461025a57806318160ddd1461027657806323b872dd14610294578063248a9ca3146102c4576101d8565b806301ffc9a7146101dc57806306fdde031461020c578063095ea7b31461022a575b5f5ffd5b6101f660048036038101906101f1919061199c565b6105ca565b60405161020391906119e1565b60405180910390f35b610214610643565b6040516102219190611a6a565b60405180910390f35b610244600480360381019061023f9190611b17565b6106d3565b60405161025191906119e1565b60405180910390f35b610274600480360381019061026f9190611b7f565b6106f5565b005b61027e61075a565b60405161028b9190611bcc565b60405180910390f35b6102ae60048036038101906102a99190611be5565b610763565b6040516102bb91906119e1565b60405180910390f35b6102de60048036038101906102d99190611c68565b610791565b6040516102eb9190611ca2565b60405180910390f35b61030e60048036038101906103099190611cbb565b6107ae565b005b6103186107d0565b6040516103259190611d14565b60405180910390f35b61034860048036038101906103439190611cbb565b6107d8565b005b610352610853565b60405161035f9190611bcc565b60405180910390f35b61037061085a565b005b61038c60048036038101906103879190611b17565b61088f565b005b6103a860048036038101906103a39190611d2d565b6108c8565b005b6103c460048036038101906103bf9190611d58565b6108dc565b6040516103d19190611bcc565b60405180910390f35b6103e26108f1565b6040516103ef91906119e1565b60405180910390f35b610412600480360381019061040d9190611d58565b610906565b60405161041f9190611bcc565b60405180910390f35b610442600480360381019061043d9190611b17565b61094b565b005b61044c61096b565b005b61046860048036038101906104639190611cbb565b6109a0565b60405161047591906119e1565b60405180910390f35b610486610a04565b6040516104939190611a6a565b60405180910390f35b6104a4610a94565b6040516104b19190611ca2565b60405180910390f35b6104d460048036038101906104cf9190611b17565b610a9a565b6040516104e191906119e1565b60405180910390f35b6104f2610abc565b005b6104fc610c42565b6040516105099190611bcc565b60405180910390f35b61051a610c66565b6040516105279190611ca2565b60405180910390f35b61054a60048036038101906105459190611cbb565b610c8a565b005b61056660048036038101906105619190611d58565b610cac565b60405161057391906119e1565b60405180910390f35b61059660048036038101906105919190611d83565b610cc9565b6040516105a39190611bcc565b60405180910390f35b6105b4610d4b565b6040516105c19190611ca2565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063c575061063b82610d6f565b5b9050919050565b60606003805461065290611dee565b80601f016020809104026020016040519081016040528092919081815260200182805461067e90611dee565b80156106c95780601f106106a0576101008083540402835291602001916106c9565b820191905f5260205f20905b8154815290600101906020018083116106ac57829003601f168201915b5050505050905090565b5f5f6106dd610dd8565b90506106ea818585610ddf565b600191505092915050565b5f5f1b61070181610df1565b8160075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b5f600254905090565b5f5f61076d610dd8565b905061077a858285610e05565b610785858585610e98565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6107b782610791565b6107c081610df1565b6107ca8383610f88565b50505050565b5f6012905090565b6107e0610dd8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610844576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61084e8282611072565b505050565b6201518081565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61088481610df1565b61088c61115c565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66108b981610df1565b6108c383836111bd565b505050565b6108d96108d3610dd8565b8261123c565b50565b6008602052805f5260405f205f915090505481565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61095d82610957610dd8565b83610e05565b610967828261123c565b5050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61099581610df1565b61099d6112bb565b50565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610a1390611dee565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3f90611dee565b8015610a8a5780601f10610a6157610100808354040283529160200191610a8a565b820191905f5260205f20905b815481529060010190602001808311610a6d57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f610aa4610dd8565b9050610ab1818585610e98565b600191505092915050565b6201518060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b089190611e4b565b421015610b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4190611ec8565b60405180910390fd5b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f30565b60405180910390fd5b610bfe337f00000000000000000000000000000000000000000000000000000000000000006111bd565b4260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c9382610791565b610c9c81610df1565b610ca68383611072565b50505050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610dec838383600161131d565b505050565b610e0281610dfd610dd8565b6114ec565b50565b5f610e108484610cc9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610e925781811015610e83578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e7a93929190611f5d565b60405180910390fd5b610e9184848484035f61131d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f08575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610eff9190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f78575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6f9190611f92565b60405180910390fd5b610f8383838361153d565b505050565b5f610f9383836109a0565b61106857600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611005610dd8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061106c565b5f90505b92915050565b5f61107d83836109a0565b15611152575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506110ef610dd8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611156565b5f90505b92915050565b6111646116a9565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111a6610dd8565b6040516111b39190611f92565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361122d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112249190611f92565b60405180910390fd5b6112385f838361153d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ac575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112a39190611f92565b60405180910390fd5b6112b7825f8361153d565b5050565b6112c36116e9565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611306610dd8565b6040516113139190611f92565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361138d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113849190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113fd575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113f49190611f92565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156114e6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516114dd9190611bcc565b60405180910390a35b50505050565b6114f682826109a0565b6115395780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611530929190611fab565b60405180910390fd5b5050565b6115456108f1565b15611585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157c9061201c565b60405180910390fd5b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561160f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160690612084565b60405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169090612112565b60405180910390fd5b6116a483838361172a565b505050565b6116b16108f1565b6116e7576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116f16108f1565b15611728576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361177a578060025f82825461176e9190611e4b565b92505081905550611848565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611803578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117fa93929190611f5d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361188f578060025f82825403925050819055506118d9565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119369190611bcc565b60405180910390a3505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61197b81611947565b8114611985575f5ffd5b50565b5f8135905061199681611972565b92915050565b5f602082840312156119b1576119b0611943565b5b5f6119be84828501611988565b91505092915050565b5f8115159050919050565b6119db816119c7565b82525050565b5f6020820190506119f45f8301846119d2565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a3c826119fa565b611a468185611a04565b9350611a56818560208601611a14565b611a5f81611a22565b840191505092915050565b5f6020820190508181035f830152611a828184611a32565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ab382611a8a565b9050919050565b611ac381611aa9565b8114611acd575f5ffd5b50565b5f81359050611ade81611aba565b92915050565b5f819050919050565b611af681611ae4565b8114611b00575f5ffd5b50565b5f81359050611b1181611aed565b92915050565b5f5f60408385031215611b2d57611b2c611943565b5b5f611b3a85828601611ad0565b9250506020611b4b85828601611b03565b9150509250929050565b611b5e816119c7565b8114611b68575f5ffd5b50565b5f81359050611b7981611b55565b92915050565b5f5f60408385031215611b9557611b94611943565b5b5f611ba285828601611ad0565b9250506020611bb385828601611b6b565b9150509250929050565b611bc681611ae4565b82525050565b5f602082019050611bdf5f830184611bbd565b92915050565b5f5f5f60608486031215611bfc57611bfb611943565b5b5f611c0986828701611ad0565b9350506020611c1a86828701611ad0565b9250506040611c2b86828701611b03565b9150509250925092565b5f819050919050565b611c4781611c35565b8114611c51575f5ffd5b50565b5f81359050611c6281611c3e565b92915050565b5f60208284031215611c7d57611c7c611943565b5b5f611c8a84828501611c54565b91505092915050565b611c9c81611c35565b82525050565b5f602082019050611cb55f830184611c93565b92915050565b5f5f60408385031215611cd157611cd0611943565b5b5f611cde85828601611c54565b9250506020611cef85828601611ad0565b9150509250929050565b5f60ff82169050919050565b611d0e81611cf9565b82525050565b5f602082019050611d275f830184611d05565b92915050565b5f60208284031215611d4257611d41611943565b5b5f611d4f84828501611b03565b91505092915050565b5f60208284031215611d6d57611d6c611943565b5b5f611d7a84828501611ad0565b91505092915050565b5f5f60408385031215611d9957611d98611943565b5b5f611da685828601611ad0565b9250506020611db785828601611ad0565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e0557607f821691505b602082108103611e1857611e17611dc1565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e5582611ae4565b9150611e6083611ae4565b9250828201905080821115611e7857611e77611e1e565b5b92915050565b7f4261736564546f6b656e3a20726577617264206e6f74207265616479000000005f82015250565b5f611eb2601c83611a04565b9150611ebd82611e7e565b602082019050919050565b5f6020820190508181035f830152611edf81611ea6565b9050919050565b7f4261736564546f6b656e3a20626c61636b6c69737465640000000000000000005f82015250565b5f611f1a601783611a04565b9150611f2582611ee6565b602082019050919050565b5f6020820190508181035f830152611f4781611f0e565b9050919050565b611f5781611aa9565b82525050565b5f606082019050611f705f830186611f4e565b611f7d6020830185611bbd565b611f8a6040830184611bbd565b949350505050565b5f602082019050611fa55f830184611f4e565b92915050565b5f604082019050611fbe5f830185611f4e565b611fcb6020830184611c93565b9392505050565b7f4261736564546f6b656e3a2070617573656400000000000000000000000000005f82015250565b5f612006601283611a04565b915061201182611fd2565b602082019050919050565b5f6020820190508181035f83015261203381611ffa565b9050919050565b7f4261736564546f6b656e3a2073656e64657220626c61636b6c697374656400005f82015250565b5f61206e601e83611a04565b91506120798261203a565b602082019050919050565b5f6020820190508181035f83015261209b81612062565b9050919050565b7f4261736564546f6b656e3a20726563697069656e7420626c61636b6c697374655f8201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6120fc602183611a04565b9150612107826120a2565b604082019050919050565b5f6020820190508181035f830152612129816120f0565b905091905056fea264697066735822122000a0558c635550c95a8c20d91c1df72c495862759aa84695ceae834f004f328564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5AC JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xCF849442 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x512 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x49C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x428 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x5C16E15E EQ PUSH2 0x3AA JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x37C909EC EQ PUSH2 0x34A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x153B0D1E GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1B7F JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1BE5 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44C PUSH2 0x96B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F2 PUSH2 0xABC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FC PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x566 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B4 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x63C JUMPI POP PUSH2 0x63B DUP3 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x652 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67E SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6DD PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EA DUP2 DUP6 DUP6 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0x701 DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x76D PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B7 DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH2 0x7C0 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x7CA DUP4 DUP4 PUSH2 0xF88 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0xDD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP3 DUP3 PUSH2 0x1072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x884 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x88C PUSH2 0x115C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x8B9 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x8C3 DUP4 DUP4 PUSH2 0x11BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0x8D3 PUSH2 0xDD8 JUMP JUMPDEST DUP3 PUSH2 0x123C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95D DUP3 PUSH2 0x957 PUSH2 0xDD8 JUMP JUMPDEST DUP4 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x967 DUP3 DUP3 PUSH2 0x123C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x995 DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x99D PUSH2 0x12BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA13 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3F SWAP1 PUSH2 0x1DEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA61 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAA4 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP PUSH2 0xAB1 DUP2 DUP6 DUP6 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB41 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE CALLER PUSH32 0x0 PUSH2 0x11BD JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC93 DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH2 0xC9C DUP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xCA6 DUP4 DUP4 PUSH2 0x1072 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x131D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE02 DUP2 PUSH2 0xDFD PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x14EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE10 DUP5 DUP5 PUSH2 0xCC9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xE92 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE83 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE91 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x131D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6F SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF83 DUP4 DUP4 DUP4 PUSH2 0x153D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP4 DUP4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1005 PUSH2 0xDD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x106C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x107D DUP4 DUP4 PUSH2 0x9A0 JUMP JUMPDEST ISZERO PUSH2 0x1152 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10EF PUSH2 0xDD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1156 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1164 PUSH2 0x16A9 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11A6 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1238 PUSH0 DUP4 DUP4 PUSH2 0x153D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12AC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B7 DUP3 PUSH0 DUP4 PUSH2 0x153D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12C3 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1306 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1313 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14E6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14DD SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x14F6 DUP3 DUP3 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x1539 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1530 SWAP3 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1545 PUSH2 0x8F1 JUMP JUMPDEST ISZERO PUSH2 0x1585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157C SWAP1 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1606 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1699 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1690 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A4 DUP4 DUP4 DUP4 PUSH2 0x172A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16B1 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x16E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x16F1 PUSH2 0x8F1 JUMP JUMPDEST ISZERO PUSH2 0x1728 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x176E SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1848 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1803 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D9 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1936 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197B DUP2 PUSH2 0x1947 JUMP JUMPDEST DUP2 EQ PUSH2 0x1985 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1996 DUP2 PUSH2 0x1972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19BE DUP5 DUP3 DUP6 ADD PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x19C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3C DUP3 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x1A46 DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A56 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0x1A5F DUP2 PUSH2 0x1A22 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A82 DUP2 DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB3 DUP3 PUSH2 0x1A8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC3 DUP2 PUSH2 0x1AA9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADE DUP2 PUSH2 0x1ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B00 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B11 DUP2 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3A DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4B DUP6 DUP3 DUP7 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5E DUP2 PUSH2 0x19C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B68 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B79 DUP2 PUSH2 0x1B55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BB3 DUP6 DUP3 DUP7 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC6 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDF PUSH0 DUP4 ADD DUP5 PUSH2 0x1BBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFB PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C09 DUP7 DUP3 DUP8 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C1A DUP7 DUP3 DUP8 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C2B DUP7 DUP3 DUP8 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C47 DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C51 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C62 DUP2 PUSH2 0x1C3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C8A DUP5 DUP3 DUP6 ADD PUSH2 0x1C54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C9C DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD1 JUMPI PUSH2 0x1CD0 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CDE DUP6 DUP3 DUP7 ADD PUSH2 0x1C54 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CEF DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0E DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D27 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D42 JUMPI PUSH2 0x1D41 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D4F DUP5 DUP3 DUP6 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6D JUMPI PUSH2 0x1D6C PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7A DUP5 DUP3 DUP6 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1943 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA6 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB7 DUP6 DUP3 DUP7 ADD PUSH2 0x1AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E05 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E18 JUMPI PUSH2 0x1E17 PUSH2 0x1DC1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E55 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E60 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E78 JUMPI PUSH2 0x1E77 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A20726577617264206E6F7420726561647900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB2 PUSH1 0x1C DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP3 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDF DUP2 PUSH2 0x1EA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A20626C61636B6C6973746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1A PUSH1 0x17 DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F25 DUP3 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F47 DUP2 PUSH2 0x1F0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 DUP2 PUSH2 0x1AA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F70 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1F7D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x1F8A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BBD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FBE PUSH0 DUP4 ADD DUP6 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1FCB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2006 PUSH1 0x12 DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x2011 DUP3 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2033 DUP2 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A2073656E64657220626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x206E PUSH1 0x1E DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x2079 DUP3 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x209B DUP2 PUSH2 0x2062 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261736564546F6B656E3A20726563697069656E7420626C61636B6C69737465 PUSH0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20FC PUSH1 0x21 DUP4 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH2 0x2107 DUP3 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2129 DUP2 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP LOG0 SSTORE DUP13 PUSH4 0x5550C95A DUP13 KECCAK256 0xD9 SHR SAR 0xF7 0x2C BLOBHASH PC PUSH3 0x759AA8 CHAINID SWAP6 0xCE 0xAE DUP4 0x4F STOP 0x4F ORIGIN DUP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "302:1835:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1305:128:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2803:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;558:47:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1224:75;;;:::i;:::-;;1036:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;661:44:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:84:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1147:71:11;;;:::i;:::-;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1439:341:11;;;:::i;:::-;;514:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;612:43:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;445:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;1305:128:11:-;2241:4:0;1370:18:11;;2473:16:0;2484:4;2473:10;:16::i;:::-;1420:6:11::1;1400:11;:17;1412:4;1400:17;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1305:128:::0;;;:::o;2803:97:3:-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;558:47:11:-;599:6;558:47;:::o;1224:75::-;483:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1282:10:11::1;:8;:10::i;:::-;1224:75:::0;:::o;1036:105::-;415:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1117:17:11::1;1123:2;1127:6;1117:5;:17::i;:::-;1036:105:::0;;;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;661:44:11:-;;;;;;;;;;;;;;;;;:::o;1726:84:8:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;2933:116:3:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1147:71:11:-;483:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1203:8:11::1;:6;:8::i;:::-;1147:71:::0;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;3244:178:3:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;1439:341:11:-;599:6;1519:9;:21;1529:10;1519:21;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;1500:15;:57;;1479:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;1630:11;:23;1642:10;1630:23;;;;;;;;;;;;;;;;;;;;;;;;;1629:24;1621:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1692:32;1698:10;1710:13;1692:5;:32::i;:::-;1758:15;1734:9;:21;1744:10;1734:21;;;;;;;;;;;;;;;:39;;;;1439:341::o;514:38::-;;;:::o;377:62::-;415:24;377:62;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;612:43:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;3455:140:3:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;445:62:11:-;483:24;445:62;:::o;730:146:9:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8630:128:3:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;10319:476:3:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;2586:117:8:-;1597:16;:14;:16::i;:::-;2654:5:::1;2644:7;;:15;;;;;;;;;;;;;;;;;;2674:22;2683:12;:10;:12::i;:::-;2674:22;;;;;;:::i;:::-;;;;;;;;2586:117::o:0;7362:208:3:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;2339:115:8:-;1350:19;:17;:19::i;:::-;2408:4:::1;2398:7;;:14;;;;;;;;;;;;;;;;;;2427:20;2434:12;:10;:12::i;:::-;2427:20;;;;;;:::i;:::-;;;;;;;;2339:115::o:0;9605:432:3:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;1786:349:11:-;1912:8;:6;:8::i;:::-;1911:9;1903:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;1962:11;:17;1974:4;1962:17;;;;;;;;;;;;;;;;;;;;;;;;;1961:18;1953:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2033:11;:15;2045:2;2033:15;;;;;;;;;;;;;;;;;;;;;;;;;2032:16;2024:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2097:31;2111:4;2117:2;2121:6;2097:13;:31::i;:::-;1786:349;;;:::o;2078:126:8:-;2141:8;:6;:8::i;:::-;2136:62;;2172:15;;;;;;;;;;;;;;2136:62;2078:126::o;1878:128::-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;5912:1107:3:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:116::-;4166:21;4181:5;4166:21;:::i;:::-;4159:5;4156:32;4146:60;;4202:1;4199;4192:12;4146:60;4096:116;:::o;4218:133::-;4261:5;4299:6;4286:20;4277:29;;4315:30;4339:5;4315:30;:::i;:::-;4218:133;;;;:::o;4357:468::-;4422:6;4430;4479:2;4467:9;4458:7;4454:23;4450:32;4447:119;;;4485:79;;:::i;:::-;4447:119;4605:1;4630:53;4675:7;4666:6;4655:9;4651:22;4630:53;:::i;:::-;4620:63;;4576:117;4732:2;4758:50;4800:7;4791:6;4780:9;4776:22;4758:50;:::i;:::-;4748:60;;4703:115;4357:468;;;;;:::o;4831:118::-;4918:24;4936:5;4918:24;:::i;:::-;4913:3;4906:37;4831:118;;:::o;4955:222::-;5048:4;5086:2;5075:9;5071:18;5063:26;;5099:71;5167:1;5156:9;5152:17;5143:6;5099:71;:::i;:::-;4955:222;;;;:::o;5183:619::-;5260:6;5268;5276;5325:2;5313:9;5304:7;5300:23;5296:32;5293:119;;;5331:79;;:::i;:::-;5293:119;5451:1;5476:53;5521:7;5512:6;5501:9;5497:22;5476:53;:::i;:::-;5466:63;;5422:117;5578:2;5604:53;5649:7;5640:6;5629:9;5625:22;5604:53;:::i;:::-;5594:63;;5549:118;5706:2;5732:53;5777:7;5768:6;5757:9;5753:22;5732:53;:::i;:::-;5722:63;;5677:118;5183:619;;;;;:::o;5808:77::-;5845:7;5874:5;5863:16;;5808:77;;;:::o;5891:122::-;5964:24;5982:5;5964:24;:::i;:::-;5957:5;5954:35;5944:63;;6003:1;6000;5993:12;5944:63;5891:122;:::o;6019:139::-;6065:5;6103:6;6090:20;6081:29;;6119:33;6146:5;6119:33;:::i;:::-;6019:139;;;;:::o;6164:329::-;6223:6;6272:2;6260:9;6251:7;6247:23;6243:32;6240:119;;;6278:79;;:::i;:::-;6240:119;6398:1;6423:53;6468:7;6459:6;6448:9;6444:22;6423:53;:::i;:::-;6413:63;;6369:117;6164:329;;;;:::o;6499:118::-;6586:24;6604:5;6586:24;:::i;:::-;6581:3;6574:37;6499:118;;:::o;6623:222::-;6716:4;6754:2;6743:9;6739:18;6731:26;;6767:71;6835:1;6824:9;6820:17;6811:6;6767:71;:::i;:::-;6623:222;;;;:::o;6851:474::-;6919:6;6927;6976:2;6964:9;6955:7;6951:23;6947:32;6944:119;;;6982:79;;:::i;:::-;6944:119;7102:1;7127:53;7172:7;7163:6;7152:9;7148:22;7127:53;:::i;:::-;7117:63;;7073:117;7229:2;7255:53;7300:7;7291:6;7280:9;7276:22;7255:53;:::i;:::-;7245:63;;7200:118;6851:474;;;;;:::o;7331:86::-;7366:7;7406:4;7399:5;7395:16;7384:27;;7331:86;;;:::o;7423:112::-;7506:22;7522:5;7506:22;:::i;:::-;7501:3;7494:35;7423:112;;:::o;7541:214::-;7630:4;7668:2;7657:9;7653:18;7645:26;;7681:67;7745:1;7734:9;7730:17;7721:6;7681:67;:::i;:::-;7541:214;;;;:::o;7761:329::-;7820:6;7869:2;7857:9;7848:7;7844:23;7840:32;7837:119;;;7875:79;;:::i;:::-;7837:119;7995:1;8020:53;8065:7;8056:6;8045:9;8041:22;8020:53;:::i;:::-;8010:63;;7966:117;7761:329;;;;:::o;8096:::-;8155:6;8204:2;8192:9;8183:7;8179:23;8175:32;8172:119;;;8210:79;;:::i;:::-;8172:119;8330:1;8355:53;8400:7;8391:6;8380:9;8376:22;8355:53;:::i;:::-;8345:63;;8301:117;8096:329;;;;:::o;8431:474::-;8499:6;8507;8556:2;8544:9;8535:7;8531:23;8527:32;8524:119;;;8562:79;;:::i;:::-;8524:119;8682:1;8707:53;8752:7;8743:6;8732:9;8728:22;8707:53;:::i;:::-;8697:63;;8653:117;8809:2;8835:53;8880:7;8871:6;8860:9;8856:22;8835:53;:::i;:::-;8825:63;;8780:118;8431:474;;;;;:::o;8911:180::-;8959:77;8956:1;8949:88;9056:4;9053:1;9046:15;9080:4;9077:1;9070:15;9097:320;9141:6;9178:1;9172:4;9168:12;9158:22;;9225:1;9219:4;9215:12;9246:18;9236:81;;9302:4;9294:6;9290:17;9280:27;;9236:81;9364:2;9356:6;9353:14;9333:18;9330:38;9327:84;;9383:18;;:::i;:::-;9327:84;9148:269;9097:320;;;:::o;9423:180::-;9471:77;9468:1;9461:88;9568:4;9565:1;9558:15;9592:4;9589:1;9582:15;9609:191;9649:3;9668:20;9686:1;9668:20;:::i;:::-;9663:25;;9702:20;9720:1;9702:20;:::i;:::-;9697:25;;9745:1;9742;9738:9;9731:16;;9766:3;9763:1;9760:10;9757:36;;;9773:18;;:::i;:::-;9757:36;9609:191;;;;:::o;9806:178::-;9946:30;9942:1;9934:6;9930:14;9923:54;9806:178;:::o;9990:366::-;10132:3;10153:67;10217:2;10212:3;10153:67;:::i;:::-;10146:74;;10229:93;10318:3;10229:93;:::i;:::-;10347:2;10342:3;10338:12;10331:19;;9990:366;;;:::o;10362:419::-;10528:4;10566:2;10555:9;10551:18;10543:26;;10615:9;10609:4;10605:20;10601:1;10590:9;10586:17;10579:47;10643:131;10769:4;10643:131;:::i;:::-;10635:139;;10362:419;;;:::o;10787:173::-;10927:25;10923:1;10915:6;10911:14;10904:49;10787:173;:::o;10966:366::-;11108:3;11129:67;11193:2;11188:3;11129:67;:::i;:::-;11122:74;;11205:93;11294:3;11205:93;:::i;:::-;11323:2;11318:3;11314:12;11307:19;;10966:366;;;:::o;11338:419::-;11504:4;11542:2;11531:9;11527:18;11519:26;;11591:9;11585:4;11581:20;11577:1;11566:9;11562:17;11555:47;11619:131;11745:4;11619:131;:::i;:::-;11611:139;;11338:419;;;:::o;11763:118::-;11850:24;11868:5;11850:24;:::i;:::-;11845:3;11838:37;11763:118;;:::o;11887:442::-;12036:4;12074:2;12063:9;12059:18;12051:26;;12087:71;12155:1;12144:9;12140:17;12131:6;12087:71;:::i;:::-;12168:72;12236:2;12225:9;12221:18;12212:6;12168:72;:::i;:::-;12250;12318:2;12307:9;12303:18;12294:6;12250:72;:::i;:::-;11887:442;;;;;;:::o;12335:222::-;12428:4;12466:2;12455:9;12451:18;12443:26;;12479:71;12547:1;12536:9;12532:17;12523:6;12479:71;:::i;:::-;12335:222;;;;:::o;12563:332::-;12684:4;12722:2;12711:9;12707:18;12699:26;;12735:71;12803:1;12792:9;12788:17;12779:6;12735:71;:::i;:::-;12816:72;12884:2;12873:9;12869:18;12860:6;12816:72;:::i;:::-;12563:332;;;;;:::o;12901:168::-;13041:20;13037:1;13029:6;13025:14;13018:44;12901:168;:::o;13075:366::-;13217:3;13238:67;13302:2;13297:3;13238:67;:::i;:::-;13231:74;;13314:93;13403:3;13314:93;:::i;:::-;13432:2;13427:3;13423:12;13416:19;;13075:366;;;:::o;13447:419::-;13613:4;13651:2;13640:9;13636:18;13628:26;;13700:9;13694:4;13690:20;13686:1;13675:9;13671:17;13664:47;13728:131;13854:4;13728:131;:::i;:::-;13720:139;;13447:419;;;:::o;13872:180::-;14012:32;14008:1;14000:6;13996:14;13989:56;13872:180;:::o;14058:366::-;14200:3;14221:67;14285:2;14280:3;14221:67;:::i;:::-;14214:74;;14297:93;14386:3;14297:93;:::i;:::-;14415:2;14410:3;14406:12;14399:19;;14058:366;;;:::o;14430:419::-;14596:4;14634:2;14623:9;14619:18;14611:26;;14683:9;14677:4;14673:20;14669:1;14658:9;14654:17;14647:47;14711:131;14837:4;14711:131;:::i;:::-;14703:139;;14430:419;;;:::o;14855:220::-;14995:34;14991:1;14983:6;14979:14;14972:58;15064:3;15059:2;15051:6;15047:15;15040:28;14855:220;:::o;15081:366::-;15223:3;15244:67;15308:2;15303:3;15244:67;:::i;:::-;15237:74;;15320:93;15409:3;15320:93;:::i;:::-;15438:2;15433:3;15429:12;15422:19;;15081:366;;;:::o;15453:419::-;15619:4;15657:2;15646:9;15642:18;15634:26;;15706:9;15700:4;15696:20;15692:1;15681:9;15677:17;15670:47;15734:131;15860:4;15734:131;:::i;:::-;15726:139;;15453:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1710000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CLAIM_COOLDOWN()": "437",
								"DEFAULT_ADMIN_ROLE()": "440",
								"MINTER_ROLE()": "436",
								"PAUSER_ROLE()": "435",
								"REWARD_AMOUNT()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"blacklisted(address)": "2899",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"claimReward()": "infinite",
								"decimals()": "406",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3188",
								"lastClaim(address)": "2913",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2519",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 712,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4261736564546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4241534544000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 786,
									"end": 828,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2241,
									"end": 2245,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 815,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 815,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 817,
									"end": 827,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 786,
									"end": 796,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 786,
									"end": 796,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 786,
									"end": 796,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 786,
									"end": 828,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 786,
									"end": 828,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 786,
									"end": 828,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 786,
									"end": 828,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 786,
									"end": 828,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 786,
									"end": 828,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 838,
									"end": 873,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 415,
									"end": 439,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 862,
									"end": 872,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 838,
									"end": 848,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 838,
									"end": 848,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 838,
									"end": 848,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 838,
									"end": 873,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 838,
									"end": 873,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 838,
									"end": 873,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 838,
									"end": 873,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 838,
									"end": 873,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 838,
									"end": 873,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 883,
									"end": 918,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 483,
									"end": 507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 907,
									"end": 917,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 883,
									"end": 893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 883,
									"end": 893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 883,
									"end": 893,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 883,
									"end": 918,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 883,
									"end": 918,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 883,
									"end": 918,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 883,
									"end": 918,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 883,
									"end": 918,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 883,
									"end": 918,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 954,
									"end": 964,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 954,
									"end": 962,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 954,
									"end": 962,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 954,
									"end": 962,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 954,
									"end": 964,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 954,
									"end": 964,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 954,
									"end": 964,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 954,
									"end": 964,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 954,
									"end": 964,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 950,
									"end": 952,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 950,
									"end": 964,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 950,
									"end": 964,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 950,
									"end": 964,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 950,
									"end": 964,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 950,
									"end": 964,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 950,
									"end": 964,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 950,
									"end": 964,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 945,
									"end": 947,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 945,
									"end": 964,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 945,
									"end": 964,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 964,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 945,
									"end": 964,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 945,
									"end": 964,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 945,
									"end": 964,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 945,
									"end": 964,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 929,
									"end": 964,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 929,
									"end": 964,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 929,
									"end": 964,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 929,
									"end": 964,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 929,
									"end": 964,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 929,
									"end": 964,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 974,
									"end": 1023,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 980,
									"end": 990,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1012,
									"end": 1022,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1012,
									"end": 1020,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1012,
									"end": 1020,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1012,
									"end": 1020,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1012,
									"end": 1022,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1012,
									"end": 1022,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1012,
									"end": 1022,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1012,
									"end": 1022,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1012,
									"end": 1022,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1008,
									"end": 1010,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 1008,
									"end": 1022,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1008,
									"end": 1022,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1008,
									"end": 1022,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1008,
									"end": 1022,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1008,
									"end": 1022,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1008,
									"end": 1022,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1008,
									"end": 1022,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 992,
									"end": 1005,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 992,
									"end": 1022,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 992,
									"end": 1022,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 992,
									"end": 1022,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 992,
									"end": 1022,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 992,
									"end": 1022,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 992,
									"end": 1022,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 992,
									"end": 1022,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 974,
									"end": 979,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 974,
									"end": 979,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 974,
									"end": 979,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 974,
									"end": 1023,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 974,
									"end": 1023,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 974,
									"end": 1023,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 974,
									"end": 1023,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 974,
									"end": 1023,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1030,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1786,
									"end": 2135,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1786,
									"end": 2135,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1912,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1912,
									"end": 1918,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1912,
									"end": 1918,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1920,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1912,
									"end": 1920,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1920,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1912,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1911,
									"end": 1920,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1903,
									"end": 1943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1903,
									"end": 1943,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 1979,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1953,
									"end": 2014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1953,
									"end": 2014,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2044,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2045,
									"end": 2047,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2032,
									"end": 2048,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2024,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2024,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2128,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2119,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2121,
									"end": 2127,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2097,
									"end": 2110,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2110,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2128,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2128,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2128,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2128,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2097,
									"end": 2128,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1786,
									"end": 2135,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1786,
									"end": 2135,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1786,
									"end": 2135,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1786,
									"end": 2135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1726,
									"end": 1810,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1726,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1773,
									"end": 1777,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1789,
									"end": 1803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1789,
									"end": 1803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3249,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "180"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6243,
									"end": 6320,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6240,
									"end": 6241,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6321,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6340,
									"end": 6344,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 6337,
									"end": 6338,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 6330,
									"end": 6345,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6364,
									"end": 6368,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 6361,
									"end": 6362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6369,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6423,
									"end": 6431,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6470,
									"end": 6475,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6467,
									"end": 6468,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6463,
									"end": 6476,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6381,
									"end": 6483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6550,
									"end": 6555,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6557,
									"end": 6561,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6587,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6605,
									"end": 6610,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6640,
									"end": 6641,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6630,
									"end": 6638,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6627,
									"end": 6642,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6735,
									"end": 6739,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6730,
									"end": 6733,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6726,
									"end": 6740,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 6720,
									"end": 6724,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6717,
									"end": 6741,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 6744,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "tag",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "tag",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6794,
									"end": 6795,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6784,
									"end": 6792,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6780,
									"end": 6796,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7209,
									"end": 7213,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7202,
									"end": 7207,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7198,
									"end": 7214,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "tag",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7259,
									"end": 7263,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7253,
									"end": 7257,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7249,
									"end": 7264,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 7312,
									"end": 7320,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 7289,
									"end": 7321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "tag",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 7337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7397,
									"end": 7402,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7588,
									"end": 7596,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7609,
									"end": 7610,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "tag",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7641,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7654,
									"end": 7655,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "tag",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7723,
									"end": 7727,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7807,
									"end": 7808,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "tag",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7784,
									"end": 7785,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "tag",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7847,
									"end": 7850,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 7837,
									"end": 7845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7834,
									"end": 7851,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 7854,
									"end": 7872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "tag",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "tag",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7903,
									"end": 7911,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7896,
									"end": 7912,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7938,
									"end": 7941,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7931,
									"end": 7936,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7928,
									"end": 7942,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 7945,
									"end": 7963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "tag",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "tag",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "tag",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8104,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8100,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8089,
									"end": 8105,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8083,
									"end": 8086,
									"name": "PUSH",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 8077,
									"end": 8081,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8074,
									"end": 8087,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8070,
									"end": 8106,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8054,
									"name": "PUSH",
									"source": 12,
									"value": "4E"
								},
								{
									"begin": 8042,
									"end": 8050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8039,
									"end": 8055,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8034,
									"end": 8036,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 8028,
									"end": 8032,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8025,
									"end": 8037,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8021,
									"end": 8056,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8116,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8158,
									"end": 8166,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8148,
									"end": 8167,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8193,
									"end": 8196,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8186,
									"end": 8191,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8183,
									"end": 8197,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 8200,
									"end": 8218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "tag",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "tag",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "tag",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 8311,
									"end": 8314,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8301,
									"end": 8309,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8295,
									"end": 8299,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8292,
									"end": 8293,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 8273,
									"end": 8315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "tag",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8347,
									"end": 8351,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8342,
									"end": 8345,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8352,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 8331,
									"end": 8336,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8328,
									"end": 8353,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 8356,
									"end": 8374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "tag",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "tag",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8405,
									"end": 8409,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8394,
									"end": 8410,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 8416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8457,
									"end": 8464,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8497,
									"end": 8501,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 8490,
									"end": 8495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8486,
									"end": 8502,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8422,
									"end": 8508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8572,
									"end": 8577,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 8596,
									"end": 8619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "tag",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 8656,
									"end": 8664,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 8640,
									"end": 8665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "tag",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 8721,
									"end": 8787,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8711,
									"end": 8719,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8705,
									"end": 8709,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 8684,
									"end": 8788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "tag",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8841,
									"end": 8848,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "217"
								},
								{
									"begin": 8882,
									"end": 8883,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 8864,
									"end": 8884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "tag",
									"source": 12,
									"value": "217"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 8916,
									"end": 8917,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 8898,
									"end": 8918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "tag",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8950,
									"end": 8951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8946,
									"end": 8955,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 8993,
									"end": 9004,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 8975,
									"end": 9005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "tag",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9154,
									"end": 9155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9145,
									"end": 9152,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9141,
									"end": 9156,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 9138,
									"end": 9139,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9135,
									"end": 9157,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 9115,
									"end": 9116,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9108,
									"end": 9117,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9088,
									"end": 9171,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 9184,
									"end": 9202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "tag",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "tag",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8849,
									"end": 9211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9254,
									"end": 9261,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9336,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9287,
									"end": 9292,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9283,
									"end": 9337,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9217,
									"end": 9343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9386,
									"end": 9393,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 9433,
									"end": 9438,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 9415,
									"end": 9439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "tag",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9887,
									"end": 9898,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9921,
									"end": 9927,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9916,
									"end": 9919,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9909,
									"end": 9928,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9961,
									"end": 9965,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9956,
									"end": 9959,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9952,
									"end": 9966,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9978,
									"end": 10146,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 9978,
									"end": 10146,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10118,
									"end": 10138,
									"name": "PUSH",
									"source": 12,
									"value": "4261736564546F6B656E3A207061757365640000000000000000000000000000"
								},
								{
									"begin": 10114,
									"end": 10115,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10106,
									"end": 10112,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10102,
									"end": 10116,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10095,
									"end": 10139,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9978,
									"end": 10146,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9978,
									"end": 10146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10518,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 10152,
									"end": 10518,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10294,
									"end": 10297,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10315,
									"end": 10382,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "232"
								},
								{
									"begin": 10379,
									"end": 10381,
									"name": "PUSH",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 10374,
									"end": 10377,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10315,
									"end": 10382,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 10315,
									"end": 10382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10315,
									"end": 10382,
									"name": "tag",
									"source": 12,
									"value": "232"
								},
								{
									"begin": 10315,
									"end": 10382,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10308,
									"end": 10382,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10308,
									"end": 10382,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10391,
									"end": 10484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "233"
								},
								{
									"begin": 10480,
									"end": 10483,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10391,
									"end": 10484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 10391,
									"end": 10484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10391,
									"end": 10484,
									"name": "tag",
									"source": 12,
									"value": "233"
								},
								{
									"begin": 10391,
									"end": 10484,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10509,
									"end": 10511,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10504,
									"end": 10507,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10500,
									"end": 10512,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10493,
									"end": 10512,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10493,
									"end": 10512,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10518,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10518,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10518,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10518,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10524,
									"end": 10943,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 10524,
									"end": 10943,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10690,
									"end": 10694,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10728,
									"end": 10730,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10717,
									"end": 10726,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10713,
									"end": 10731,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10705,
									"end": 10731,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10705,
									"end": 10731,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10777,
									"end": 10786,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10771,
									"end": 10775,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10767,
									"end": 10787,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 10763,
									"end": 10764,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10752,
									"end": 10761,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10748,
									"end": 10765,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10741,
									"end": 10788,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10805,
									"end": 10936,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 10931,
									"end": 10935,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10805,
									"end": 10936,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 10805,
									"end": 10936,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10805,
									"end": 10936,
									"name": "tag",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 10805,
									"end": 10936,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10797,
									"end": 10936,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10797,
									"end": 10936,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10524,
									"end": 10943,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10524,
									"end": 10943,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10524,
									"end": 10943,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10524,
									"end": 10943,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10949,
									"end": 11129,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 10949,
									"end": 11129,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11089,
									"end": 11121,
									"name": "PUSH",
									"source": 12,
									"value": "4261736564546F6B656E3A2073656E64657220626C61636B6C69737465640000"
								},
								{
									"begin": 11085,
									"end": 11086,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11077,
									"end": 11083,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11073,
									"end": 11087,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11066,
									"end": 11122,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10949,
									"end": 11129,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10949,
									"end": 11129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11135,
									"end": 11501,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 11135,
									"end": 11501,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11277,
									"end": 11280,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11298,
									"end": 11365,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "238"
								},
								{
									"begin": 11362,
									"end": 11364,
									"name": "PUSH",
									"source": 12,
									"value": "1E"
								},
								{
									"begin": 11357,
									"end": 11360,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11298,
									"end": 11365,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 11298,
									"end": 11365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11298,
									"end": 11365,
									"name": "tag",
									"source": 12,
									"value": "238"
								},
								{
									"begin": 11298,
									"end": 11365,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11291,
									"end": 11365,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11291,
									"end": 11365,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11374,
									"end": 11467,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "239"
								},
								{
									"begin": 11463,
									"end": 11466,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11374,
									"end": 11467,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 11374,
									"end": 11467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11374,
									"end": 11467,
									"name": "tag",
									"source": 12,
									"value": "239"
								},
								{
									"begin": 11374,
									"end": 11467,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11492,
									"end": 11494,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11487,
									"end": 11490,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11483,
									"end": 11495,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11476,
									"end": 11495,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11476,
									"end": 11495,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11135,
									"end": 11501,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11135,
									"end": 11501,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11135,
									"end": 11501,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11135,
									"end": 11501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11507,
									"end": 11926,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 11507,
									"end": 11926,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11673,
									"end": 11677,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11711,
									"end": 11713,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11700,
									"end": 11709,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11696,
									"end": 11714,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11688,
									"end": 11714,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11688,
									"end": 11714,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11760,
									"end": 11769,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11754,
									"end": 11758,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11750,
									"end": 11770,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 11746,
									"end": 11747,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11735,
									"end": 11744,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11731,
									"end": 11748,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11724,
									"end": 11771,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11788,
									"end": 11919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 11914,
									"end": 11918,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11788,
									"end": 11919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 11788,
									"end": 11919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11788,
									"end": 11919,
									"name": "tag",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 11788,
									"end": 11919,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11780,
									"end": 11919,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11780,
									"end": 11919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11507,
									"end": 11926,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11507,
									"end": 11926,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11507,
									"end": 11926,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11507,
									"end": 11926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11932,
									"end": 12152,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 11932,
									"end": 12152,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12072,
									"end": 12106,
									"name": "PUSH",
									"source": 12,
									"value": "4261736564546F6B656E3A20726563697069656E7420626C61636B6C69737465"
								},
								{
									"begin": 12068,
									"end": 12069,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12060,
									"end": 12066,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12056,
									"end": 12070,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12049,
									"end": 12107,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 12141,
									"end": 12144,
									"name": "PUSH",
									"source": 12,
									"value": "6400000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12136,
									"end": 12138,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12128,
									"end": 12134,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12124,
									"end": 12139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12117,
									"end": 12145,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11932,
									"end": 12152,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11932,
									"end": 12152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12158,
									"end": 12524,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 12158,
									"end": 12524,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12300,
									"end": 12303,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12321,
									"end": 12388,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "244"
								},
								{
									"begin": 12385,
									"end": 12387,
									"name": "PUSH",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 12380,
									"end": 12383,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12321,
									"end": 12388,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 12321,
									"end": 12388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12321,
									"end": 12388,
									"name": "tag",
									"source": 12,
									"value": "244"
								},
								{
									"begin": 12321,
									"end": 12388,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12314,
									"end": 12388,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12314,
									"end": 12388,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12397,
									"end": 12490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 12486,
									"end": 12489,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12397,
									"end": 12490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 12397,
									"end": 12490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12397,
									"end": 12490,
									"name": "tag",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 12397,
									"end": 12490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12515,
									"end": 12517,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 12510,
									"end": 12513,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12506,
									"end": 12518,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12499,
									"end": 12518,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12499,
									"end": 12518,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12158,
									"end": 12524,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12158,
									"end": 12524,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12158,
									"end": 12524,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12158,
									"end": 12524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12530,
									"end": 12949,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 12530,
									"end": 12949,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12696,
									"end": 12700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12734,
									"end": 12736,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12723,
									"end": 12732,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12719,
									"end": 12737,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12711,
									"end": 12737,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12711,
									"end": 12737,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12783,
									"end": 12792,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12777,
									"end": 12781,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12773,
									"end": 12793,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 12769,
									"end": 12770,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12758,
									"end": 12767,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12754,
									"end": 12771,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12747,
									"end": 12794,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 12811,
									"end": 12942,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 12937,
									"end": 12941,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12811,
									"end": 12942,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 12811,
									"end": 12942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12811,
									"end": 12942,
									"name": "tag",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 12811,
									"end": 12942,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12803,
									"end": 12942,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12803,
									"end": 12942,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12530,
									"end": 12949,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12530,
									"end": 12949,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12530,
									"end": 12949,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12530,
									"end": 12949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12955,
									"end": 13146,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 12955,
									"end": 13146,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12995,
									"end": 12998,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 13014,
									"end": 13034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "249"
								},
								{
									"begin": 13032,
									"end": 13033,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13014,
									"end": 13034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 13014,
									"end": 13034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13014,
									"end": 13034,
									"name": "tag",
									"source": 12,
									"value": "249"
								},
								{
									"begin": 13014,
									"end": 13034,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13009,
									"end": 13034,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 13009,
									"end": 13034,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13048,
									"end": 13068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "250"
								},
								{
									"begin": 13066,
									"end": 13067,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13048,
									"end": 13068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 13048,
									"end": 13068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13048,
									"end": 13068,
									"name": "tag",
									"source": 12,
									"value": "250"
								},
								{
									"begin": 13048,
									"end": 13068,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13043,
									"end": 13068,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 13043,
									"end": 13068,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13091,
									"end": 13092,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13088,
									"end": 13089,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13084,
									"end": 13093,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13077,
									"end": 13093,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13077,
									"end": 13093,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13112,
									"end": 13115,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 13109,
									"end": 13110,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13106,
									"end": 13116,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 13103,
									"end": 13139,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 13103,
									"end": 13139,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "251"
								},
								{
									"begin": 13103,
									"end": 13139,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 13119,
									"end": 13137,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "252"
								},
								{
									"begin": 13119,
									"end": 13137,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 13119,
									"end": 13137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13119,
									"end": 13137,
									"name": "tag",
									"source": 12,
									"value": "252"
								},
								{
									"begin": 13119,
									"end": 13137,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13103,
									"end": 13139,
									"name": "tag",
									"source": 12,
									"value": "251"
								},
								{
									"begin": 13103,
									"end": 13139,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12955,
									"end": 13146,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 12955,
									"end": 13146,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12955,
									"end": 13146,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12955,
									"end": 13146,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12955,
									"end": 13146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13152,
									"end": 13270,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 13152,
									"end": 13270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13239,
									"end": 13263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "254"
								},
								{
									"begin": 13257,
									"end": 13262,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13239,
									"end": 13263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 13239,
									"end": 13263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13239,
									"end": 13263,
									"name": "tag",
									"source": 12,
									"value": "254"
								},
								{
									"begin": 13239,
									"end": 13263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13234,
									"end": 13237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13227,
									"end": 13264,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 13152,
									"end": 13270,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13152,
									"end": 13270,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13152,
									"end": 13270,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13425,
									"end": 13429,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 13463,
									"end": 13465,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 13452,
									"end": 13461,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13448,
									"end": 13466,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13440,
									"end": 13466,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13440,
									"end": 13466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13476,
									"end": 13547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "256"
								},
								{
									"begin": 13544,
									"end": 13545,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 13533,
									"end": 13542,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13529,
									"end": 13546,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13520,
									"end": 13526,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 13476,
									"end": 13547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 13476,
									"end": 13547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13476,
									"end": 13547,
									"name": "tag",
									"source": 12,
									"value": "256"
								},
								{
									"begin": 13476,
									"end": 13547,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13557,
									"end": 13629,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 13625,
									"end": 13627,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 13614,
									"end": 13623,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13610,
									"end": 13628,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13601,
									"end": 13607,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 13557,
									"end": 13629,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 13557,
									"end": 13629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13557,
									"end": 13629,
									"name": "tag",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 13557,
									"end": 13629,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13639,
									"end": 13711,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "258"
								},
								{
									"begin": 13707,
									"end": 13709,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 13696,
									"end": 13705,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13692,
									"end": 13710,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13683,
									"end": 13689,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 13639,
									"end": 13711,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 13639,
									"end": 13711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13639,
									"end": 13711,
									"name": "tag",
									"source": 12,
									"value": "258"
								},
								{
									"begin": 13639,
									"end": 13711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13276,
									"end": 13718,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13724,
									"end": 13946,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 13724,
									"end": 13946,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13817,
									"end": 13821,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 13855,
									"end": 13857,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 13844,
									"end": 13853,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13840,
									"end": 13858,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13832,
									"end": 13858,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13832,
									"end": 13858,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13868,
									"end": 13939,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "260"
								},
								{
									"begin": 13936,
									"end": 13937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 13925,
									"end": 13934,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13921,
									"end": 13938,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13912,
									"end": 13918,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 13868,
									"end": 13939,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 13868,
									"end": 13939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13868,
									"end": 13939,
									"name": "tag",
									"source": 12,
									"value": "260"
								},
								{
									"begin": 13868,
									"end": 13939,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13724,
									"end": 13946,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 13724,
									"end": 13946,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 13724,
									"end": 13946,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13724,
									"end": 13946,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13724,
									"end": 13946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1381"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 2137,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000a0558c635550c95a8c20d91c1df72c495862759aa84695ceae834f004f328564736f6c634300081e0033",
									".code": [
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "DBAC26E9"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "E63AB1E9"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "B88A802F"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "CF849442"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "79CC6790"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "42966C68"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "5C16E15E"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "37C909EC"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "153B0D1E"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "153B0D1E"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2137,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1305,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1305,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 558,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 558,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1224,
											"end": 1299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1036,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1036,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 705,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 661,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 661,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 661,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1147,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1439,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 514,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 514,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 377,
											"end": 439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 377,
											"end": 439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 655,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 612,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 612,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 612,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 445,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 445,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 445,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1388,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1416,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1426,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 558,
											"end": 605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 558,
											"end": 605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 1282,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 1282,
											"end": 1292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 1282,
											"end": 1292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 415,
											"end": 439,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1123,
											"end": 1125,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1133,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1117,
											"end": 1134,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1117,
											"end": 1134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 705,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 661,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 1203,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1203,
											"end": 1211,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 1203,
											"end": 1211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1439,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 1519,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1539,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1519,
											"end": 1557,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1519,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1557,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1519,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1515,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1557,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1500,
											"end": 1557,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 1479,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1479,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1641,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1652,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1653,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 1621,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1621,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 1698,
											"end": 1708,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1710,
											"end": 1723,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1381"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1692,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1758,
											"end": 1773,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1754,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1773,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1773,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1734,
											"end": 1773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1439,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1381"
										},
										{
											"begin": 514,
											"end": 552,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 514,
											"end": 552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 415,
											"end": 439,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 377,
											"end": 439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 655,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 612,
											"end": 655,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 445,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 445,
											"end": 507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 445,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1597,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2683,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2683,
											"end": 2695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2674,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2434,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2427,
											"end": 2447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 2135,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1786,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1912,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1912,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1912,
											"end": 1920,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 1912,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1920,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 1903,
											"end": 1943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 1903,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1973,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1978,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1962,
											"end": 1979,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 1953,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 1953,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2044,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2047,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2033,
											"end": 2048,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2032,
											"end": 2048,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 2024,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 2024,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2097,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 2111,
											"end": 2115,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2097,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 2097,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2097,
											"end": 2128,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 2097,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2141,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4212,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4096,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4181,
											"end": 4186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4166,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4204,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4306,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4277,
											"end": 4306,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4277,
											"end": 4306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 4339,
											"end": 4344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4315,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4218,
											"end": 4351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4825,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4357,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4467,
											"end": 4476,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4454,
											"end": 4477,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4450,
											"end": 4482,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4485,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 4485,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4485,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4485,
											"end": 4564,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 4485,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4447,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 4606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4675,
											"end": 4682,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4655,
											"end": 4664,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4651,
											"end": 4673,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 4630,
											"end": 4683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4683,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4630,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4758,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 4800,
											"end": 4807,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4780,
											"end": 4789,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 4798,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4758,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4808,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 4758,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4748,
											"end": 4808,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4748,
											"end": 4808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4703,
											"end": 4818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4825,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4825,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4825,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4949,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4831,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4918,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 4936,
											"end": 4941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4918,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4918,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4918,
											"end": 4942,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 4918,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5177,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4955,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5075,
											"end": 5084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5089,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5099,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 5167,
											"end": 5168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5143,
											"end": 5149,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5099,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5099,
											"end": 5170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5099,
											"end": 5170,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 5099,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5177,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5802,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 5183,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5327,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5313,
											"end": 5322,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5311,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5323,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5328,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5293,
											"end": 5412,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5293,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 5293,
											"end": 5412,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 5331,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 5331,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5293,
											"end": 5412,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 5293,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 5521,
											"end": 5528,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5501,
											"end": 5510,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5476,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 5476,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5476,
											"end": 5529,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 5476,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5466,
											"end": 5529,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5466,
											"end": 5529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5422,
											"end": 5539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5604,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 5649,
											"end": 5656,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5625,
											"end": 5647,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 5604,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5657,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 5604,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5657,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5549,
											"end": 5667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5732,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5777,
											"end": 5784,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5757,
											"end": 5766,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5732,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 5785,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5732,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5785,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5802,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5802,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5802,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5885,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5808,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5845,
											"end": 5852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5891,
											"end": 6013,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5891,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5964,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5964,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5964,
											"end": 5988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5964,
											"end": 5988,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5964,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5957,
											"end": 5962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5989,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5944,
											"end": 6007,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 6007,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5944,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5891,
											"end": 6013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5891,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6158,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6019,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6065,
											"end": 6070,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6146,
											"end": 6151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6119,
											"end": 6152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6152,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6119,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6158,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6158,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6493,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 6164,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6272,
											"end": 6274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6251,
											"end": 6258,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6270,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6275,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6278,
											"end": 6357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6398,
											"end": 6399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 6468,
											"end": 6475,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6465,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6457,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6423,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6423,
											"end": 6476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6423,
											"end": 6476,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 6423,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6476,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6493,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6617,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 6499,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6586,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 6604,
											"end": 6609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6586,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6586,
											"end": 6610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6586,
											"end": 6610,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 6586,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6574,
											"end": 6611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6845,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 6623,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6756,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 6835,
											"end": 6836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 6767,
											"end": 6838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6838,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 6767,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6845,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6623,
											"end": 6845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 7325,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 6851,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6919,
											"end": 6925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6978,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6964,
											"end": 6973,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 6962,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 6974,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6947,
											"end": 6979,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6944,
											"end": 7063,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6944,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 6944,
											"end": 7063,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6982,
											"end": 7061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6944,
											"end": 7063,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 6944,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 7172,
											"end": 7179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7161,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7148,
											"end": 7170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 7127,
											"end": 7180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 7180,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 7180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7073,
											"end": 7190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7229,
											"end": 7231,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7276,
											"end": 7298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 7255,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 7255,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7200,
											"end": 7318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 7325,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 7325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 7325,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 7325,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 7325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 7325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7417,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 7331,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7366,
											"end": 7373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7410,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7399,
											"end": 7404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7411,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7384,
											"end": 7411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7384,
											"end": 7411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7417,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7423,
											"end": 7535,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 7423,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7506,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 7522,
											"end": 7527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7506,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 7506,
											"end": 7528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7506,
											"end": 7528,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 7506,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7504,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7494,
											"end": 7529,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7423,
											"end": 7535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7423,
											"end": 7535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7423,
											"end": 7535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7541,
											"end": 7755,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 7541,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7630,
											"end": 7634,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7653,
											"end": 7671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7645,
											"end": 7671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7645,
											"end": 7671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 7745,
											"end": 7746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7734,
											"end": 7743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7730,
											"end": 7747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7721,
											"end": 7727,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 7681,
											"end": 7748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 7681,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7541,
											"end": 7755,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7541,
											"end": 7755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7541,
											"end": 7755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7541,
											"end": 7755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7541,
											"end": 7755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 8090,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 7761,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7820,
											"end": 7826,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7857,
											"end": 7866,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7855,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7867,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7840,
											"end": 7872,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7956,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7837,
											"end": 7956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7875,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 7875,
											"end": 7954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7954,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7875,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7956,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7837,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7995,
											"end": 7996,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 8065,
											"end": 8072,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8056,
											"end": 8062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8045,
											"end": 8054,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8020,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8020,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8020,
											"end": 8073,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 8020,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 8083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 8090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 8090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 8090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 8090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 8090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8425,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 8096,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8155,
											"end": 8161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8206,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8190,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8179,
											"end": 8202,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8175,
											"end": 8207,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 8172,
											"end": 8291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 8210,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 8210,
											"end": 8289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8210,
											"end": 8289,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 8210,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8172,
											"end": 8291,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 8172,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8331,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 8400,
											"end": 8407,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8380,
											"end": 8389,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8376,
											"end": 8398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8355,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8345,
											"end": 8408,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8345,
											"end": 8408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8301,
											"end": 8418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8425,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8425,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8905,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 8431,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8505,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8513,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8558,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8544,
											"end": 8553,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8535,
											"end": 8542,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8531,
											"end": 8554,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8559,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8643,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8524,
											"end": 8643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 8562,
											"end": 8641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 8562,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8524,
											"end": 8643,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8524,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8682,
											"end": 8683,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8752,
											"end": 8759,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8743,
											"end": 8749,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8728,
											"end": 8750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8707,
											"end": 8760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 8760,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8707,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8697,
											"end": 8760,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8697,
											"end": 8760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8811,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8835,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8871,
											"end": 8877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8856,
											"end": 8878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8835,
											"end": 8888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8888,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8835,
											"end": 8888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8825,
											"end": 8888,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8825,
											"end": 8888,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 8898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8905,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8905,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8911,
											"end": 9091,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 8911,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9036,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8949,
											"end": 9037,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9056,
											"end": 9060,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 9053,
											"end": 9054,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9046,
											"end": 9061,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9080,
											"end": 9084,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9077,
											"end": 9078,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9070,
											"end": 9085,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9417,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 9097,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9141,
											"end": 9147,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9178,
											"end": 9179,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9172,
											"end": 9176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9180,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9158,
											"end": 9180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9158,
											"end": 9180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9226,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9219,
											"end": 9223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9227,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9246,
											"end": 9264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9236,
											"end": 9317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9302,
											"end": 9306,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 9294,
											"end": 9300,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9290,
											"end": 9307,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9307,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9317,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9236,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9356,
											"end": 9362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9353,
											"end": 9367,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9330,
											"end": 9368,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9327,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 9327,
											"end": 9411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9383,
											"end": 9401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9327,
											"end": 9411,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 9327,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9148,
											"end": 9417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9417,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9423,
											"end": 9603,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9423,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9471,
											"end": 9548,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9468,
											"end": 9469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9549,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9572,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9565,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9558,
											"end": 9573,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9592,
											"end": 9596,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9589,
											"end": 9590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9597,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9800,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 9609,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9649,
											"end": 9652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 9686,
											"end": 9687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 9668,
											"end": 9688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9688,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 9702,
											"end": 9722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9722,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9731,
											"end": 9747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9731,
											"end": 9747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9769,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 9764,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9770,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9793,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9757,
											"end": 9793,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9773,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9793,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9757,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9800,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9800,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9806,
											"end": 9984,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9806,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9946,
											"end": 9976,
											"name": "PUSH",
											"source": 12,
											"value": "4261736564546F6B656E3A20726577617264206E6F7420726561647900000000"
										},
										{
											"begin": 9942,
											"end": 9943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 9940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 9944,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9923,
											"end": 9977,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9806,
											"end": 9984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9806,
											"end": 9984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9990,
											"end": 10356,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9990,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10132,
											"end": 10135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 10217,
											"end": 10219,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 10212,
											"end": 10215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 10153,
											"end": 10220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10220,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 10153,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10220,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 10318,
											"end": 10321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 10229,
											"end": 10322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10322,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 10229,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10347,
											"end": 10349,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10342,
											"end": 10345,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10338,
											"end": 10350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10331,
											"end": 10350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10331,
											"end": 10350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9990,
											"end": 10356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9990,
											"end": 10356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9990,
											"end": 10356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9990,
											"end": 10356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10362,
											"end": 10781,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 10362,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10528,
											"end": 10532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10566,
											"end": 10568,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10555,
											"end": 10564,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10551,
											"end": 10569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10543,
											"end": 10569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10543,
											"end": 10569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10624,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10613,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10605,
											"end": 10625,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10599,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10586,
											"end": 10603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10643,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 10769,
											"end": 10773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10643,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 10643,
											"end": 10774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10643,
											"end": 10774,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 10643,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10774,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10362,
											"end": 10781,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10362,
											"end": 10781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10362,
											"end": 10781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10362,
											"end": 10781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10787,
											"end": 10960,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 10787,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH",
											"source": 12,
											"value": "4261736564546F6B656E3A20626C61636B6C6973746564000000000000000000"
										},
										{
											"begin": 10923,
											"end": 10924,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10911,
											"end": 10925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10904,
											"end": 10953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10787,
											"end": 10960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10787,
											"end": 10960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 11332,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 10966,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11129,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 11193,
											"end": 11195,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 11188,
											"end": 11191,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 11129,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11196,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 11129,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11122,
											"end": 11196,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11122,
											"end": 11196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11205,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 11294,
											"end": 11297,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11205,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 11205,
											"end": 11298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11205,
											"end": 11298,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 11205,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11323,
											"end": 11325,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11318,
											"end": 11321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11326,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11307,
											"end": 11326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11307,
											"end": 11326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 11332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 11332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 11332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 11332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11338,
											"end": 11757,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 11338,
											"end": 11757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11504,
											"end": 11508,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11544,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11531,
											"end": 11540,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11527,
											"end": 11545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 11545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11519,
											"end": 11545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 11600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 11601,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11577,
											"end": 11578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11566,
											"end": 11575,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11562,
											"end": 11579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11555,
											"end": 11602,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 11745,
											"end": 11749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 11619,
											"end": 11750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11750,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 11619,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11611,
											"end": 11750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11611,
											"end": 11750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11338,
											"end": 11757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11338,
											"end": 11757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11338,
											"end": 11757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11338,
											"end": 11757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11881,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 11763,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11850,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 11868,
											"end": 11873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11850,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 11850,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11850,
											"end": 11874,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 11850,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 11848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11838,
											"end": 11875,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12036,
											"end": 12040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12074,
											"end": 12076,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12063,
											"end": 12072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12059,
											"end": 12077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12087,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 12155,
											"end": 12156,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12140,
											"end": 12157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12131,
											"end": 12137,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12087,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12087,
											"end": 12158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12087,
											"end": 12158,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 12087,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 12236,
											"end": 12238,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12225,
											"end": 12234,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12212,
											"end": 12218,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12168,
											"end": 12240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12240,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 12168,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12250,
											"end": 12322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 12318,
											"end": 12320,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12307,
											"end": 12316,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12294,
											"end": 12300,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12250,
											"end": 12322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12250,
											"end": 12322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12250,
											"end": 12322,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 12250,
											"end": 12322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 12329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 12557,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 12335,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12428,
											"end": 12432,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12466,
											"end": 12468,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12455,
											"end": 12464,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12451,
											"end": 12469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12443,
											"end": 12469,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12443,
											"end": 12469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12479,
											"end": 12550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 12547,
											"end": 12548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 12545,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12532,
											"end": 12549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12523,
											"end": 12529,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12479,
											"end": 12550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12479,
											"end": 12550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12479,
											"end": 12550,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 12479,
											"end": 12550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 12557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 12557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 12557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 12557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 12557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12895,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 12563,
											"end": 12895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12684,
											"end": 12688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12722,
											"end": 12724,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12711,
											"end": 12720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 12803,
											"end": 12804,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12801,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12788,
											"end": 12805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12735,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 12884,
											"end": 12886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12860,
											"end": 12866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12816,
											"end": 12888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12895,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12895,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12901,
											"end": 13069,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12901,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13041,
											"end": 13061,
											"name": "PUSH",
											"source": 12,
											"value": "4261736564546F6B656E3A207061757365640000000000000000000000000000"
										},
										{
											"begin": 13037,
											"end": 13038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13018,
											"end": 13062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12901,
											"end": 13069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12901,
											"end": 13069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13220,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 13302,
											"end": 13304,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 13297,
											"end": 13300,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 13238,
											"end": 13305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13231,
											"end": 13305,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13231,
											"end": 13305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 13403,
											"end": 13406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 13314,
											"end": 13407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13427,
											"end": 13430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13416,
											"end": 13435,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13416,
											"end": 13435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13613,
											"end": 13617,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13651,
											"end": 13653,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13640,
											"end": 13649,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13636,
											"end": 13654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13628,
											"end": 13654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13628,
											"end": 13654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13700,
											"end": 13709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13694,
											"end": 13698,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13690,
											"end": 13710,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13686,
											"end": 13687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13671,
											"end": 13688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13664,
											"end": 13711,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13854,
											"end": 13858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 13728,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13720,
											"end": 13859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13720,
											"end": 13859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13872,
											"end": 14052,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 13872,
											"end": 14052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14044,
											"name": "PUSH",
											"source": 12,
											"value": "4261736564546F6B656E3A2073656E64657220626C61636B6C69737465640000"
										},
										{
											"begin": 14008,
											"end": 14009,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13996,
											"end": 14010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13989,
											"end": 14045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13872,
											"end": 14052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13872,
											"end": 14052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14424,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 14058,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14200,
											"end": 14203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14221,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14285,
											"end": 14287,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 14280,
											"end": 14283,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14221,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 14221,
											"end": 14288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14221,
											"end": 14288,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14221,
											"end": 14288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14214,
											"end": 14288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14214,
											"end": 14288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14386,
											"end": 14389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 14297,
											"end": 14390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14390,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14297,
											"end": 14390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14415,
											"end": 14417,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14410,
											"end": 14413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14406,
											"end": 14418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14399,
											"end": 14418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14399,
											"end": 14418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14849,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 14430,
											"end": 14849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14596,
											"end": 14600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14634,
											"end": 14636,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14623,
											"end": 14632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14619,
											"end": 14637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14611,
											"end": 14637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14611,
											"end": 14637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14683,
											"end": 14692,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14677,
											"end": 14681,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14673,
											"end": 14693,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14669,
											"end": 14670,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14658,
											"end": 14667,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14654,
											"end": 14671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14647,
											"end": 14694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14711,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 14837,
											"end": 14841,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14711,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 14711,
											"end": 14842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14711,
											"end": 14842,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 14711,
											"end": 14842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14703,
											"end": 14842,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14703,
											"end": 14842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14849,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14855,
											"end": 15075,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 14855,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14995,
											"end": 15029,
											"name": "PUSH",
											"source": 12,
											"value": "4261736564546F6B656E3A20726563697069656E7420626C61636B6C69737465"
										},
										{
											"begin": 14991,
											"end": 14992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14983,
											"end": 14989,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14979,
											"end": 14993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14972,
											"end": 15030,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15064,
											"end": 15067,
											"name": "PUSH",
											"source": 12,
											"value": "6400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15059,
											"end": 15061,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15051,
											"end": 15057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15047,
											"end": 15062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15040,
											"end": 15068,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14855,
											"end": 15075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14855,
											"end": 15075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15081,
											"end": 15447,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 15081,
											"end": 15447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15223,
											"end": 15226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15244,
											"end": 15311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15308,
											"end": 15310,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 15303,
											"end": 15306,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15244,
											"end": 15311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 15244,
											"end": 15311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15244,
											"end": 15311,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15244,
											"end": 15311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15311,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15320,
											"end": 15413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 15409,
											"end": 15412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15320,
											"end": 15413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 15320,
											"end": 15413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15320,
											"end": 15413,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 15320,
											"end": 15413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15438,
											"end": 15440,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15433,
											"end": 15436,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15429,
											"end": 15441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15081,
											"end": 15447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15081,
											"end": 15447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15081,
											"end": 15447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15081,
											"end": 15447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15453,
											"end": 15872,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 15453,
											"end": 15872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15619,
											"end": 15623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15657,
											"end": 15659,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15646,
											"end": 15655,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15642,
											"end": 15660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15634,
											"end": 15660,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15634,
											"end": 15660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15706,
											"end": 15715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15696,
											"end": 15716,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 15693,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15681,
											"end": 15690,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15677,
											"end": 15694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15670,
											"end": 15717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 15860,
											"end": 15864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 15734,
											"end": 15865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15865,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 15734,
											"end": 15865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 15865,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15726,
											"end": 15865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15453,
											"end": 15872,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15453,
											"end": 15872,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15453,
											"end": 15872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15453,
											"end": 15872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/erc20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CLAIM_COOLDOWN()": "37c909ec",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"REWARD_AMOUNT()": "cf849442",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blacklisted(address)": "dbac26e9",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"claimReward()": "b88a802f",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lastClaim(address)": "5c16e15e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setBlacklist(address,bool)": "153b0d1e",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/erc20.sol\":\"BasedToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/erc20.sol\":{\"keccak256\":\"0x17f83c4dd373d6c90badf5d086a81e32bce335518b4eebf6ecea6ba06c2979fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf58f0be575ea54f9b3d9c3426808bfb22e2055ce9dfecbcbf153ffd6232e12d\",\"dweb:/ipfs/QmXVihjHWmjodgjXowfiKmxYsXTw5yMgKU8v4WGkQpu6D8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 539,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 545,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 547,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 549,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 551,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1220,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 27,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 1388,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "blacklisted",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1392,
								"contract": "contracts/erc20.sol:BasedToken",
								"label": "lastClaim",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/erc20.sol:BasedToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/erc20.sol:BasedToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1211
						],
						"ERC165": [
							1343
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1355
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1212,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1211,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1344,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1355,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1343,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1211,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1343,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1343,
								1355,
								379,
								1211
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1342
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							516
						],
						"IERC20Errors": [
							421
						],
						"IERC721Errors": [
							469
						]
					},
					"id": 517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 391,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 396,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 401,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 410,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 415,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 420,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 517,
							"src": "280:1764:2",
							"usedErrors": [
								391,
								396,
								401,
								410,
								415,
								420
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 422,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 427,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 432,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 441,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 446,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 451,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 458,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 463,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 468,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 517,
							"src": "2190:2092:2",
							"usedErrors": [
								427,
								432,
								441,
								446,
								451,
								458,
								463,
								468
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 516,
							"linearizedBaseContracts": [
								516
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 481,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 486,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 491,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 498,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 503,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 508,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 515,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 517,
							"src": "4430:2107:2",
							"usedErrors": [
								481,
								486,
								491,
								498,
								503,
								508,
								515
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1211
						],
						"ERC20": [
							1031
						],
						"IERC20": [
							1109
						],
						"IERC20Errors": [
							421
						],
						"IERC20Metadata": [
							1181
						]
					},
					"id": 1032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1110,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 519,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1109,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1182,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 521,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1181,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 524,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1212,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 523,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1211,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 517,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 525,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 528,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1211,
										"src": "1133:7:3"
									},
									"id": 529,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 530,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1109,
										"src": "1142:6:3"
									},
									"id": 531,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 532,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1181,
										"src": "1150:14:3"
									},
									"id": 533,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 534,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "1166:12:3"
									},
									"id": 535,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 527,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1031,
							"linearizedBaseContracts": [
								1031,
								421,
								1181,
								1109,
								1211
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 539,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1031,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 538,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 536,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 537,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 545,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1031,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 544,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 540,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 543,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 541,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 542,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 547,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1031,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 546,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 549,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1031,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 548,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 551,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1031,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 550,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 559,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 560,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 568,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 1031,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1168
									],
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 574,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 573,
												"id": 575,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 1031,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1174
									],
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 583,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 582,
												"id": 584,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 1031,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1180
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 589,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 1031,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1058
									],
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "2864:36:3",
										"statements": [
											{
												"expression": {
													"id": 601,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "2881:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 600,
												"id": 602,
												"nodeType": "Return",
												"src": "2874:19:3"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:3"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2855:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:3"
									},
									"scope": 1031,
									"src": "2803:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1066
									],
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "3007:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 612,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "3024:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 614,
													"indexExpression": {
														"id": 613,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "3034:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 611,
												"id": 615,
												"nodeType": "Return",
												"src": "3017:25:3"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2952:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2998:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:3"
									},
									"scope": 1031,
									"src": "2933:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "3319:103:3",
										"statements": [
											{
												"assignments": [
													628
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "3329:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 627,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 629,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "3345:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "3384:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "3388:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "3367:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 626,
												"id": 639,
												"nodeType": "Return",
												"src": "3404:11:3"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3262:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3274:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "3313:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:3"
									},
									"scope": 1031,
									"src": "3244:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1086
									],
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "3544:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 651,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "3561:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 653,
														"indexExpression": {
															"id": 652,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "3573:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "3580:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 650,
												"id": 656,
												"nodeType": "Return",
												"src": "3554:34:3"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3474:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3489:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3535:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:3"
									},
									"scope": 1031,
									"src": "3455:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1096
									],
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "3981:107:3",
										"statements": [
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "3991:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 668,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 670,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4007:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "4038:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "4045:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "4054:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 673,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															922,
															982
														],
														"referencedDeclaration": 922,
														"src": "4029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 667,
												"id": 680,
												"nodeType": "Return",
												"src": "4070:11:3"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "3919:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "3936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "3975:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:3"
									},
									"scope": 1031,
									"src": "3902:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1108
									],
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "4773:151:3",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "4783:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 694,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 696,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4801:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "4839:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "4845:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "4854:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 699,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "4823:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "4880:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "4886:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "4890:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 705,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "4870:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 693,
												"id": 712,
												"nodeType": "Return",
												"src": "4906:11:3"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4702:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4716:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4728:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4767:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:3"
									},
									"scope": 1031,
									"src": "4680:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "5366:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "5380:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 725,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "5376:86:3",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "5400:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 731,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 730,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "5421:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 736,
															"nodeType": "RevertStatement",
															"src": "5414:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "5475:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 740,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 753,
												"nodeType": "IfStatement",
												"src": "5471:86:3",
												"trueBody": {
													"id": 752,
													"nodeType": "Block",
													"src": "5493:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 746,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 745,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "5514:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 751,
															"nodeType": "RevertStatement",
															"src": "5507:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "5580:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "5584:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 754,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "5566:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "5316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "5330:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "5342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:3"
									},
									"scope": 1031,
									"src": "5297:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "5987:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 771,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "6001:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 772,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 808,
													"nodeType": "Block",
													"src": "6175:362:3",
													"statements": [
														{
															"assignments": [
																783
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 783,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 808,
																	"src": "6189:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 782,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 787,
															"initialValue": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "6211:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "6221:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 788,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "6244:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 789,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "6258:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 798,
															"nodeType": "IfStatement",
															"src": "6240:115:3",
															"trueBody": {
																"id": 797,
																"nodeType": "Block",
																"src": "6265:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 792,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 764,
																					"src": "6315:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 793,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "6321:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 794,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 768,
																					"src": "6334:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 791,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "6290:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 796,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:3"
																	}
																]
															}
														},
														{
															"id": 807,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 799,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "6475:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 801,
																			"indexExpression": {
																				"id": 800,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "6485:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 802,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "6493:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 803,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "6507:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 806,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:3"
																}
															]
														}
													]
												},
												"id": 809,
												"nodeType": "IfStatement",
												"src": "5997:540:3",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "6021:148:3",
													"statements": [
														{
															"expression": {
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 777,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "6137:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 778,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "6153:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 780,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "6551:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "6766:206:3",
													"statements": [
														{
															"id": 828,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 822,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "6925:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 824,
																			"indexExpression": {
																				"id": 823,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "6935:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 825,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "6942:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 827,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:3"
																}
															]
														}
													]
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "6547:425:3",
												"trueBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "6569:191:3",
													"statements": [
														{
															"id": 820,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 816,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "6714:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 817,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "6730:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 819,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 832,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "6996:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "7002:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "7006:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 831,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "6987:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "EmitStatement",
												"src": "6982:30:3"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5929:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5943:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5955:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:3"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:3"
									},
									"scope": 1031,
									"src": "5912:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "7418:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "7432:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "7428:91:3",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "7455:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 853,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 852,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "7476:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 858,
															"nodeType": "RevertStatement",
															"src": "7469:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 862,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "7548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "7557:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:3"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "7377:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "7394:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:3"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:3"
									},
									"scope": 1031,
									"src": "7362:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "7944:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "7958:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 880,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "7954:89:3",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "7981:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 886,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 885,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "8002:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 891,
															"nodeType": "RevertStatement",
															"src": "7995:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8060:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 896,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "8081:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "8052:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:3"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "7903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "7920:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:3"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:3"
									},
									"scope": 1031,
									"src": "7888:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "8704:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 915,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "8723:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "8730:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "8739:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 914,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															922,
															982
														],
														"referencedDeclaration": 982,
														"src": "8714:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:3"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "8648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "8663:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "8680:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:3"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:3"
									},
									"scope": 1031,
									"src": "8630:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "9703:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 934,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "9717:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 935,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 948,
												"nodeType": "IfStatement",
												"src": "9713:89:3",
												"trueBody": {
													"id": 947,
													"nodeType": "Block",
													"src": "9738:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 941,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 940,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "9759:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 946,
															"nodeType": "RevertStatement",
															"src": "9752:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 949,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "9815:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 950,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 963,
												"nodeType": "IfStatement",
												"src": "9811:90:3",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "9838:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 956,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 955,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "9859:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 961,
															"nodeType": "RevertStatement",
															"src": "9852:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 964,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9910:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 967,
															"indexExpression": {
																"id": 965,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "9922:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 968,
														"indexExpression": {
															"id": 966,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "9929:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 969,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "9940:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:3"
											},
											{
												"condition": {
													"id": 972,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 931,
													"src": "9959:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "9955:76:3",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "9970:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 974,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "9998:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "10005:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 976,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "10014:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 973,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "9989:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 978,
															"nodeType": "EmitStatement",
															"src": "9984:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "9623:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "9638:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "9655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "9670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:3"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:3"
									},
									"scope": 1031,
									"src": "9605:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "10408:387:3",
										"statements": [
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "10418:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10455:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "10462:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 994,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "10445:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10484:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1001,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1000,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "10480:309:3",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "10522:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1006,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10540:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "10559:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1016,
															"nodeType": "IfStatement",
															"src": "10536:130:3",
															"trueBody": {
																"id": 1015,
																"nodeType": "Block",
																"src": "10566:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1010,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "10618:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "10627:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1012,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "10645:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1009,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 410,
																				"src": "10591:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1014,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:3"
																	}
																]
															}
														},
														{
															"id": 1026,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1018,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 985,
																				"src": "10716:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1019,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "10723:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1020,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "10732:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1021,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "10751:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1017,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				922,
																				982
																			],
																			"referencedDeclaration": 982,
																			"src": "10707:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1025,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10359:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10376:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:3"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:3"
									},
									"scope": 1031,
									"src": "10319:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1032,
							"src": "1106:9691:3",
							"usedErrors": [
								391,
								396,
								401,
								410,
								415,
								420
							],
							"usedEvents": [
								1043,
								1052
							]
						}
					],
					"src": "105:10693:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1109
						]
					},
					"id": 1110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1033,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1034,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1109,
							"linearizedBaseContracts": [
								1109
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1043,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1052,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 1109,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 1109,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 1109,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 1109,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1093,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 1109,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 1109,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1110,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1043,
								1052
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1211
						],
						"ERC20": [
							1031
						],
						"ERC20Burnable": [
							1155
						]
					},
					"id": 1156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1156,
							"sourceUnit": 1032,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1112,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1031,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1156,
							"sourceUnit": 1212,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1114,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1211,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1117,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1211,
										"src": "483:7:5"
									},
									"id": 1118,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 1119,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1031,
										"src": "492:5:5"
									},
									"id": 1120,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1116,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1155,
							"linearizedBaseContracts": [
								1155,
								1031,
								421,
								1181,
								1109,
								1211
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1127,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 1155,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1143,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 1155,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1156,
							"src": "448:733:5",
							"usedErrors": [
								391,
								396,
								401,
								410,
								415,
								420
							],
							"usedEvents": [
								1043,
								1052
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1109
						],
						"IERC20Metadata": [
							1181
						]
					},
					"id": 1182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1157,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 1110,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1158,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1109,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1161,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1109,
										"src": "306:6:6"
									},
									"id": 1162,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1160,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1181,
							"linearizedBaseContracts": [
								1181,
								1109
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1165,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1181,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1181,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1177,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1181,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1182,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1043,
								1052
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1211
						]
					},
					"id": 1212,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1184,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1211,
							"linearizedBaseContracts": [
								1211
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1189,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1191,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1211,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1197,
												"id": 1200,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1211,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1206,
												"id": 1208,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1211,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1212,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1211
						],
						"Pausable": [
							1319
						]
					},
					"id": 1320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1320,
							"sourceUnit": 1212,
							"src": "128:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1214,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1211,
										"src": "136:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1217,
										"name": "Context",
										"nameLocations": [
											"645:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1211,
										"src": "645:7:8"
									},
									"id": 1218,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:8"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1216,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1319,
							"linearizedBaseContracts": [
								1319,
								1211
							],
							"name": "Pausable",
							"nameLocation": "633:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1220,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1319,
									"src": "659:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1219,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1225,
									"name": "Paused",
									"nameLocation": "770:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "777:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:8"
									},
									"src": "764:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1230,
									"name": "Unpaused",
									"nameLocation": "881:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "890:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:8"
									},
									"src": "875:32:8"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:8",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1233,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:8"
									},
									"src": "994:22:8"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:8",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1236,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:8"
									},
									"src": "1107:22:8"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "1340:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1239,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "1350:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:8"
											},
											{
												"id": 1242,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:8"
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1244,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:8"
									},
									"src": "1315:72:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "1587:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1247,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "1597:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:8"
											},
											{
												"id": 1250,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:8"
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1252,
									"name": "whenPaused",
									"nameLocation": "1574:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:8"
									},
									"src": "1565:66:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "1779:31:8",
										"statements": [
											{
												"expression": {
													"id": 1258,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1220,
													"src": "1796:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1259,
												"nodeType": "Return",
												"src": "1789:14:8"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1773:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:8"
									},
									"scope": 1319,
									"src": "1726:84:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "1929:77:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1265,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "1943:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "IfStatement",
												"src": "1939:61:8",
												"trueBody": {
													"id": 1270,
													"nodeType": "Block",
													"src": "1953:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1267,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "1974:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1269,
															"nodeType": "RevertStatement",
															"src": "1967:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:8",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:8"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:8"
									},
									"scope": 1319,
									"src": "1878:128:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "2126:78:8",
										"statements": [
											{
												"condition": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:8",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1277,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "2141:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "2136:62:8",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "2151:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1280,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "2172:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1282,
															"nodeType": "RevertStatement",
															"src": "2165:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:8",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:8"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:8"
									},
									"scope": 1319,
									"src": "2078:126:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "2388:66:8",
										"statements": [
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "2398:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1297,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "2434:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1296,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "2427:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "EmitStatement",
												"src": "2422:25:8"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1244,
												"src": "2374:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:8"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:8"
									},
									"scope": 1319,
									"src": "2339:115:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "2634:69:8",
										"statements": [
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1308,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "2644:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1313,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "2683:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1312,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "2674:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "EmitStatement",
												"src": "2669:27:8"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1305,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "2623:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:8"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:8"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:8"
									},
									"scope": 1319,
									"src": "2586:117:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1320,
							"src": "615:2090:8",
							"usedErrors": [
								1233,
								1236
							],
							"usedEvents": [
								1225,
								1230
							]
						}
					],
					"src": "102:2604:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1343
						],
						"IERC165": [
							1355
						]
					},
					"id": 1344,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1344,
							"sourceUnit": 1356,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1322,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1355,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1325,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1355,
										"src": "688:7:9"
									},
									"id": 1326,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1324,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1343,
							"linearizedBaseContracts": [
								1343,
								1355
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1354
									],
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "812:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1334,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "829:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1336,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1355_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1355_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1335,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1355",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1340,
												"nodeType": "Return",
												"src": "822:47:9"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:9",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "757:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "806:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:9"
									},
									"scope": 1343,
									"src": "730:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1344,
							"src": "660:218:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1355
						]
					},
					"id": 1356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1345,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1346,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1355,
							"linearizedBaseContracts": [
								1355
							],
							"name": "IERC165",
							"nameLocation": "433:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "819:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:10"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "862:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:10"
									},
									"scope": 1355,
									"src": "792:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1356,
							"src": "423:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:10"
				},
				"id": 10
			},
			"contracts/erc20.sol": {
				"ast": {
					"absolutePath": "contracts/erc20.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"BasedToken": [
							1576
						],
						"Context": [
							1211
						],
						"ERC165": [
							1343
						],
						"ERC20": [
							1031
						],
						"ERC20Burnable": [
							1155
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1355
						],
						"IERC20": [
							1109
						],
						"IERC20Errors": [
							421
						],
						"IERC20Metadata": [
							1181
						],
						"Pausable": [
							1319
						]
					},
					"id": 1577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 1032,
							"src": "58:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 1156,
							"src": "114:74:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 1360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 1320,
							"src": "189:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 297,
							"src": "242:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1362,
										"name": "ERC20",
										"nameLocations": [
											"325:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1031,
										"src": "325:5:11"
									},
									"id": 1363,
									"nodeType": "InheritanceSpecifier",
									"src": "325:5:11"
								},
								{
									"baseName": {
										"id": 1364,
										"name": "ERC20Burnable",
										"nameLocations": [
											"332:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1155,
										"src": "332:13:11"
									},
									"id": 1365,
									"nodeType": "InheritanceSpecifier",
									"src": "332:13:11"
								},
								{
									"baseName": {
										"id": 1366,
										"name": "Pausable",
										"nameLocations": [
											"347:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "347:8:11"
									},
									"id": 1367,
									"nodeType": "InheritanceSpecifier",
									"src": "347:8:11"
								},
								{
									"baseName": {
										"id": 1368,
										"name": "AccessControl",
										"nameLocations": [
											"357:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "357:13:11"
									},
									"id": 1369,
									"nodeType": "InheritanceSpecifier",
									"src": "357:13:11"
								}
							],
							"canonicalName": "BasedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1576,
							"linearizedBaseContracts": [
								1576,
								296,
								1343,
								1355,
								379,
								1319,
								1155,
								1031,
								421,
								1181,
								1109,
								1211
							],
							"name": "BasedToken",
							"nameLocation": "311:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1374,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "401:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "377:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1370,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1372,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "425:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1371,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "415:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "415:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1379,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "469:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "445:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1375,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "445:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1377,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "493:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1376,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "483:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "483:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cf849442",
									"id": 1381,
									"mutability": "immutable",
									"name": "REWARD_AMOUNT",
									"nameLocation": "539:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "514:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "514:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "37c909ec",
									"id": 1384,
									"mutability": "constant",
									"name": "CLAIM_COOLDOWN",
									"nameLocation": "582:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "558:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "558:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "599:6:11",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dbac26e9",
									"id": 1388,
									"mutability": "mutable",
									"name": "blacklisted",
									"nameLocation": "644:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "612:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1387,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1385,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "620:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "612:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1386,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "631:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c16e15e",
									"id": 1392,
									"mutability": "mutable",
									"name": "lastClaim",
									"nameLocation": "696:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "661:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1391,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1389,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "669:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "661:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1390,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "680:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "776:254:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1402,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "797:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "817:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "821:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "817:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1401,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "786:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "786:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "849:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1409,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "862:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "866:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "862:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1407,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "838:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "838:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "894:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "907:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "911:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "907:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1413,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "883:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "883:35:11"
											},
											{
												"expression": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1419,
														"name": "REWARD_AMOUNT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "929:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "950:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1422,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "954:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "954:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "950:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "945:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "929:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "929:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1429,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "980:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "984:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "980:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "992:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1433,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "1012:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1012:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1008:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "992:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1428,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "974:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "974:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "974:49:11"
											}
										]
									},
									"id": 1440,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4261736564546f6b656e",
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "753:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eb2d6a20a95be6f5c1eaaea46ecc584d4bf0ec65e08cc954be025d53e08cd290",
														"typeString": "literal_string \"BasedToken\""
													},
													"value": "BasedToken"
												},
												{
													"hexValue": "4241534544",
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "767:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e8b32d93335e62e8e20b551239ae0fcb4dbbd354ec97d5282de28af5fbed6ebf",
														"typeString": "literal_string \"BASED\""
													},
													"value": "BASED"
												}
											],
											"id": 1399,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1396,
												"name": "ERC20",
												"nameLocations": [
													"747:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1031,
												"src": "747:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "747:28:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "732:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "724:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:23:11"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:11"
									},
									"scope": 1576,
									"src": "712:318:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "1107:34:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1451,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "1123:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1127:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1450,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "1117:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1117:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "1117:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1447,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "1094:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1448,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1446,
												"name": "onlyRole",
												"nameLocations": [
													"1085:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1085:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:21:11"
										}
									],
									"name": "mint",
									"nameLocation": "1045:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1058:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1050:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1070:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1062:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:28:11"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:11"
									},
									"scope": 1576,
									"src": "1036:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "1193:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1462,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "1203:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1203:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "1203:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1459,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1379,
													"src": "1180:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1460,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1458,
												"name": "onlyRole",
												"nameLocations": [
													"1171:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1171:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1171:21:11"
										}
									],
									"name": "pause",
									"nameLocation": "1156:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1161:2:11"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:0:11"
									},
									"scope": 1576,
									"src": "1147:71:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "1272:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1472,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "1282:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "1282:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1469,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1379,
													"src": "1259:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1470,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1468,
												"name": "onlyRole",
												"nameLocations": [
													"1250:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1250:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1250:21:11"
										}
									],
									"name": "unpause",
									"nameLocation": "1233:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:2:11"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:11"
									},
									"scope": 1576,
									"src": "1224:75:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "1390:43:11",
										"statements": [
											{
												"expression": {
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1486,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "1400:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1488,
														"indexExpression": {
															"id": 1487,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "1412:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1400:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1489,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "1420:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1400:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "1400:26:11"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1483,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1370:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1482,
												"name": "onlyRole",
												"nameLocations": [
													"1361:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1361:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1361:28:11"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "1314:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1335:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1327:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1346:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1341:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1341:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:27:11"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:11"
									},
									"scope": 1576,
									"src": "1305:128:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "1469:311:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1497,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1500:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1506:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1500:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1499,
																		"name": "lastClaim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "1519:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1502,
																	"indexExpression": {
																		"expression": {
																			"id": 1500,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1529:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1533:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1529:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1519:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1503,
																	"name": "CLAIM_COOLDOWN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "1543:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1519:38:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1500:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261736564546f6b656e3a20726577617264206e6f74207265616479",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1571:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5",
																"typeString": "literal_string \"BasedToken: reward not ready\""
															},
															"value": "BasedToken: reward not ready"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1d95cba8fa7b7279bef3d21be56b5c592e3723aa495ef17a9bbf109ddfbcbd5",
																"typeString": "literal_string \"BasedToken: reward not ready\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:132:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "1479:132:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1629:24:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1510,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "1630:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1513,
																"indexExpression": {
																	"expression": {
																		"id": 1511,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1642:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1646:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1642:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1630:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261736564546f6b656e3a20626c61636b6c6973746564",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1655:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4",
																"typeString": "literal_string \"BasedToken: blacklisted\""
															},
															"value": "BasedToken: blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b20ac2fdf4fc991baac450d3f4f90e93737054839969cdc27f3baa8fde2e0f4",
																"typeString": "literal_string \"BasedToken: blacklisted\""
															}
														],
														"id": 1509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1621:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1621:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "1621:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1698:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1702:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1698:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "REWARD_AMOUNT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "1710:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "1692:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1692:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "1692:32:11"
											},
											{
												"expression": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1524,
															"name": "lastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "1734:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1527,
														"indexExpression": {
															"expression": {
																"id": 1525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1744:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1748:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1744:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1734:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1528,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1758:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1764:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1758:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1734:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "1734:39:11"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "1448:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1459:2:11"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:11"
									},
									"scope": 1576,
									"src": "1439:341:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										838
									],
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "1893:242:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1911:9:11",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1544,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "1912:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1912:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261736564546f6b656e3a20706175736564",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1922:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870",
																"typeString": "literal_string \"BasedToken: paused\""
															},
															"value": "BasedToken: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de2342024d79d2f479eca12fb67521f46c94758cc382a6e193a8640a9c682870",
																"typeString": "literal_string \"BasedToken: paused\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1903:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1903:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "1903:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1961:18:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1551,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "1962:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1553,
																"indexExpression": {
																	"id": 1552,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "1974:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1962:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261736564546f6b656e3a2073656e64657220626c61636b6c6973746564",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1981:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe",
																"typeString": "literal_string \"BasedToken: sender blacklisted\""
															},
															"value": "BasedToken: sender blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77afd96530caaf4357238e82e92459a391bf11d7bff475d51b2876830aa245fe",
																"typeString": "literal_string \"BasedToken: sender blacklisted\""
															}
														],
														"id": 1550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1953:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1953:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "1953:61:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2032:16:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1559,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "2033:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1561,
																"indexExpression": {
																	"id": 1560,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "2045:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2033:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4261736564546f6b656e3a20726563697069656e7420626c61636b6c6973746564",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2050:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532",
																"typeString": "literal_string \"BasedToken: recipient blacklisted\""
															},
															"value": "BasedToken: recipient blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52af45314204476fef5d96412a439688959c9d0286854091e9a9d4833225d532",
																"typeString": "literal_string \"BasedToken: recipient blacklisted\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2024:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "2024:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1569,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "2111:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "2117:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "2121:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1566,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2097:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BasedToken_$1576_$",
																"typeString": "type(contract super BasedToken)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2103:7:11",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 838,
														"src": "2097:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "2097:31:11"
											}
										]
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1795:7:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1541,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1884:8:11"
									},
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1820:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1812:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1842:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1834:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1862:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1854:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:72:11"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1893:0:11"
									},
									"scope": 1576,
									"src": "1786:349:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1577,
							"src": "302:1835:11",
							"usedErrors": [
								306,
								309,
								391,
								396,
								401,
								410,
								415,
								420,
								1233,
								1236
							],
							"usedEvents": [
								318,
								327,
								336,
								1043,
								1052,
								1225,
								1230
							]
						}
					],
					"src": "32:2105:11"
				},
				"id": 11
			}
		}
	}
}